{"version":3,"file":"index.es.js","sources":["../src/utils.js","../src/hooks/useTable.js","../src/actions.js","../src/plugin-hooks/useExpanded.js","../src/filterTypes.js","../src/plugin-hooks/useFilters.js","../src/aggregations.js","../src/plugin-hooks/useGroupBy.js","../src/sortTypes.js","../src/plugin-hooks/useSortBy.js","../src/plugin-hooks/usePagination.js","../src/plugin-hooks/useRowSelect.js","../src/plugin-hooks/useRowState.js","../src/plugin-hooks/useColumnOrder.js","../src/plugin-hooks/useResizeColumns.js","../src/plugin-hooks/useAbsoluteLayout.js","../src/plugin-hooks/useBlockLayout.js"],"sourcesContent":["import React from 'react'\n\nexport const defaultColumn = {\n  Cell: ({ cell: { value = '' } }) => String(value),\n  show: true,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof window !== 'undefined' && process.env.NODE_ENV === 'production'\n    ? React.useLayoutEffect\n    : React.useEffect\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\nexport function decorateColumn(\n  column,\n  userDefaultColumn,\n  parent,\n  depth,\n  index\n) {\n  // Apply the userDefaultColumn\n  column = { ...defaultColumn, ...userDefaultColumn, ...column }\n\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  column = {\n    // Make sure there is a fallback header, just in case\n    Header: () => <>&nbsp;</>,\n    ...column,\n    // Materialize and override this stuff\n    id,\n    accessor,\n    parent,\n    depth,\n    index,\n  }\n\n  return column\n}\n\n// Build the visible columns, headers and flat column list\nexport function decorateColumnTree(columns, defaultColumn, parent, depth = 0) {\n  return columns.map((column, columnIndex) => {\n    column = decorateColumn(column, defaultColumn, parent, depth, columnIndex)\n    if (column.columns) {\n      column.columns = decorateColumnTree(\n        column.columns,\n        defaultColumn,\n        column,\n        depth + 1\n      )\n    }\n    return column\n  })\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(flatColumns, defaultColumn) {\n  const headerGroups = []\n\n  // Build each header group from the bottom up\n  const buildGroup = (columns, depth) => {\n    const headerGroup = {\n      headers: [],\n    }\n\n    const parentColumns = []\n\n    // Do any of these columns have parents?\n    const hasParents = columns.some(col => col.parent)\n\n    columns.forEach(column => {\n      // Are we the first column in this group?\n      const isFirst = !parentColumns.length\n\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      // If the column has a parent, add it if necessary\n      if (column.parent) {\n        const similarParentColumns = parentColumns.filter(\n          d => d.originalID === column.parent.id\n        )\n        if (isFirst || latestParentColumn.originalID !== column.parent.id) {\n          parentColumns.push({\n            ...column.parent,\n            originalID: column.parent.id,\n            id: [column.parent.id, similarParentColumns.length].join('_'),\n          })\n        }\n      } else if (hasParents) {\n        // If other columns have parents, we'll need to add a place holder if necessary\n        const originalID = [column.id, 'placeholder'].join('_')\n        const similarParentColumns = parentColumns.filter(\n          d => d.originalID === originalID\n        )\n        const placeholderColumn = decorateColumn(\n          {\n            originalID,\n            id: [column.id, 'placeholder', similarParentColumns.length].join(\n              '_'\n            ),\n            placeholderOf: column,\n          },\n          defaultColumn\n        )\n        if (\n          isFirst ||\n          latestParentColumn.originalID !== placeholderColumn.originalID\n        ) {\n          parentColumns.push(placeholderColumn)\n        }\n      }\n\n      // Establish the new headers[] relationship on the parent\n      if (column.parent || hasParents) {\n        latestParentColumn = [...parentColumns].reverse()[0]\n        latestParentColumn.headers = latestParentColumn.headers || []\n        if (!latestParentColumn.headers.includes(column)) {\n          latestParentColumn.headers.push(column)\n        }\n      }\n\n      column.totalHeaderCount = column.headers\n        ? column.headers.reduce(\n            (sum, header) => sum + header.totalHeaderCount,\n            0\n          )\n        : 1 // Leaf node columns take up at least one count\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    if (parentColumns.length) {\n      buildGroup(parentColumns, depth + 1)\n    }\n  }\n\n  buildGroup(flatColumns, 0)\n\n  return headerGroups.reverse()\n}\n\nexport function determineHeaderVisibility(instance) {\n  const { headers } = instance\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible\n      ? typeof column.show === 'function'\n        ? column.show(instance)\n        : !!column.show\n      : false\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const pathObj = makePathArray(path)\n  let val\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function defaultGroupByFn(rows, columnID) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnID]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    !!(() => {\n      let proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isFunctionComponent(component) {\n  return typeof component === 'function'\n}\n\nfunction isReactComponent(component) {\n  return isClassComponent(component) || isFunctionComponent(component)\n}\n\nexport const mergeProps = (...groups) => {\n  let props = {}\n  groups.forEach(({ style = {}, className, ...rest } = {}) => {\n    props = {\n      ...props,\n      ...rest,\n      style: {\n        ...(props.style || {}),\n        ...style,\n      },\n      className: [props.className, className].filter(Boolean).join(' '),\n    }\n  })\n  return props\n}\n\nexport const applyHooks = (hooks, initial, ...args) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, ...args)\n    if (typeof nextValue === 'undefined') {\n      throw new Error(\n        'React Table: A hook just returned undefined! This is not allowed.'\n      )\n    }\n    return nextValue\n  }, initial)\n\nexport const applyPropHooks = (hooks, ...args) =>\n  hooks.reduce((prev, next) => mergeProps(prev, next(...args)), {})\n\nexport const warnUnknownProps = props => {\n  if (Object.keys(props).length) {\n    throw new Error(\n      `Unknown options passed to useReactTable:\n\n${JSON.stringify(props, null, 2)}`\n    )\n  }\n}\n\nexport function sum(arr) {\n  return arr.reduce((prev, curr) => prev + curr, 0)\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(columns, childKey) {\n  const flatColumns = []\n\n  const recurse = columns => {\n    columns.forEach(d => {\n      if (!d[childKey]) {\n        flatColumns.push(d)\n      } else {\n        recurse(d[childKey])\n      }\n    })\n  }\n\n  recurse(columns)\n\n  return flatColumns\n}\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    throw new Error(`The plugin ${pluginName} was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      throw new Error(\n        `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n      )\n    }\n  })\n\n  afters.forEach(after => {\n    const afterIndex = plugins.findIndex(plugin => plugin.pluginName === after)\n    if (afterIndex > -1 && afterIndex < pluginIndex) {\n      throw new Error(\n        `React Table: The ${pluginName} plugin hook must be placed before the ${after} plugin hook!`\n      )\n    }\n  })\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    const key = row.path.join('.')\n\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) ||\n      expanded.includes(key)\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\n//\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(/\\[/g, '.')\n      .replace(/\\]/g, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n//\nimport {\n  applyHooks,\n  applyPropHooks,\n  mergeProps,\n  flexRender,\n  decorateColumnTree,\n  makeHeaderGroups,\n  flattenBy,\n  determineHeaderVisibility,\n} from '../utils'\n\nconst propTypes = {\n  // General\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  defaultColumn: PropTypes.object,\n  getSubRows: PropTypes.func,\n  getRowID: PropTypes.func,\n  debug: PropTypes.bool,\n}\n\nconst renderErr =\n  'You must specify a valid render component. This could be \"column.Cell\", \"column.Header\", \"column.Filter\", \"column.Aggregated\" or any other custom renderer component.'\n\nexport const defaultState = {}\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (old, newState) => newState\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowID = (row, index) => index\n\nexport const useTable = (props, ...plugins) => {\n  // Validate props\n  PropTypes.checkPropTypes(propTypes, props, 'property', 'useTable')\n\n  // Destructure props\n  let {\n    data,\n    columns: userColumns,\n    initialState = defaultInitialState,\n    state: userState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowID = defaultGetRowID,\n    reducer = defaultReducer,\n    debug,\n  } = props\n\n  debug = process.env.NODE_ENV === 'production' ? false : debug\n\n  // But use the users table state if provided\n  let [originalState, originalSetState] = React.useState({\n    ...defaultState,\n    ...initialState,\n  })\n\n  const state = React.useMemo(() => {\n    if (userState) {\n      const newState = {\n        ...originalState,\n      }\n      Object.keys(userState).forEach(key => {\n        newState[key] = userState[key]\n      })\n      return newState\n    }\n    return originalState\n  }, [originalState, userState])\n\n  const setState = React.useCallback(\n    (updater, type) => {\n      return originalSetState(old => {\n        const newState = typeof updater === 'function' ? updater(old) : updater\n        return reducer(old, newState, type)\n      })\n    },\n    [reducer]\n  )\n\n  // The table instance ref\n  let instanceRef = React.useRef({})\n\n  Object.assign(instanceRef.current, {\n    ...props,\n    data, // The raw data\n    state,\n    setState, // The resolved table state\n    plugins, // All resolved plugins\n    hooks: {\n      columnsBeforeHeaderGroups: [],\n      columnsBeforeHeaderGroupsDeps: [],\n      useBeforeDimensions: [],\n      useMain: [],\n      useRows: [],\n      prepareRow: [],\n      getTableProps: [],\n      getTableBodyProps: [],\n      getRowProps: [],\n      getHeaderGroupProps: [],\n      getHeaderProps: [],\n      getCellProps: [],\n    },\n  })\n\n  // Allow plugins to register hooks\n  if (process.env.NODE_ENV === 'development' && debug) console.time('plugins')\n\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(instanceRef.current.hooks)\n  })\n\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.timeEnd('plugins')\n\n  // Decorate All the columns\n  let columns = React.useMemo(\n    () => decorateColumnTree(userColumns, defaultColumn),\n    [defaultColumn, userColumns]\n  )\n\n  // Get the flat list of all columns andllow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let flatColumns = React.useMemo(() => {\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.time('hooks.columnsBeforeHeaderGroups')\n\n    let newColumns = applyHooks(\n      instanceRef.current.hooks.columnsBeforeHeaderGroups,\n      flattenBy(columns, 'columns'),\n      instanceRef.current\n    )\n\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.timeEnd('hooks.columnsBeforeHeaderGroups')\n    return newColumns\n  }, [\n    columns,\n    debug,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ...applyHooks(\n      instanceRef.current.hooks.columnsBeforeHeaderGroupsDeps,\n      [],\n      instanceRef.current\n    ),\n  ])\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () => makeHeaderGroups(flatColumns, defaultColumn),\n    [defaultColumn, flatColumns]\n  )\n\n  const headers = React.useMemo(() => headerGroups[0].headers, [headerGroups])\n\n  Object.assign(instanceRef.current, {\n    columns,\n    flatColumns,\n    headerGroups,\n    headers,\n  })\n\n  // Access the row model\n  const [rows, flatRows] = React.useMemo(() => {\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.time('getAccessedRows')\n\n    let flatRows = []\n\n    // Access the row's data\n    const accessRow = (originalRow, i, depth = 0, parentPath = []) => {\n      // Keep the original reference around\n      const original = originalRow\n\n      const rowID = getRowID(originalRow, i)\n\n      // Make the new path for the row\n      const path = [...parentPath, rowID]\n\n      const row = {\n        original,\n        index: i,\n        path, // used to create a key for each row even if not nested\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      flatRows.push(row)\n\n      // Process any subRows\n      let subRows = getSubRows(originalRow, i)\n\n      if (subRows) {\n        row.subRows = subRows.map((d, i) => accessRow(d, i, depth + 1, path))\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      const unpreparedAccessWarning = () => {\n        throw new Error(\n          'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n        )\n      }\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n      flatColumns.forEach(column => {\n        row.values[column.id] = column.accessor\n          ? column.accessor(originalRow, i, { subRows, depth, data })\n          : undefined\n      })\n\n      return row\n    }\n\n    // Use the resolved data\n    const accessedData = data.map((d, i) => accessRow(d, i))\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.timeEnd('getAccessedRows')\n    return [accessedData, flatRows]\n  }, [debug, data, getRowID, getSubRows, flatColumns])\n\n  instanceRef.current.rows = rows\n  instanceRef.current.flatRows = flatRows\n\n  // Determine column visibility\n  determineHeaderVisibility(instanceRef.current)\n\n  // Provide a flat header list for utilities\n  instanceRef.current.flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.time('hooks.useBeforeDimensions')\n  instanceRef.current = applyHooks(\n    instanceRef.current.hooks.useBeforeDimensions,\n    instanceRef.current\n  )\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.timeEnd('hooks.useBeforeDimensions')\n\n  calculateDimensions(instanceRef.current)\n\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.time('hooks.useMain')\n  instanceRef.current = applyHooks(\n    instanceRef.current.hooks.useMain,\n    instanceRef.current\n  )\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.timeEnd('hooks.useMain')\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  instanceRef.current.flatHeaders.forEach(column => {\n    // Give columns/headers rendering power\n    column.render = (type, userProps = {}) => {\n      const Comp = typeof type === 'string' ? column[type] : type\n\n      if (typeof Comp === 'undefined') {\n        throw new Error(renderErr)\n      }\n\n      return flexRender(Comp, {\n        ...instanceRef.current,\n        column,\n        ...userProps,\n      })\n    }\n\n    // Give columns/headers a default getHeaderProps\n    column.getHeaderProps = props =>\n      mergeProps(\n        {\n          key: ['header', column.id].join('_'),\n          colSpan: column.totalVisibleHeaderCount,\n        },\n        applyPropHooks(\n          instanceRef.current.hooks.getHeaderProps,\n          column,\n          instanceRef.current\n        ),\n        props\n      )\n  })\n\n  instanceRef.current.headerGroups.forEach((headerGroup, i) => {\n    // Filter out any headers and headerGroups that don't have visible columns\n    headerGroup.headers = headerGroup.headers.filter(header => {\n      const recurse = headers =>\n        headers.filter(header => {\n          if (header.headers) {\n            return recurse(header.headers)\n          }\n          return header.isVisible\n        }).length\n      if (header.headers) {\n        return recurse(header.headers)\n      }\n      return header.isVisible\n    })\n\n    // Give headerGroups getRowProps\n    if (headerGroup.headers.length) {\n      headerGroup.getHeaderGroupProps = (props = {}) =>\n        mergeProps(\n          {\n            key: [`header${i}`].join('_'),\n          },\n          applyPropHooks(\n            instanceRef.current.hooks.getHeaderGroupProps,\n            headerGroup,\n            instanceRef.current\n          ),\n          props\n        )\n\n      return true\n    }\n  })\n\n  // Run the rows (this could be a dangerous hook with a ton of data)\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.time('hooks.useRows')\n  instanceRef.current.rows = applyHooks(\n    instanceRef.current.hooks.useRows,\n    instanceRef.current.rows,\n    instanceRef.current\n  )\n  if (process.env.NODE_ENV === 'development' && debug)\n    console.timeEnd('hooks.useRows')\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  instanceRef.current.prepareRow = React.useCallback(row => {\n    row.getRowProps = props =>\n      mergeProps(\n        { key: ['row', ...row.path].join('_') },\n        applyPropHooks(\n          instanceRef.current.hooks.getRowProps,\n          row,\n          instanceRef.current\n        ),\n        props\n      )\n\n    // Build the visible cells for each row\n    row.cells = instanceRef.current.flatColumns\n      .filter(d => d.isVisible)\n      .map(column => {\n        const cell = {\n          column,\n          row,\n          value: row.values[column.id],\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = props => {\n          const columnPathStr = [...row.path, column.id].join('_')\n          return mergeProps(\n            {\n              key: ['cell', columnPathStr].join('_'),\n            },\n            applyPropHooks(\n              instanceRef.current.hooks.getCellProps,\n              cell,\n              instanceRef.current\n            ),\n            props\n          )\n        }\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = (type, userProps = {}) => {\n          const Comp = typeof type === 'string' ? column[type] : type\n\n          if (typeof Comp === 'undefined') {\n            throw new Error(renderErr)\n          }\n\n          return flexRender(Comp, {\n            ...instanceRef.current,\n            column,\n            row,\n            cell,\n            ...userProps,\n          })\n        }\n\n        return cell\n      })\n\n    // need to apply any row specific hooks (useExpanded requires this)\n    applyHooks(instanceRef.current.hooks.prepareRow, row, instanceRef.current)\n  }, [])\n\n  instanceRef.current.getTableProps = userProps =>\n    mergeProps(\n      applyPropHooks(\n        instanceRef.current.hooks.getTableProps,\n        instanceRef.current\n      ),\n      userProps\n    )\n\n  instanceRef.current.getTableBodyProps = userProps =>\n    mergeProps(\n      applyPropHooks(\n        instanceRef.current.hooks.getTableBodyProps,\n        instanceRef.current\n      ),\n      userProps\n    )\n\n  return instanceRef.current\n}\n\nfunction calculateDimensions(instance) {\n  const { headers } = instance\n\n  instance.totalColumnsWidth = calculateHeaderWidths(headers)\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      header.totalWidth = calculateHeaderWidths(subHeaders, left)\n    } else {\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalWidth += header.totalWidth\n    }\n  })\n\n  return sumTotalWidth\n}\n","const actions = {}\nconst types = {}\n\nexport { actions, types }\n\nexport const addActions = (...acts) => {\n  acts.forEach(action => {\n    // Action values are formatted this way to discourage\n    // you (the dev) from interacting with them in any way\n    // other than importing `{ actions } from 'react-table'`\n    // and referencing an action via `actions[actionName]`\n    actions[action] = `React Table Action: ${action}`\n    types[actions[action]] = true\n  })\n}\n","import { useMemo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { mergeProps, applyPropHooks, expandRows } from '../utils'\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\n\ndefaultState.expanded = []\n\naddActions('toggleExpanded', 'useExpanded')\n\nconst propTypes = {\n  manualExpandedKey: PropTypes.string,\n  paginateExpandedRows: PropTypes.bool,\n}\n\nexport const useExpanded = hooks => {\n  hooks.getExpandedToggleProps = []\n  hooks.useMain.push(useMain)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useExpanded')\n\n  const {\n    debug,\n    rows,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    hooks,\n    state: { expanded },\n    setState,\n  } = instance\n\n  const toggleExpandedByPath = (path, set) => {\n    const key = path.join('.')\n\n    return setState(old => {\n      const exists = old.expanded.includes(key)\n      const shouldExist = typeof set !== 'undefined' ? set : !exists\n      let newExpanded = new Set(old.expanded)\n\n      if (!exists && shouldExist) {\n        newExpanded.add(key)\n      } else if (exists && !shouldExist) {\n        newExpanded.delete(key)\n      } else {\n        return old\n      }\n\n      return {\n        ...old,\n        expanded: [...newExpanded.values()],\n      }\n    }, actions.toggleExpanded)\n  }\n\n  hooks.prepareRow.push((row, instance) => {\n    row.toggleExpanded = set => toggleExpandedByPath(row.path, set)\n    const propsFromHooks = applyPropHooks(\n      instance.hooks.getExpandedToggleProps,\n      row,\n      instance\n    )\n    row.getExpandedToggleProps = props => {\n      return mergeProps(\n        {\n          onClick: e => {\n            e.persist()\n            row.toggleExpanded()\n          },\n          style: {\n            cursor: 'pointer',\n          },\n          title: 'Toggle Expanded',\n        },\n        propsFromHooks,\n        props\n      )\n    }\n    return row\n  })\n\n  const expandedRows = useMemo(() => {\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.info('getExpandedRows')\n\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [\n    debug,\n    paginateExpandedRows,\n    rows,\n    manualExpandedKey,\n    expanded,\n    expandSubRows,\n  ])\n\n  const expandedDepth = findExpandedDepth(expanded)\n\n  return {\n    ...instance,\n    toggleExpandedByPath,\n    expandedDepth,\n    rows: expandedRows,\n  }\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  expanded.forEach(key => {\n    const path = key.split('.')\n    maxDepth = Math.max(maxDepth, path.length)\n  })\n\n  return maxDepth\n}","export const text = (rows, id, filterValue) => {\n  rows = rows.filter(row => {\n    const rowValue = row.values[id]\n    return String(rowValue)\n      .toLowerCase()\n      .includes(String(filterValue).toLowerCase())\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue !== undefined\n      ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n      : true\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue !== undefined\n      ? String(rowValue) === String(filterValue)\n      : true\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return filterValue.includes(rowValue)\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return (\n      rowValue &&\n      rowValue.length &&\n      filterValue.every(val => rowValue.includes(val))\n    )\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue === filterValue\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, id, filterValue) => {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    // eslint-disable-next-line eqeqeq\n    return rowValue == filterValue\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, id, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue >= min && rowValue <= max\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { getFirstDefined, isFunction } from '../utils'\nimport * as filterTypes from '../filterTypes'\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\n\ndefaultState.filters = {}\n\naddActions('setFilter', 'setAllFilters')\n\nconst propTypes = {\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      disableFilters: PropTypes.bool,\n      Filter: PropTypes.any,\n    })\n  ),\n\n  manualFilters: PropTypes.bool,\n}\n\nexport const useFilters = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useFilters')\n\n  const {\n    debug,\n    rows,\n    flatRows,\n    flatColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    disableFilters,\n    state: { filters },\n    setState,\n  } = instance\n\n  const preFilteredRows = rows\n  const preFilteredFlatRows = flatRows\n\n  const setFilter = (id, updater) => {\n    const column = flatColumns.find(d => d.id === id)\n\n    if (!column) {\n      throw new Error(`React-Table: Could not find a column with id: ${id}`)\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    return setState(old => {\n      const newFilter =\n        typeof updater === 'function' ? updater(old.filters[id]) : updater\n\n      //\n      if (shouldAutoRemove(filterMethod.autoRemove, newFilter)) {\n        const { [id]: remove, ...newFilters } = old.filters\n        return {\n          ...old,\n          filters: newFilters,\n        }\n      }\n\n      return {\n        ...old,\n        filters: {\n          ...old.filters,\n          [id]: newFilter,\n        },\n      }\n    }, actions.setFilter)\n  }\n\n  const setAllFilters = updater => {\n    return setState(old => {\n      const newFilters = typeof updater === 'function' ? updater(old) : updater\n\n      // Filter out undefined values\n      Object.keys(newFilters).forEach(id => {\n        const newFilter = newFilters[id]\n        const column = flatColumns.find(d => d.id === id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (shouldAutoRemove(filterMethod.autoRemove, newFilter)) {\n          delete newFilters[id]\n        }\n      })\n\n      return {\n        ...old,\n        filters: newFilters,\n      }\n    }, actions.setAllFilters)\n  }\n\n  flatColumns.forEach(column => {\n    const { id, accessor, disableFilters: columnDisableFilters } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : false\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    column.filterValue = filters[id]\n  })\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const { filteredRows, filteredFlatRows } = React.useMemo(() => {\n    if (manualFilters || !Object.keys(filters).length) {\n      return {\n        filteredRows: rows,\n        filteredFlatRows: flatRows,\n      }\n    }\n\n    const filteredFlatRows = []\n\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.info('getFilteredRows')\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = Object.entries(filters).reduce(\n        (filteredSoFar, [columnID, filterValue]) => {\n          // Find the filters column\n          const column = flatColumns.find(d => d.id === columnID)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            columnID,\n            filterValue,\n            column\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows = filteredRows.map(row => {\n        filteredFlatRows.push(row)\n        if (!row.subRows) {\n          return row\n        }\n        return {\n          ...row,\n          subRows:\n            row.subRows && row.subRows.length > 0\n              ? filterRows(row.subRows, depth + 1)\n              : row.subRows,\n        }\n      })\n\n      return filteredRows\n    }\n\n    return {\n      filteredRows: filterRows(rows),\n      filteredFlatRows,\n    }\n  }, [\n    manualFilters,\n    filters,\n    debug,\n    rows,\n    flatRows,\n    flatColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = flatColumns.filter(\n      column => !Object.keys(filters).includes(column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, flatColumns])\n\n  return {\n    ...instance,\n    setFilter,\n    setAllFilters,\n    preFilteredRows,\n    preFilteredFlatRows,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n  }\n}\n\nfunction shouldAutoRemove(autoRemove, value) {\n  return autoRemove ? autoRemove(value) : typeof value === 'undefined'\n}\n\nfunction getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n","export function sum(values, rows) {\n  return values.reduce((sum, next) => sum + next, 0)\n}\n\nexport function average(values, rows) {\n  return Math.round((sum(values, rows) / values.length) * 100) / 100\n}\n\nexport function median(values) {\n  let min = values[0] || ''\n  let max = values[0] || ''\n\n  values.forEach(value => {\n    min = Math.min(min, value)\n    max = Math.max(max, value)\n  })\n\n  return (min + max) / 2\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import { useMemo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as aggregations from '../aggregations'\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\nimport {\n  mergeProps,\n  applyPropHooks,\n  defaultGroupByFn,\n  getFirstDefined,\n  ensurePluginOrder,\n} from '../utils'\n\ndefaultState.groupBy = []\n\naddActions('toggleGroupBy')\n\nconst propTypes = {\n  // General\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      aggregate: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.string,\n        PropTypes.arrayOf(\n          PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n        ),\n      ]),\n      disableGrouping: PropTypes.bool,\n      Aggregated: PropTypes.any,\n    })\n  ),\n  groupByFn: PropTypes.func,\n  manualGrouping: PropTypes.bool,\n  disableGrouping: PropTypes.bool,\n  aggregations: PropTypes.object,\n}\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = []\n  hooks.columnsBeforeHeaderGroups.push(columnsBeforeHeaderGroups)\n  hooks.columnsBeforeHeaderGroupsDeps.push((deps, instance) => {\n    deps.push(instance.state.groupBy)\n    return deps\n  })\n  hooks.useMain.push(useMain)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nfunction columnsBeforeHeaderGroups(flatColumns, { state: { groupBy } }) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy.map(g => flatColumns.find(col => col.id === g))\n  const nonGroupByColumns = flatColumns.filter(col => !groupBy.includes(col.id))\n\n  // If a groupByBoundary column is found, place the groupBy's after it\n  const groupByBoundaryColumnIndex =\n    flatColumns.findIndex(column => column.groupByBoundary) + 1\n\n  return [\n    ...nonGroupByColumns.slice(0, groupByBoundaryColumnIndex),\n    ...groupByColumns,\n    ...nonGroupByColumns.slice(groupByBoundaryColumnIndex),\n  ]\n}\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useGroupBy')\n\n  const {\n    debug,\n    rows,\n    flatColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    disableGrouping,\n    aggregations: userAggregations = {},\n    hooks,\n    plugins,\n    state: { groupBy },\n    setState,\n  } = instance\n\n  ensurePluginOrder(plugins, [], 'useGroupBy', ['useSortBy', 'useExpanded'])\n\n  flatColumns.forEach(column => {\n    const { id, accessor, disableGrouping: columnDisableGrouping } = column\n    column.isGrouped = groupBy.includes(id)\n    column.groupedIndex = groupBy.indexOf(id)\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          columnDisableGrouping === true ? false : undefined,\n          disableGrouping === true ? false : undefined,\n          true\n        )\n      : false\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = (id, toggle) => {\n    return setState(old => {\n      const resolvedToggle =\n        typeof toggle !== 'undefined' ? toggle : !groupBy.includes(id)\n      if (resolvedToggle) {\n        return {\n          ...old,\n          groupBy: [...groupBy, id],\n        }\n      }\n      return {\n        ...old,\n        groupBy: groupBy.filter(d => d !== id),\n      }\n    }, actions.toggleGroupBy)\n  }\n\n  flatHeaders.forEach(\n    // avoid sharing instance in contexts of other functions\n    (instance => header => {\n      const { canGroupBy } = header\n      const groupByTogglePropsFromHooks = applyPropHooks(\n        instance.hooks.getGroupByToggleProps,\n        header,\n        instance\n      )\n      header.getGroupByToggleProps = props => {\n        return mergeProps(\n          {\n            onClick: canGroupBy\n              ? e => {\n                  e.persist()\n                  header.toggleGroupBy()\n                }\n              : undefined,\n            style: {\n              cursor: canGroupBy ? 'pointer' : undefined,\n            },\n            title: 'Toggle GroupBy',\n          },\n          groupByTogglePropsFromHooks,\n          props\n        )\n      }\n    })(instance)\n  )\n\n  hooks.prepareRow.push(row => {\n    row.cells.forEach(cell => {\n      // Grouped cells are in the groupBy and the pivot cell for the row\n      cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n      // Repeated cells are any columns in the groupBy that are not grouped\n      cell.isRepeatedValue = !cell.isGrouped && cell.column.isGrouped\n      // Aggregated cells are not grouped, not repeated, but still have subRows\n      cell.isAggregated =\n        !cell.isGrouped && !cell.isRepeatedValue && row.canExpand\n    })\n    return row\n  })\n\n  const groupedRows = useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return rows\n    }\n\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.info('getGroupedRows')\n    // Find the columns that can or are aggregating\n\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (rows, isSourceRows) => {\n      const values = {}\n\n      flatColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (groupBy.includes(column.id)) {\n          values[column.id] = rows[0] ? rows[0].values[column.id] : null\n          return\n        }\n\n        const columnValues = rows.map(d => d.values[column.id])\n\n        let aggregator = column.aggregate\n\n        if (Array.isArray(aggregator)) {\n          if (aggregator.length !== 2) {\n            console.info({ column })\n            throw new Error(\n              `React Table: Complex aggregators must have 2 values, eg. aggregate: ['sum', 'count']. More info above...`\n            )\n          }\n          if (isSourceRows) {\n            aggregator = aggregator[1]\n          } else {\n            aggregator = aggregator[0]\n          }\n        }\n\n        let aggregateFn =\n          typeof aggregator === 'function'\n            ? aggregator\n            : userAggregations[aggregator] || aggregations[aggregator]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(columnValues, rows)\n        } else if (aggregator) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n      return values\n    }\n\n    // Recursively group the data\n    const groupRecursively = (rows, depth = 0, parentPath = []) => {\n      // This is the last level, just return the rows\n      if (depth >= groupBy.length) {\n        return rows\n      }\n\n      const columnID = groupBy[depth]\n\n      // Group the rows together for this level\n      let groupedRows = groupByFn(rows, columnID)\n\n      // Recurse to sub rows before aggregation\n      groupedRows = Object.entries(groupedRows).map(\n        ([groupByVal, subRows], index) => {\n          const path = [...parentPath, `${columnID}:${groupByVal}`]\n\n          subRows = groupRecursively(subRows, depth + 1, path)\n\n          const values = aggregateRowsToValues(\n            subRows,\n            depth + 1 >= groupBy.length\n          )\n\n          const row = {\n            isAggregated: true,\n            groupByID: columnID,\n            groupByVal,\n            values,\n            subRows,\n            depth,\n            index,\n            path,\n          }\n\n          return row\n        }\n      )\n\n      return groupedRows\n    }\n\n    // Assign the new data\n    return groupRecursively(rows)\n  }, [\n    manualGroupBy,\n    groupBy,\n    debug,\n    rows,\n    flatColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  return {\n    ...instance,\n    toggleGroupBy,\n    rows: groupedRows,\n    preGroupedRows: rows,\n  }\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnID) => {\n  let a = getRowValueByColumnID(rowA, columnID)\n  let b = getRowValueByColumnID(rowB, columnID)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnID) {\n  let a = getRowValueByColumnID(rowA, columnID)\n  let b = getRowValueByColumnID(rowB, columnID)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnID) {\n  let a = getRowValueByColumnID(rowA, columnID)\n  let b = getRowValueByColumnID(rowB, columnID)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnID) {\n  return row.values[columnID]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ensurePluginOrder, defaultColumn } from '../utils'\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\nimport * as sortTypes from '../sortTypes'\nimport {\n  mergeProps,\n  applyPropHooks,\n  getFirstDefined,\n  defaultOrderByFn,\n  isFunction,\n} from '../utils'\n\ndefaultState.sortBy = []\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\naddActions('sortByChange')\n\nconst propTypes = {\n  // General\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      sortType: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n      sortDescFirst: PropTypes.bool,\n      disableSorting: PropTypes.bool,\n    })\n  ),\n  orderByFn: PropTypes.func,\n  sortTypes: PropTypes.object,\n  manualSorting: PropTypes.bool,\n  disableSorting: PropTypes.bool,\n  disableMultiSort: PropTypes.bool,\n  isMultiSortEvent: PropTypes.func,\n  maxMultiSortColCount: PropTypes.number,\n  disableSortRemove: PropTypes.bool,\n  disableMultiRemove: PropTypes.bool,\n}\n\nexport const useSortBy = hooks => {\n  hooks.useMain.push(useMain)\n  // Add custom hooks\n  hooks.getSortByToggleProps = []\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useSortBy')\n\n  const {\n    debug,\n    rows,\n    flatColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSorting,\n    disableSorting,\n    disableSortRemove,\n    disableMultiRemove,\n    disableMultiSort,\n    isMultiSortEvent = e => e.shiftKey,\n    maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    flatHeaders,\n    state: { sortBy },\n    setState,\n    plugins,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useFilters'], 'useSortBy', [])\n\n  // Updates sorting based on a columnID, desc flag and multi flag\n  const toggleSortBy = (columnID, desc, multi) => {\n    return setState(old => {\n      const { sortBy } = old\n\n      // Find the column for this columnID\n      const column = flatColumns.find(d => d.id === columnID)\n      const { sortDescFirst } = column\n\n      // Find any existing sortBy for this column\n      const existingSortBy = sortBy.find(d => d.id === columnID)\n      const existingIndex = sortBy.findIndex(d => d.id === columnID)\n      const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n      let newSortBy = []\n\n      // What should we do with this sort action?\n      let action\n\n      if (!disableMultiSort && multi) {\n        if (existingSortBy) {\n          action = 'toggle'\n        } else {\n          action = 'add'\n        }\n      } else {\n        // Normal mode\n        if (existingIndex !== sortBy.length - 1) {\n          action = 'replace'\n        } else if (existingSortBy) {\n          action = 'toggle'\n        } else {\n          action = 'replace'\n        }\n      }\n\n      // Handle toggle states that will remove the sortBy\n      if (\n        action === 'toggle' && // Must be toggling\n        !disableSortRemove && // If disableSortRemove, disable in general\n        !hasDescDefined && // Must not be setting desc\n        (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n        ((existingSortBy && // Finally, detect if it should indeed be removed\n          (existingSortBy.desc && !sortDescFirst)) ||\n          (!existingSortBy.desc && sortDescFirst))\n      ) {\n        action = 'remove'\n      }\n\n      if (action === 'replace') {\n        newSortBy = [\n          {\n            id: columnID,\n            desc: hasDescDefined ? desc : sortDescFirst,\n          },\n        ]\n      } else if (action === 'add') {\n        newSortBy = [\n          ...sortBy,\n          {\n            id: columnID,\n            desc: hasDescDefined ? desc : sortDescFirst,\n          },\n        ]\n        // Take latest n columns\n        newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n      } else if (action === 'toggle') {\n        // This flips (or sets) the\n        newSortBy = sortBy.map(d => {\n          if (d.id === columnID) {\n            return {\n              ...d,\n              desc: hasDescDefined ? desc : !existingSortBy.desc,\n            }\n          }\n          return d\n        })\n      } else if (action === 'remove') {\n        newSortBy = sortBy.filter(d => d.id !== columnID)\n      }\n\n      return {\n        ...old,\n        sortBy: newSortBy,\n      }\n    }, actions.sortByChange)\n  }\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(\n    // avoid sharing instance in contexts of other functions\n    (instance => column => {\n      const { accessor, disableSorting: columnDisableSorting, id } = column\n\n      const canSort = accessor\n        ? getFirstDefined(\n            columnDisableSorting === true ? false : undefined,\n            disableSorting === true ? false : undefined,\n            true\n          )\n        : false\n\n      column.canSort = canSort\n\n      if (column.canSort) {\n        column.toggleSortBy = (desc, multi) =>\n          toggleSortBy(column.id, desc, multi)\n\n        column.clearSorting = () => {\n          return setState(old => {\n            const { sortBy } = old\n            const newSortBy = sortBy.filter(d => d.id !== column.id)\n            return {\n              ...old,\n              sortBy: newSortBy,\n            }\n          }, actions.sortByChange)\n        }\n      }\n\n      const sortByTogglePropsFromHooks = applyPropHooks(\n        instance.hooks.getSortByToggleProps,\n        column,\n        instance\n      )\n      column.getSortByToggleProps = props => {\n        return mergeProps(\n          {\n            onClick: canSort\n              ? e => {\n                  e.persist()\n                  column.toggleSortBy(\n                    undefined,\n                    !disableMultiSort && isMultiSortEvent(e)\n                  )\n                }\n              : undefined,\n            style: {\n              cursor: canSort ? 'pointer' : undefined,\n            },\n            title: 'Toggle SortBy',\n          },\n          sortByTogglePropsFromHooks,\n          props\n        )\n      }\n\n      const columnSort = sortBy.find(d => d.id === id)\n      column.isSorted = !!columnSort\n      column.sortedIndex = sortBy.findIndex(d => d.id === id)\n      column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n    })(instance)\n  )\n\n  const sortedRows = React.useMemo(() => {\n    if (manualSorting || !sortBy.length) {\n      return rows\n    }\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.time('getSortedRows')\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      flatColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = flatColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = flatColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        if (!row.subRows || row.subRows.length <= 1) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    if (process.env.NODE_ENV === 'development' && debug)\n      console.timeEnd('getSortedRows')\n\n    return sortData(rows)\n  }, [\n    manualSorting,\n    sortBy,\n    debug,\n    rows,\n    flatColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  return {\n    ...instance,\n    toggleSortBy,\n    rows: sortedRows,\n    preSortedRows: rows,\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n//\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\nimport { ensurePluginOrder, safeUseLayoutEffect, expandRows } from '../utils'\n\ndefaultState.pageSize = 10\ndefaultState.pageIndex = 0\n\naddActions('pageChange', 'pageSizeChange')\n\nconst propTypes = {\n  // General\n  manualPagination: PropTypes.bool,\n  paginateExpandedRows: PropTypes.bool,\n}\n\nexport const usePagination = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nusePagination.pluginName = 'usePagination'\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'usePagination')\n\n  const {\n    data,\n    rows,\n    manualPagination,\n    disablePageResetOnDataChange,\n    manualExpandedKey = 'expanded',\n    debug,\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: { pageSize, pageIndex, filters, groupBy, sortBy, expanded },\n    setState,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination',\n    []\n  )\n\n  const rowDep = manualPagination ? null : data\n\n  const isPageIndexMountedRef = React.useRef()\n\n  // Bypass any effects from firing when this changes\n  const disablePageResetOnDataChangeRef = React.useRef()\n  disablePageResetOnDataChangeRef.current = disablePageResetOnDataChange\n\n  safeUseLayoutEffect(() => {\n    if (\n      isPageIndexMountedRef.current &&\n      !disablePageResetOnDataChangeRef.current\n    ) {\n      setState(\n        old => ({\n          ...old,\n          pageIndex: 0,\n        }),\n        actions.pageChange\n      )\n    }\n    isPageIndexMountedRef.current = true\n  }, [setState, rowDep, filters, groupBy, sortBy])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () => (pageCount > 0 ? [...new Array(pageCount)].map((d, i) => i) : []),\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      if (process.env.NODE_ENV === 'development' && debug)\n        console.info('getPage')\n\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    debug,\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage = pageCount === -1 || pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    updater => {\n      if (process.env.NODE_ENV === 'development' && debug)\n        console.info('gotoPage')\n      return setState(old => {\n        const newPageIndex =\n          typeof updater === 'function' ? updater(old.pageIndex) : updater\n\n        if (newPageIndex < 0 || newPageIndex > pageCount - 1) {\n          return old\n        }\n        return {\n          ...old,\n          pageIndex: newPageIndex,\n        }\n      }, actions.pageChange)\n    },\n    [debug, pageCount, setState]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      setState(old => {\n        const topRowIndex = old.pageSize * old.pageIndex\n        const pageIndex = Math.floor(topRowIndex / pageSize)\n        return {\n          ...old,\n          pageIndex,\n          pageSize,\n        }\n      }, actions.pageSizeChange)\n    },\n    [setState]\n  )\n\n  return {\n    ...instance,\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n    pageIndex,\n    pageSize,\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  mergeProps,\n  applyPropHooks,\n  ensurePluginOrder,\n  safeUseLayoutEffect,\n} from '../utils'\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\n\ndefaultState.selectedRowPaths = []\n\naddActions('toggleRowSelected', 'toggleRowSelectedAll')\n\nconst propTypes = {\n  manualRowSelectedKey: PropTypes.string,\n}\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = []\n  hooks.getToggleAllRowsSelectedProps = []\n  hooks.useRows.push(useRows)\n  hooks.useMain.push(useMain)\n}\n\nuseRowSelect.pluginName = 'useRowSelect'\n\nfunction useRows(rows, instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useRowSelect')\n\n  const {\n    state: { selectedRowPaths },\n  } = instance\n\n  instance.selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n    rows.forEach(row => {\n      if (row.isAggregated) {\n        const subRowPaths = row.subRows.map(row => row.path)\n        row.isSelected = subRowPaths.every(path =>\n          selectedRowPaths.includes(path.join('.'))\n        )\n      } else {\n        row.isSelected = selectedRowPaths.includes(row.path.join('.'))\n      }\n      if (row.isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectedRowPaths])\n\n  return rows\n}\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useRowSelect')\n\n  const {\n    hooks,\n    manualRowSelectedKey = 'isSelected',\n    disableSelectedRowsResetOnDataChange,\n    plugins,\n    flatRows,\n    data,\n    state: { selectedRowPaths },\n    setState,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy'],\n    'useRowSelect',\n    []\n  )\n\n  const flatRowPaths = flatRows.map(d => d.path.join('.'))\n\n  let isAllRowsSelected = !!flatRowPaths.length && !!selectedRowPaths.length\n\n  if (isAllRowsSelected) {\n    if (flatRowPaths.some(d => !selectedRowPaths.includes(d))) {\n      isAllRowsSelected = false\n    }\n  }\n\n  const isRowSelectedMountedRef = React.useRef()\n\n  // Bypass any effects from firing when this changes\n  const disableSelectedRowsResetOnDataChangeRef = React.useRef()\n  disableSelectedRowsResetOnDataChangeRef.current = disableSelectedRowsResetOnDataChange\n\n  safeUseLayoutEffect(() => {\n    if (\n      isRowSelectedMountedRef.current &&\n      !disableSelectedRowsResetOnDataChangeRef.current\n    ) {\n      setState(\n        old => ({\n          ...old,\n          selectedRowPaths: [],\n        }),\n        actions.pageChange\n      )\n    }\n    isRowSelectedMountedRef.current = true\n  }, [setState, data])\n\n  const toggleRowSelectedAll = set => {\n    setState(old => {\n      const selectAll = typeof set !== 'undefined' ? set : !isAllRowsSelected\n      return {\n        ...old,\n        selectedRowPaths: selectAll ? flatRowPaths : [],\n      }\n    }, actions.toggleRowSelectedAll)\n  }\n\n  const updateParentRow = (selectedRowPaths, path) => {\n    const parentPath = path.slice(0, path.length - 1)\n    const parentKey = parentPath.join('.')\n    const selected =\n      flatRowPaths.filter(rowPath => {\n        const path = rowPath\n        return (\n          path !== parentKey &&\n          path.startsWith(parentKey) &&\n          !selectedRowPaths.has(path)\n        )\n      }).length === 0\n    if (selected) {\n      selectedRowPaths.add(parentKey)\n    } else {\n      selectedRowPaths.delete(parentKey)\n    }\n    if (parentPath.length > 1) updateParentRow(selectedRowPaths, parentPath)\n  }\n\n  const toggleRowSelected = (path, set) => {\n    const key = path.join('.')\n    const childRowPrefixKey = [key, '.'].join('')\n\n    return setState(old => {\n      // Join the paths of deep rows\n      // to make a key, then manage all of the keys\n      // in a flat object\n      const exists = old.selectedRowPaths.includes(key)\n      const shouldExist = typeof set !== 'undefined' ? set : !exists\n      let newSelectedRows = new Set(old.selectedRowPaths)\n\n      if (!exists && shouldExist) {\n        flatRowPaths.forEach(rowPath => {\n          if (rowPath === key || rowPath.startsWith(childRowPrefixKey)) {\n            newSelectedRows.add(rowPath)\n          }\n        })\n      } else if (exists && !shouldExist) {\n        flatRowPaths.forEach(rowPath => {\n          if (rowPath === key || rowPath.startsWith(childRowPrefixKey)) {\n            newSelectedRows.delete(rowPath)\n          }\n        })\n      } else {\n        return old\n      }\n\n      // If the row is a subRow update\n      // its parent row to reflect changes\n      if (path.length > 1) updateParentRow(newSelectedRows, path)\n\n      return {\n        ...old,\n        selectedRowPaths: [...newSelectedRows.values()],\n      }\n    }, actions.toggleRowSelected)\n  }\n\n  const toggleAllRowsSelectedPropsFromHooks = applyPropHooks(\n    instance.hooks.getToggleAllRowsSelectedProps,\n    instance\n  )\n  const getToggleAllRowsSelectedProps = props => {\n    return mergeProps(\n      {\n        onChange: e => {\n          toggleRowSelectedAll(e.target.checked)\n        },\n        style: {\n          cursor: 'pointer',\n        },\n        checked: isAllRowsSelected,\n        title: 'Toggle All Rows Selected',\n      },\n      toggleAllRowsSelectedPropsFromHooks,\n      props\n    )\n  }\n\n  hooks.prepareRow.push((row, instance) => {\n    const toggleRowSelectedPropsFromHooks = applyPropHooks(\n      instance.hooks.getToggleRowSelectedProps,\n      row,\n      instance\n    )\n    // Aggregate rows have entirely different select logic\n    if (row.isAggregated) {\n      const subRowPaths = row.subRows.map(row => row.path)\n      row.toggleRowSelected = set => {\n        set = typeof set !== 'undefined' ? set : !row.isSelected\n        subRowPaths.forEach(path => {\n          toggleRowSelected(path, set)\n        })\n      }\n      row.getToggleRowSelectedProps = props => {\n        let checked = false\n\n        if (row.original && row.original[manualRowSelectedKey]) {\n          checked = true\n        } else {\n          checked = row.isSelected\n        }\n\n        return mergeProps(\n          {\n            onChange: e => {\n              row.toggleRowSelected(e.target.checked)\n            },\n            style: {\n              cursor: 'pointer',\n            },\n            checked,\n            title: 'Toggle Row Selected',\n          },\n          toggleRowSelectedPropsFromHooks,\n          props\n        )\n      }\n    } else {\n      row.toggleRowSelected = set => toggleRowSelected(row.path, set)\n      row.getToggleRowSelectedProps = props => {\n        let checked = false\n\n        if (row.original && row.original[manualRowSelectedKey]) {\n          checked = true\n        } else {\n          checked = row.isSelected\n        }\n\n        return mergeProps(\n          {\n            onChange: e => {\n              row.toggleRowSelected(e.target.checked)\n            },\n            style: {\n              cursor: 'pointer',\n            },\n            checked,\n            title: 'Toggle Row Selected',\n          },\n          toggleRowSelectedPropsFromHooks,\n          props\n        )\n      }\n    }\n\n    return row\n  })\n\n  return {\n    ...instance,\n    toggleRowSelected,\n    toggleRowSelectedAll,\n    getToggleAllRowsSelectedProps,\n    isAllRowsSelected,\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\n\ndefaultState.rowState = {}\n\naddActions('setRowState', 'setCellState')\n\nconst propTypes = {\n  initialRowStateAccessor: PropTypes.func,\n}\n\nexport const useRowState = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useRowState')\n\n  const {\n    hooks,\n    rows,\n    initialRowStateAccessor,\n    state: { rowState },\n    setState,\n  } = instance\n\n  const setRowState = React.useCallback(\n    (path, updater, action = actions.setRowState) => {\n      const pathKey = path.join('.')\n      return setState(old => {\n        return {\n          ...old,\n          rowState: {\n            ...old.rowState,\n            [pathKey]:\n              typeof updater === 'function'\n                ? updater(old.rowState[pathKey])\n                : updater,\n          },\n        }\n      }, action)\n    },\n    [setState]\n  )\n\n  const setCellState = React.useCallback(\n    (rowPath, columnID, updater) => {\n      return setRowState(\n        rowPath,\n        old => {\n          return {\n            ...old,\n            cellState: {\n              ...old.cellState,\n              [columnID]:\n                typeof updater === 'function'\n                  ? updater(old.cellState[columnID])\n                  : updater,\n            },\n          }\n        },\n        actions.setCellState\n      )\n    },\n    [setRowState]\n  )\n\n  const rowsMountedRef = React.useRef()\n\n  // When data changes, reset row and cell state\n  React.useEffect(() => {\n    if (rowsMountedRef.current) {\n      setState(old => {\n        return {\n          ...old,\n          rowState: {},\n        }\n      }, actions.setRowState)\n    }\n\n    rowsMountedRef.current = true\n  }, [rows, setState])\n\n  hooks.prepareRow.push(row => {\n    const pathKey = row.path.join('.')\n\n    if (row.original) {\n      row.state =\n        (typeof rowState[pathKey] !== 'undefined'\n          ? rowState[pathKey]\n          : initialRowStateAccessor && initialRowStateAccessor(row)) || {}\n\n      row.setState = updater => {\n        return setRowState(row.path, updater)\n      }\n\n      row.cells.forEach(cell => {\n        cell.state = row.state.cellState || {}\n\n        cell.setState = updater => {\n          return setCellState(row.path, cell.column.id, updater)\n        }\n      })\n    }\n\n    return row\n  })\n\n  return {\n    ...instance,\n    setRowState,\n    setCellState,\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { addActions, actions } from '../actions'\nimport { defaultState } from '../hooks/useTable'\n\ndefaultState.columnOrder = []\n\naddActions('setColumnOrder')\n\nconst propTypes = {\n  initialRowStateAccessor: PropTypes.func,\n}\n\nexport const useColumnOrder = hooks => {\n  hooks.columnsBeforeHeaderGroupsDeps.push((deps, instance) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.columnsBeforeHeaderGroups.push(columnsBeforeHeaderGroups)\n  hooks.useMain.push(useMain)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction columnsBeforeHeaderGroups(columns, instance) {\n  const {\n    state: { columnOrder },\n  } = instance\n\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnID = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnID)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useMain(instance) {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useColumnOrder')\n\n  const { setState } = instance\n\n  const setColumnOrder = React.useCallback(\n    updater => {\n      return setState(old => {\n        return {\n          ...old,\n          columnOrder:\n            typeof updater === 'function' ? updater(old.columnOrder) : updater,\n        }\n      }, actions.setColumnOrder)\n    },\n    [setState]\n  )\n\n  return {\n    ...instance,\n    setColumnOrder,\n  }\n}\n","import PropTypes from 'prop-types'\n\n//\n\nimport { defaultState } from '../hooks/useTable'\nimport { defaultColumn, getFirstDefined } from '../utils'\nimport { mergeProps, applyPropHooks } from '../utils'\n\ndefaultState.columnResizing = {\n  columnWidths: {},\n}\n\ndefaultColumn.canResize = true\n\nconst propTypes = {}\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = []\n  hooks.useBeforeDimensions.push(useBeforeDimensions)\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nconst useBeforeDimensions = instance => {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useResizeColumns')\n\n  const {\n    flatHeaders,\n    disableResizing,\n    hooks: { getHeaderProps },\n    state: { columnResizing },\n    setState,\n  } = instance\n\n  getHeaderProps.push(() => {\n    return {\n      style: {\n        position: 'relative',\n      },\n    }\n  })\n\n  const onMouseDown = (e, header) => {\n    const headersToResize = getLeafHeaders(header)\n    const startWidths = headersToResize.map(header => header.totalWidth)\n    const startX = e.clientX\n\n    const onMouseMove = e => {\n      const currentX = e.clientX\n      const deltaX = currentX - startX\n\n      const percentageDeltaX = deltaX / headersToResize.length\n\n      const newColumnWidths = {}\n      headersToResize.forEach((header, index) => {\n        newColumnWidths[header.id] = Math.max(\n          startWidths[index] + percentageDeltaX,\n          0\n        )\n      })\n\n      setState(old => ({\n        ...old,\n        columnResizing: {\n          ...old.columnResizing,\n          columnWidths: {\n            ...old.columnResizing.columnWidths,\n            ...newColumnWidths,\n          },\n        },\n      }))\n    }\n\n    const onMouseUp = e => {\n      document.removeEventListener('mousemove', onMouseMove)\n      document.removeEventListener('mouseup', onMouseUp)\n\n      setState(old => ({\n        ...old,\n        columnResizing: {\n          ...old.columnResizing,\n          startX: null,\n          isResizingColumn: null,\n        },\n      }))\n    }\n\n    document.addEventListener('mousemove', onMouseMove)\n    document.addEventListener('mouseup', onMouseUp)\n\n    setState(old => ({\n      ...old,\n      columnResizing: {\n        ...old.columnResizing,\n        startX,\n        isResizingColumn: header.id,\n      },\n    }))\n  }\n\n  flatHeaders.forEach(\n    (instance => header => {\n      const canResize = getFirstDefined(\n        header.disableResizing === true ? false : undefined,\n        disableResizing === true ? false : undefined,\n        true\n      )\n\n      header.canResize = canResize\n      header.width = columnResizing.columnWidths[header.id] || header.width\n      header.isResizing = columnResizing.isResizingColumn === header.id\n\n      if (canResize) {\n        const resizerPropsFromHooks = applyPropHooks(\n          instance.hooks.getResizerProps,\n          header,\n          instance\n        )\n        header.getResizerProps = userProps => {\n          return mergeProps(\n            {\n              onMouseDown: e => e.persist() || onMouseDown(e, header),\n              style: {\n                cursor: 'ew-resize',\n              },\n              draggable: false,\n            },\n            resizerPropsFromHooks,\n            userProps\n          )\n        }\n      }\n    })(instance)\n  )\n\n  return instance\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","import PropTypes from 'prop-types'\n\nconst propTypes = {}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst useMain = instance => {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useAbsoluteLayout')\n\n  const {\n    totalColumnsWidth,\n    hooks: {\n      getRowProps,\n      getTableBodyProps,\n      getHeaderGroupProps,\n      getHeaderProps,\n      getCellProps,\n    },\n  } = instance\n\n  const rowStyles = {\n    style: {\n      position: 'relative',\n      width: `${totalColumnsWidth}px`,\n    },\n  }\n\n  getTableBodyProps.push(() => rowStyles)\n  getRowProps.push(() => rowStyles)\n  getHeaderGroupProps.push(() => rowStyles)\n\n  // Calculating column/cells widths\n  const cellStyles = {\n    position: 'absolute',\n    top: 0,\n  }\n\n  getHeaderProps.push(header => {\n    return {\n      style: {\n        ...cellStyles,\n        left: `${header.totalLeft}px`,\n        width: `${header.totalWidth}px`,\n      },\n    }\n  })\n\n  getCellProps.push(cell => {\n    return {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    }\n  })\n\n  return instance\n}\n","import PropTypes from 'prop-types'\n\nconst propTypes = {}\n\nexport const useBlockLayout = hooks => {\n  hooks.useMain.push(useMain)\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n\nconst useMain = instance => {\n  PropTypes.checkPropTypes(propTypes, instance, 'property', 'useBlockLayout')\n\n  const {\n    totalColumnsWidth,\n    hooks: { getRowProps, getHeaderGroupProps, getHeaderProps, getCellProps },\n  } = instance\n\n  const rowStyles = {\n    style: {\n      display: 'flex',\n      width: `${totalColumnsWidth}px`,\n    },\n  }\n\n  getRowProps.push(() => rowStyles)\n  getHeaderGroupProps.push(() => rowStyles)\n\n  const cellStyles = {\n    display: 'inline-block',\n    boxSizing: 'border-box',\n  }\n\n  getHeaderProps.push(header => {\n    return {\n      style: {\n        ...cellStyles,\n        width: `${header.totalWidth}px`,\n      },\n    }\n  })\n\n  getCellProps.push(cell => {\n    return {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    }\n  })\n\n  return instance\n}\n"],"names":["defaultColumn","Cell","cell","value","String","show","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","safeUseLayoutEffect","window","process","env","NODE_ENV","React","useLayoutEffect","useEffect","findMaxDepth","columns","depth","reduce","prev","curr","Math","max","decorateColumn","column","userDefaultColumn","parent","index","id","accessor","Header","accessorPath","split","row","getBy","console","error","Error","decorateColumnTree","map","columnIndex","makeHeaderGroups","flatColumns","headerGroups","buildGroup","headerGroup","headers","parentColumns","hasParents","some","col","forEach","isFirst","length","latestParentColumn","reverse","similarParentColumns","filter","d","originalID","push","join","placeholderColumn","placeholderOf","includes","totalHeaderCount","sum","header","determineHeaderVisibility","instance","handleColumn","parentVisible","isVisible","totalVisibleHeaderCount","subColumn","subHeader","obj","path","def","pathObj","makePathArray","val","cursor","pathPart","e","defaultOrderByFn","arr","funcs","dirs","sort","rowA","rowB","i","sortFn","desc","sortInt","getFirstDefined","args","defaultGroupByFn","rows","columnID","resKey","values","Array","isArray","getElementDimensions","element","rect","getBoundingClientRect","style","getComputedStyle","margins","left","parseInt","marginLeft","right","marginRight","padding","paddingLeft","paddingRight","ceil","outerWidth","scrollWidth","flexRender","Comp","props","isReactComponent","isClassComponent","component","proto","Object","getPrototypeOf","prototype","isFunctionComponent","mergeProps","groups","className","rest","Boolean","applyHooks","hooks","initial","next","nextValue","applyPropHooks","warnUnknownProps","keys","JSON","stringify","isFunction","a","flattenBy","childKey","recurse","ensurePluginOrder","plugins","befores","pluginName","afters","pluginIndex","findIndex","plugin","before","beforeIndex","after","afterIndex","expandRows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","key","isExpanded","original","canExpand","subRows","flattenDeep","replace","newArr","propTypes","data","PropTypes","array","isRequired","arrayOf","object","getSubRows","func","getRowID","debug","bool","renderErr","defaultState","defaultInitialState","defaultColumnInstance","defaultReducer","old","newState","defaultGetSubRows","defaultGetRowID","useTable","checkPropTypes","userColumns","initialState","userState","state","reducer","useState","originalState","originalSetState","useMemo","setState","useCallback","updater","type","instanceRef","useRef","assign","current","columnsBeforeHeaderGroups","columnsBeforeHeaderGroupsDeps","useBeforeDimensions","useMain","useRows","prepareRow","getTableProps","getTableBodyProps","getRowProps","getHeaderGroupProps","getHeaderProps","getCellProps","time","timeEnd","newColumns","flatRows","accessRow","originalRow","parentPath","rowID","cells","unpreparedAccessWarning","undefined","accessedData","flatHeaders","all","calculateDimensions","render","userProps","colSpan","columnPathStr","totalColumnsWidth","calculateHeaderWidths","sumTotalWidth","subHeaders","totalLeft","totalWidth","min","actions","addActions","acts","action","types","string","paginateExpandedRows","useExpanded","getExpandedToggleProps","toggleExpandedByPath","set","exists","shouldExist","newExpanded","Set","add","delete","toggleExpanded","propsFromHooks","onClick","persist","title","info","expandedDepth","findExpandedDepth","maxDepth","text","filterValue","rowValue","toLowerCase","autoRemove","exactText","exactTextCase","includesAll","every","exact","equals","between","Infinity","temp","filters","shape","disableFilters","Filter","any","manualFilters","useFilters","userFilterTypes","filterTypes","preFilteredRows","preFilteredFlatRows","setFilter","find","filterMethod","getFilterMethod","newFilter","shouldAutoRemove","remove","newFilters","setAllFilters","columnDisableFilters","canFilter","filteredRows","filteredFlatRows","filterRows","entries","filteredSoFar","warn","nonFilteredColumns","average","round","median","uniqueCount","size","count","groupBy","aggregate","oneOfType","disableGrouping","Aggregated","groupByFn","manualGrouping","aggregations","useGroupBy","getGroupByToggleProps","deps","groupByColumns","g","nonGroupByColumns","groupByBoundaryColumnIndex","groupByBoundary","slice","manualGroupBy","userAggregations","columnDisableGrouping","isGrouped","groupedIndex","indexOf","canGroupBy","toggleGroupBy","toggle","resolvedToggle","groupByTogglePropsFromHooks","groupByID","isRepeatedValue","isAggregated","groupedRows","aggregateRowsToValues","isSourceRows","columnValues","aggregator","aggregateFn","groupRecursively","groupByVal","preGroupedRows","reSplitAlphaNumeric","alphanumeric","getRowValueByColumnID","b","toString","aa","shift","bb","an","bn","combo","isNaN","datetime","getTime","compareBasic","basic","sortBy","sortType","sortDescFirst","disableSorting","orderByFn","sortTypes","manualSorting","disableMultiSort","isMultiSortEvent","maxMultiSortColCount","number","disableSortRemove","disableMultiRemove","useSortBy","getSortByToggleProps","userSortTypes","shiftKey","toggleSortBy","multi","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","sortByChange","columnDisableSorting","canSort","clearSorting","sortByTogglePropsFromHooks","columnSort","isSorted","sortedIndex","isSortedDesc","sortedRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","preSortedRows","pageSize","pageIndex","manualPagination","usePagination","disablePageResetOnDataChange","userPageCount","pageCount","rowDep","isPageIndexMountedRef","disablePageResetOnDataChangeRef","pageChange","pageOptions","page","pageStart","pageEnd","canPreviousPage","canNextPage","gotoPage","newPageIndex","previousPage","nextPage","setPageSize","topRowIndex","floor","pageSizeChange","selectedRowPaths","manualRowSelectedKey","useRowSelect","getToggleRowSelectedProps","getToggleAllRowsSelectedProps","selectedFlatRows","subRowPaths","isSelected","disableSelectedRowsResetOnDataChange","flatRowPaths","isAllRowsSelected","isRowSelectedMountedRef","disableSelectedRowsResetOnDataChangeRef","toggleRowSelectedAll","selectAll","updateParentRow","parentKey","selected","rowPath","startsWith","has","toggleRowSelected","childRowPrefixKey","newSelectedRows","toggleAllRowsSelectedPropsFromHooks","onChange","target","checked","toggleRowSelectedPropsFromHooks","rowState","initialRowStateAccessor","useRowState","setRowState","pathKey","setCellState","cellState","rowsMountedRef","columnOrder","useColumnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnID","foundIndex","setColumnOrder","columnResizing","columnWidths","canResize","useResizeColumns","getResizerProps","disableResizing","position","onMouseDown","headersToResize","getLeafHeaders","startWidths","startX","clientX","onMouseMove","currentX","deltaX","percentageDeltaX","newColumnWidths","onMouseUp","document","removeEventListener","isResizingColumn","addEventListener","isResizing","resizerPropsFromHooks","draggable","leafHeaders","recurseHeader","useAbsoluteLayout","rowStyles","cellStyles","top","useBlockLayout","display","boxSizing"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,aAAa,GAAG;EAC3BC,IAAI,EAAE;+BAAGC,IAAH,CAAWC,KAAX;QAAWA,KAAX,gCAAmB,EAAnB;WAA8BC,MAAM,CAACD,KAAD,CAApC;GADqB;EAE3BE,IAAI,EAAE,IAFqB;EAG3BC,KAAK,EAAE,GAHoB;EAI3BC,QAAQ,EAAE,CAJiB;EAK3BC,QAAQ,EAAEC,MAAM,CAACC;CALZ;;AASP,AAAO,IAAMC,mBAAmB,GAC9B,OAAOC,MAAP,KAAkB,WAAlB,IAAiCC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1D,GACIC,KAAK,CAACC,eADV,GAEID,KAAK,CAACE,SAHL;;AAMP,AAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA0C;MAAXC,KAAW,uEAAH,CAAG;SACxCD,OAAO,CAACE,MAAR,CAAe,UAACC,IAAD,EAAOC,IAAP,EAAgB;QAChCA,IAAI,CAACJ,OAAT,EAAkB;aACTK,IAAI,CAACC,GAAL,CAASH,IAAT,EAAeJ,YAAY,CAACK,IAAI,CAACJ,OAAN,EAAeC,KAAK,GAAG,CAAvB,CAA3B,CAAP;;;WAEKA,KAAP;GAJK,EAKJ,CALI,CAAP;;AAQF,AAAO,SAASM,cAAT,CACLC,MADK,EAELC,iBAFK,EAGLC,MAHK,EAILT,KAJK,EAKLU,KALK,EAML;;EAEAH,MAAM,sBAAQ5B,aAAR,MAA0B6B,iBAA1B,MAAgDD,MAAhD,CAAN,CAFA;;gBAK+BA,MAL/B;MAKMI,EALN,WAKMA,EALN;MAKUC,QALV,WAKUA,QALV;MAKoBC,MALpB,WAKoBA,MALpB;;MAOI,OAAOD,QAAP,KAAoB,QAAxB,EAAkC;IAChCD,EAAE,GAAGA,EAAE,IAAIC,QAAX;QACME,YAAY,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAArB;;IACAH,QAAQ,GAAG,kBAAAI,GAAG;aAAIC,KAAK,CAACD,GAAD,EAAMF,YAAN,CAAT;KAAd;;;MAGE,CAACH,EAAD,IAAO,OAAOE,MAAP,KAAkB,QAAzB,IAAqCA,MAAzC,EAAiD;IAC/CF,EAAE,GAAGE,MAAL;;;MAGE,CAACF,EAAD,IAAOJ,MAAM,CAACR,OAAlB,EAA2B;IACzBmB,OAAO,CAACC,KAAR,CAAcZ,MAAd;UACM,IAAIa,KAAJ,CAAU,qDAAV,CAAN;;;MAGE,CAACT,EAAL,EAAS;IACPO,OAAO,CAACC,KAAR,CAAcZ,MAAd;UACM,IAAIa,KAAJ,CAAU,+CAAV,CAAN;;;EAGFb,MAAM;;IAEJM,MAAM,EAAE;aAAM,iDAAN;;KACLN,MAHC;;IAKJI,EAAE,EAAFA,EALI;IAMJC,QAAQ,EAARA,QANI;IAOJH,MAAM,EAANA,MAPI;IAQJT,KAAK,EAALA,KARI;IASJU,KAAK,EAALA;IATF;SAYOH,MAAP;;;AAIF,AAAO,SAASc,kBAAT,CAA4BtB,OAA5B,EAAqCpB,aAArC,EAAoD8B,MAApD,EAAuE;MAAXT,KAAW,uEAAH,CAAG;SACrED,OAAO,CAACuB,GAAR,CAAY,UAACf,MAAD,EAASgB,WAAT,EAAyB;IAC1ChB,MAAM,GAAGD,cAAc,CAACC,MAAD,EAAS5B,aAAT,EAAwB8B,MAAxB,EAAgCT,KAAhC,EAAuCuB,WAAvC,CAAvB;;QACIhB,MAAM,CAACR,OAAX,EAAoB;MAClBQ,MAAM,CAACR,OAAP,GAAiBsB,kBAAkB,CACjCd,MAAM,CAACR,OAD0B,EAEjCpB,aAFiC,EAGjC4B,MAHiC,EAIjCP,KAAK,GAAG,CAJyB,CAAnC;;;WAOKO,MAAP;GAVK,CAAP;;;AAeF,AAAO,SAASiB,gBAAT,CAA0BC,WAA1B,EAAuC9C,aAAvC,EAAsD;MACrD+C,YAAY,GAAG,EAArB,CAD2D;;MAIrDC,UAAU,GAAG,SAAbA,UAAa,CAAC5B,OAAD,EAAUC,KAAV,EAAoB;QAC/B4B,WAAW,GAAG;MAClBC,OAAO,EAAE;KADX;QAIMC,aAAa,GAAG,EAAtB,CALqC;;QAQ/BC,UAAU,GAAGhC,OAAO,CAACiC,IAAR,CAAa,UAAAC,GAAG;aAAIA,GAAG,CAACxB,MAAR;KAAhB,CAAnB;IAEAV,OAAO,CAACmC,OAAR,CAAgB,UAAA3B,MAAM,EAAI;;UAElB4B,OAAO,GAAG,CAACL,aAAa,CAACM,MAA/B,CAFwB;;UAKpBC,kBAAkB,GAAG,UAAIP,aAAJ,EAAmBQ,OAAnB,GAA6B,CAA7B,CAAzB,CALwB;;UAQpB/B,MAAM,CAACE,MAAX,EAAmB;YACX8B,oBAAoB,GAAGT,aAAa,CAACU,MAAd,CAC3B,UAAAC,CAAC;iBAAIA,CAAC,CAACC,UAAF,KAAiBnC,MAAM,CAACE,MAAP,CAAcE,EAAnC;SAD0B,CAA7B;;YAGIwB,OAAO,IAAIE,kBAAkB,CAACK,UAAnB,KAAkCnC,MAAM,CAACE,MAAP,CAAcE,EAA/D,EAAmE;UACjEmB,aAAa,CAACa,IAAd,oBACKpC,MAAM,CAACE,MADZ;YAEEiC,UAAU,EAAEnC,MAAM,CAACE,MAAP,CAAcE,EAF5B;YAGEA,EAAE,EAAE,CAACJ,MAAM,CAACE,MAAP,CAAcE,EAAf,EAAmB4B,oBAAoB,CAACH,MAAxC,EAAgDQ,IAAhD,CAAqD,GAArD;;;OARV,MAWO,IAAIb,UAAJ,EAAgB;;YAEfW,UAAU,GAAG,CAACnC,MAAM,CAACI,EAAR,EAAY,aAAZ,EAA2BiC,IAA3B,CAAgC,GAAhC,CAAnB;;YACML,qBAAoB,GAAGT,aAAa,CAACU,MAAd,CAC3B,UAAAC,CAAC;iBAAIA,CAAC,CAACC,UAAF,KAAiBA,UAArB;SAD0B,CAA7B;;YAGMG,iBAAiB,GAAGvC,cAAc,CACtC;UACEoC,UAAU,EAAVA,UADF;UAEE/B,EAAE,EAAE,CAACJ,MAAM,CAACI,EAAR,EAAY,aAAZ,EAA2B4B,qBAAoB,CAACH,MAAhD,EAAwDQ,IAAxD,CACF,GADE,CAFN;UAKEE,aAAa,EAAEvC;SANqB,EAQtC5B,aARsC,CAAxC;;YAWEwD,OAAO,IACPE,kBAAkB,CAACK,UAAnB,KAAkCG,iBAAiB,CAACH,UAFtD,EAGE;UACAZ,aAAa,CAACa,IAAd,CAAmBE,iBAAnB;;OAvCoB;;;UA4CpBtC,MAAM,CAACE,MAAP,IAAiBsB,UAArB,EAAiC;QAC/BM,kBAAkB,GAAG,UAAIP,aAAJ,EAAmBQ,OAAnB,GAA6B,CAA7B,CAArB;QACAD,kBAAkB,CAACR,OAAnB,GAA6BQ,kBAAkB,CAACR,OAAnB,IAA8B,EAA3D;;YACI,CAACQ,kBAAkB,CAACR,OAAnB,CAA2BkB,QAA3B,CAAoCxC,MAApC,CAAL,EAAkD;UAChD8B,kBAAkB,CAACR,OAAnB,CAA2Bc,IAA3B,CAAgCpC,MAAhC;;;;MAIJA,MAAM,CAACyC,gBAAP,GAA0BzC,MAAM,CAACsB,OAAP,GACtBtB,MAAM,CAACsB,OAAP,CAAe5B,MAAf,CACE,UAACgD,GAAD,EAAMC,MAAN;eAAiBD,GAAG,GAAGC,MAAM,CAACF,gBAA9B;OADF,EAEE,CAFF,CADsB,GAKtB,CALJ,CApDwB;;MA0DxBpB,WAAW,CAACC,OAAZ,CAAoBc,IAApB,CAAyBpC,MAAzB;KA1DF;IA6DAmB,YAAY,CAACiB,IAAb,CAAkBf,WAAlB;;QAEIE,aAAa,CAACM,MAAlB,EAA0B;MACxBT,UAAU,CAACG,aAAD,EAAgB9B,KAAK,GAAG,CAAxB,CAAV;;GA1EJ;;EA8EA2B,UAAU,CAACF,WAAD,EAAc,CAAd,CAAV;SAEOC,YAAY,CAACY,OAAb,EAAP;;AAGF,AAAO,SAASa,yBAAT,CAAmCC,QAAnC,EAA6C;MAC1CvB,OAD0C,GAC9BuB,QAD8B,CAC1CvB,OAD0C;;MAG5CwB,YAAY,GAAG,SAAfA,YAAe,CAAC9C,MAAD,EAAS+C,aAAT,EAA2B;IAC9C/C,MAAM,CAACgD,SAAP,GAAmBD,aAAa,GAC5B,OAAO/C,MAAM,CAACvB,IAAd,KAAuB,UAAvB,GACEuB,MAAM,CAACvB,IAAP,CAAYoE,QAAZ,CADF,GAEE,CAAC,CAAC7C,MAAM,CAACvB,IAHiB,GAI5B,KAJJ;QAMIwE,uBAAuB,GAAG,CAA9B;;QAEIjD,MAAM,CAACsB,OAAP,IAAkBtB,MAAM,CAACsB,OAAP,CAAeO,MAArC,EAA6C;MAC3C7B,MAAM,CAACsB,OAAP,CAAeK,OAAf,CACE,UAAAuB,SAAS;eACND,uBAAuB,IAAIH,YAAY,CAACI,SAAD,EAAYlD,MAAM,CAACgD,SAAnB,CADjC;OADX;KADF,MAKO;MACLC,uBAAuB,GAAGjD,MAAM,CAACgD,SAAP,GAAmB,CAAnB,GAAuB,CAAjD;;;IAGFhD,MAAM,CAACiD,uBAAP,GAAiCA,uBAAjC;WAEOA,uBAAP;GApBF;;MAuBIA,uBAAuB,GAAG,CAA9B;EAEA3B,OAAO,CAACK,OAAR,CACE,UAAAwB,SAAS;WAAKF,uBAAuB,IAAIH,YAAY,CAACK,SAAD,EAAY,IAAZ,CAA5C;GADX;;AAKF,AAAO,SAASzC,KAAT,CAAe0C,GAAf,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;MAChC,CAACD,IAAL,EAAW;WACFD,GAAP;;;MAEIG,OAAO,GAAGC,aAAa,CAACH,IAAD,CAA7B;MACII,GAAJ;;MACI;IACFA,GAAG,GAAGF,OAAO,CAAC7D,MAAR,CAAe,UAACgE,MAAD,EAASC,QAAT;aAAsBD,MAAM,CAACC,QAAD,CAA5B;KAAf,EAAuDP,GAAvD,CAAN;GADF,CAEE,OAAOQ,CAAP,EAAU;;;SAGL,OAAOH,GAAP,KAAe,WAAf,GAA6BA,GAA7B,GAAmCH,GAA1C;;AAGF,AAAO,SAASO,gBAAT,CAA0BC,GAA1B,EAA+BC,KAA/B,EAAsCC,IAAtC,EAA4C;SAC1C,mBAAIF,GAAJ,EAASG,IAAT,CAAc,UAACC,IAAD,EAAOC,IAAP,EAAgB;SAC9B,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAAClC,MAA1B,EAAkCuC,CAAC,IAAI,CAAvC,EAA0C;UAClCC,MAAM,GAAGN,KAAK,CAACK,CAAD,CAApB;UACME,IAAI,GAAGN,IAAI,CAACI,CAAD,CAAJ,KAAY,KAAZ,IAAqBJ,IAAI,CAACI,CAAD,CAAJ,KAAY,MAA9C;UACMG,OAAO,GAAGF,MAAM,CAACH,IAAD,EAAOC,IAAP,CAAtB;;UACII,OAAO,KAAK,CAAhB,EAAmB;eACVD,IAAI,GAAG,CAACC,OAAJ,GAAcA,OAAzB;;;;WAGGP,IAAI,CAAC,CAAD,CAAJ,GAAUE,IAAI,CAAC/D,KAAL,GAAagE,IAAI,CAAChE,KAA5B,GAAoCgE,IAAI,CAAChE,KAAL,GAAa+D,IAAI,CAAC/D,KAA7D;GATK,CAAP;;AAaF,AAAO,SAASqE,eAAT,GAAkC;oCAANC,IAAM;IAANA,IAAM;;;OAClC,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,IAAI,CAAC5C,MAAzB,EAAiCuC,CAAC,IAAI,CAAtC,EAAyC;QACnC,OAAOK,IAAI,CAACL,CAAD,CAAX,KAAmB,WAAvB,EAAoC;aAC3BK,IAAI,CAACL,CAAD,CAAX;;;;AAKN,AAAO,SAASM,gBAAT,CAA0BC,IAA1B,EAAgCC,QAAhC,EAA0C;SACxCD,IAAI,CAACjF,MAAL,CAAY,UAACC,IAAD,EAAOc,GAAP,EAAY2D,CAAZ,EAAkB;;;QAG7BS,MAAM,aAAMpE,GAAG,CAACqE,MAAJ,CAAWF,QAAX,CAAN,CAAZ;IACAjF,IAAI,CAACkF,MAAD,CAAJ,GAAeE,KAAK,CAACC,OAAN,CAAcrF,IAAI,CAACkF,MAAD,CAAlB,IAA8BlF,IAAI,CAACkF,MAAD,CAAlC,GAA6C,EAA5D;IACAlF,IAAI,CAACkF,MAAD,CAAJ,CAAazC,IAAb,CAAkB3B,GAAlB;WACOd,IAAP;GANK,EAOJ,EAPI,CAAP;;AAUF,AAAO,SAASsF,oBAAT,CAA8BC,OAA9B,EAAuC;MACtCC,IAAI,GAAGD,OAAO,CAACE,qBAAR,EAAb;MACMC,KAAK,GAAGrG,MAAM,CAACsG,gBAAP,CAAwBJ,OAAxB,CAAd;MACMK,OAAO,GAAG;IACdC,IAAI,EAAEC,QAAQ,CAACJ,KAAK,CAACK,UAAP,CADA;IAEdC,KAAK,EAAEF,QAAQ,CAACJ,KAAK,CAACO,WAAP;GAFjB;MAIMC,OAAO,GAAG;IACdL,IAAI,EAAEC,QAAQ,CAACJ,KAAK,CAACS,WAAP,CADA;IAEdH,KAAK,EAAEF,QAAQ,CAACJ,KAAK,CAACU,YAAP;GAFjB;SAIO;IACLP,IAAI,EAAE3F,IAAI,CAACmG,IAAL,CAAUb,IAAI,CAACK,IAAf,CADD;IAEL9G,KAAK,EAAEmB,IAAI,CAACmG,IAAL,CAAUb,IAAI,CAACzG,KAAf,CAFF;IAGLuH,UAAU,EAAEpG,IAAI,CAACmG,IAAL,CACVb,IAAI,CAACzG,KAAL,GAAa6G,OAAO,CAACC,IAArB,GAA4BD,OAAO,CAACI,KAApC,GAA4CE,OAAO,CAACL,IAApD,GAA2DK,OAAO,CAACF,KADzD,CAHP;IAMLD,UAAU,EAAEH,OAAO,CAACC,IANf;IAOLI,WAAW,EAAEL,OAAO,CAACI,KAPhB;IAQLG,WAAW,EAAED,OAAO,CAACL,IARhB;IASLO,YAAY,EAAEF,OAAO,CAACF,KATjB;IAULO,WAAW,EAAEhB,OAAO,CAACgB;GAVvB;;AAcF,AAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;SAC/BC,gBAAgB,CAACF,IAAD,CAAhB,GAAyB,oBAAC,IAAD,EAAUC,KAAV,CAAzB,GAA+CD,IAAtD;;;AAGF,SAASG,gBAAT,CAA0BC,SAA1B,EAAqC;SAEjC,OAAOA,SAAP,KAAqB,UAArB,IACA,CAAC,CAAE,YAAM;QACHC,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBH,SAAtB,CAAZ;WACOC,KAAK,CAACG,SAAN,IAAmBH,KAAK,CAACG,SAAN,CAAgBN,gBAA1C;GAFA,EAFJ;;;AASF,SAASO,mBAAT,CAA6BL,SAA7B,EAAwC;SAC/B,OAAOA,SAAP,KAAqB,UAA5B;;;AAGF,SAASF,gBAAT,CAA0BE,SAA1B,EAAqC;SAC5BD,gBAAgB,CAACC,SAAD,CAAhB,IAA+BK,mBAAmB,CAACL,SAAD,CAAzD;;;AAGF,AAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,GAAe;MACnCT,KAAK,GAAG,EAAZ;;qCAD4BU,MAAW;IAAXA,MAAW;;;EAEvCA,MAAM,CAACpF,OAAP,CAAe,YAA6C;oFAAP,EAAO;4BAA1C0D,KAA0C;QAA1CA,KAA0C,4BAAlC,EAAkC;QAA9B2B,SAA8B,SAA9BA,SAA8B;QAAhBC,IAAgB;;IAC1DZ,KAAK,sBACAA,KADA,MAEAY,IAFA;MAGH5B,KAAK,qBACCgB,KAAK,CAAChB,KAAN,IAAe,EADhB,MAEAA,KAFA,CAHF;MAOH2B,SAAS,EAAE,CAACX,KAAK,CAACW,SAAP,EAAkBA,SAAlB,EAA6B/E,MAA7B,CAAoCiF,OAApC,EAA6C7E,IAA7C,CAAkD,GAAlD;MAPb;GADF;SAWOgE,KAAP;CAbK;AAgBP,AAAO,IAAMc,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,OAAR;qCAAoB5C,IAApB;IAAoBA,IAApB;;;SACxB2C,KAAK,CAAC1H,MAAN,CAAa,UAACC,IAAD,EAAO2H,IAAP,EAAgB;QACrBC,SAAS,GAAGD,IAAI,MAAJ,UAAK3H,IAAL,SAAc8E,IAAd,EAAlB;;QACI,OAAO8C,SAAP,KAAqB,WAAzB,EAAsC;YAC9B,IAAI1G,KAAJ,CACJ,mEADI,CAAN;;;WAIK0G,SAAP;GAPF,EAQGF,OARH,CADwB;CAAnB;AAWP,AAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,KAAD;qCAAW3C,IAAX;IAAWA,IAAX;;;SAC5B2C,KAAK,CAAC1H,MAAN,CAAa,UAACC,IAAD,EAAO2H,IAAP;WAAgBR,UAAU,CAACnH,IAAD,EAAO2H,IAAI,MAAJ,SAAQ7C,IAAR,CAAP,CAA1B;GAAb,EAA8D,EAA9D,CAD4B;CAAvB;AAGP,AAAO,IAAMgD,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAApB,KAAK,EAAI;MACnCK,MAAM,CAACgB,IAAP,CAAYrB,KAAZ,EAAmBxE,MAAvB,EAA+B;UACvB,IAAIhB,KAAJ,uDAGR8G,IAAI,CAACC,SAAL,CAAevB,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAHQ,EAAN;;CAFG;AAUP,AAAO,SAAS3D,GAAT,CAAaoB,GAAb,EAAkB;SAChBA,GAAG,CAACpE,MAAJ,CAAW,UAACC,IAAD,EAAOC,IAAP;WAAgBD,IAAI,GAAGC,IAAvB;GAAX,EAAwC,CAAxC,CAAP;;AAGF,AAAO,SAASiI,UAAT,CAAoBC,CAApB,EAAuB;MACxB,OAAOA,CAAP,KAAa,UAAjB,EAA6B;WACpBA,CAAP;;;AAIJ,AAAO,SAASC,SAAT,CAAmBvI,OAAnB,EAA4BwI,QAA5B,EAAsC;MACrC9G,WAAW,GAAG,EAApB;;MAEM+G,OAAO,GAAG,SAAVA,OAAU,CAAAzI,OAAO,EAAI;IACzBA,OAAO,CAACmC,OAAR,CAAgB,UAAAO,CAAC,EAAI;UACf,CAACA,CAAC,CAAC8F,QAAD,CAAN,EAAkB;QAChB9G,WAAW,CAACkB,IAAZ,CAAiBF,CAAjB;OADF,MAEO;QACL+F,OAAO,CAAC/F,CAAC,CAAC8F,QAAD,CAAF,CAAP;;KAJJ;GADF;;EAUAC,OAAO,CAACzI,OAAD,CAAP;SAEO0B,WAAP;;AAGF,AAAO,SAASgH,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6CC,UAA7C,EAAyDC,MAAzD,EAAiE;MAChEC,WAAW,GAAGJ,OAAO,CAACK,SAAR,CAClB,UAAAC,MAAM;WAAIA,MAAM,CAACJ,UAAP,KAAsBA,UAA1B;GADY,CAApB;;MAIIE,WAAW,KAAK,CAAC,CAArB,EAAwB;UAChB,IAAI1H,KAAJ,sBAAwBwH,UAAxB,kLAGNA,UAHM,4BAGsBA,UAHtB,SAAN;;;EAOFD,OAAO,CAACzG,OAAR,CAAgB,UAAA+G,MAAM,EAAI;QAClBC,WAAW,GAAGR,OAAO,CAACK,SAAR,CAClB,UAAAC,MAAM;aAAIA,MAAM,CAACJ,UAAP,KAAsBK,MAA1B;KADY,CAApB;;QAGIC,WAAW,GAAG,CAAC,CAAf,IAAoBA,WAAW,GAAGJ,WAAtC,EAAmD;YAC3C,IAAI1H,KAAJ,4BACgBwH,UADhB,mDACmEK,MADnE,mBAAN;;GALJ;EAWAJ,MAAM,CAAC3G,OAAP,CAAe,UAAAiH,KAAK,EAAI;QAChBC,UAAU,GAAGV,OAAO,CAACK,SAAR,CAAkB,UAAAC,MAAM;aAAIA,MAAM,CAACJ,UAAP,KAAsBO,KAA1B;KAAxB,CAAnB;;QACIC,UAAU,GAAG,CAAC,CAAd,IAAmBA,UAAU,GAAGN,WAApC,EAAiD;YACzC,IAAI1H,KAAJ,4BACgBwH,UADhB,oDACoEO,KADpE,mBAAN;;GAHJ;;AAUF,AAAO,SAASE,UAAT,CACLnE,IADK,SAGL;MADEoE,iBACF,SADEA,iBACF;MADqBC,QACrB,SADqBA,QACrB;kCAD+BC,aAC/B;MAD+BA,aAC/B,oCAD+C,IAC/C;MACMC,YAAY,GAAG,EAArB;;MAEMC,SAAS,GAAG,SAAZA,SAAY,CAAA1I,GAAG,EAAI;QACjB2I,GAAG,GAAG3I,GAAG,CAAC4C,IAAJ,CAAShB,IAAT,CAAc,GAAd,CAAZ;IAEA5B,GAAG,CAAC4I,UAAJ,GACG5I,GAAG,CAAC6I,QAAJ,IAAgB7I,GAAG,CAAC6I,QAAJ,CAAaP,iBAAb,CAAjB,IACAC,QAAQ,CAACxG,QAAT,CAAkB4G,GAAlB,CAFF;IAIA3I,GAAG,CAAC8I,SAAJ,GAAgB9I,GAAG,CAAC+I,OAAJ,IAAe,CAAC,CAAC/I,GAAG,CAAC+I,OAAJ,CAAY3H,MAA7C;IAEAqH,YAAY,CAAC9G,IAAb,CAAkB3B,GAAlB;;QAEIwI,aAAa,IAAIxI,GAAG,CAAC+I,OAArB,IAAgC/I,GAAG,CAAC+I,OAAJ,CAAY3H,MAA5C,IAAsDpB,GAAG,CAAC4I,UAA9D,EAA0E;MACxE5I,GAAG,CAAC+I,OAAJ,CAAY7H,OAAZ,CAAoBwH,SAApB;;GAZJ;;EAgBAxE,IAAI,CAAChD,OAAL,CAAawH,SAAb;SAEOD,YAAP;;;AAKF,SAAS1F,aAAT,CAAuBJ,GAAvB,EAA4B;SAExBqG,WAAW,CAACrG,GAAD,CAAX;GAEGrC,GAFH,CAEO,UAAAmB,CAAC;WAAI1D,MAAM,CAAC0D,CAAD,CAAN,CAAUwH,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,CAAJ;GAFR;GAIGrH,IAJH,CAIQ,GAJR;GAMGqH,OANH,CAMW,KANX,EAMkB,GANlB,EAOGA,OAPH,CAOW,KAPX,EAOkB,EAPlB;GASGlJ,KATH,CASS,GATT,CADF;;;AAcF,SAASiJ,WAAT,CAAqB3F,GAArB,EAAuC;MAAb6F,MAAa,uEAAJ,EAAI;;MACjC,CAAC5E,KAAK,CAACC,OAAN,CAAclB,GAAd,CAAL,EAAyB;IACvB6F,MAAM,CAACvH,IAAP,CAAY0B,GAAZ;GADF,MAEO;SACA,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAAG,CAACjC,MAAxB,EAAgCuC,CAAC,IAAI,CAArC,EAAwC;MACtCqF,WAAW,CAAC3F,GAAG,CAACM,CAAD,CAAJ,EAASuF,MAAT,CAAX;;;;SAGGA,MAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7bF,IAAMC,SAAS,GAAG;;EAEhBC,IAAI,EAAEC,SAAS,CAACC,KAAV,CAAgBC,UAFN;EAGhBxK,OAAO,EAAEsK,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACI,MAA5B,EAAoCF,UAH7B;EAIhB5L,aAAa,EAAE0L,SAAS,CAACI,MAJT;EAKhBC,UAAU,EAAEL,SAAS,CAACM,IALN;EAMhBC,QAAQ,EAAEP,SAAS,CAACM,IANJ;EAOhBE,KAAK,EAAER,SAAS,CAACS;CAPnB;AAUA,IAAMC,SAAS,GACb,uKADF;AAGA,IAAaC,YAAY,GAAG,EAArB;AAEP,IAAMC,mBAAmB,GAAG,EAA5B;AACA,IAAMC,qBAAqB,GAAG,EAA9B;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,QAAN;SAAmBA,QAAnB;CAAvB;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACtK,GAAD,EAAMN,KAAN;SAAgBM,GAAG,CAAC+I,OAAJ,IAAe,EAA/B;CAA1B;;AACA,IAAMwB,eAAe,GAAG,SAAlBA,eAAkB,CAACvK,GAAD,EAAMN,KAAN;SAAgBA,KAAhB;CAAxB;;AAEA,IAAa8K,QAAQ,GAAG,SAAXA,QAAW,CAAC5E,KAAD,EAAuB;;EAE7CyD,SAAS,CAACoB,cAAV,CAAyBtB,SAAzB,EAAoCvD,KAApC,EAA2C,UAA3C,EAAuD,UAAvD,EAF6C;;MAM3CwD,IAN2C,GAezCxD,KAfyC,CAM3CwD,IAN2C;MAOlCsB,WAPkC,GAezC9E,KAfyC,CAO3C7G,OAP2C;4BAezC6G,KAfyC,CAQ3C+E,YAR2C;MAQ3CA,YAR2C,oCAQ5BV,mBAR4B;MASpCW,SAToC,GAezChF,KAfyC,CAS3CiF,KAT2C;6BAezCjF,KAfyC,CAU3CjI,aAV2C;MAU3CA,gBAV2C,qCAU3BuM,qBAV2B;0BAezCtE,KAfyC,CAW3C8D,UAX2C;MAW3CA,UAX2C,kCAW9BY,iBAX8B;wBAezC1E,KAfyC,CAY3CgE,QAZ2C;MAY3CA,QAZ2C,gCAYhCW,eAZgC;uBAezC3E,KAfyC,CAa3CkF,OAb2C;MAa3CA,OAb2C,+BAajCX,cAbiC;MAc3CN,KAd2C,GAezCjE,KAfyC,CAc3CiE,KAd2C;EAiB7CA,KAAK,GAAGrL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,KAAxC,GAAgDmL,KAAxD,CAjB6C;;wBAoBLlL,KAAK,CAACoM,QAAN,oBACnCf,YADmC,MAEnCW,YAFmC,EApBK;;MAoBxCK,aApBwC;MAoBzBC,gBApByB;;MAyBvCJ,KAAK,GAAGlM,KAAK,CAACuM,OAAN,CAAc,YAAM;QAC5BN,SAAJ,EAAe;UACPP,QAAQ,sBACTW,aADS,CAAd;;MAGA/E,MAAM,CAACgB,IAAP,CAAY2D,SAAZ,EAAuB1J,OAAvB,CAA+B,UAAAyH,GAAG,EAAI;QACpC0B,QAAQ,CAAC1B,GAAD,CAAR,GAAgBiC,SAAS,CAACjC,GAAD,CAAzB;OADF;aAGO0B,QAAP;;;WAEKW,aAAP;GAVY,EAWX,CAACA,aAAD,EAAgBJ,SAAhB,CAXW,CAAd;MAaMO,QAAQ,GAAGxM,KAAK,CAACyM,WAAN,CACf,UAACC,OAAD,EAAUC,IAAV,EAAmB;WACVL,gBAAgB,CAAC,UAAAb,GAAG,EAAI;UACvBC,QAAQ,GAAG,OAAOgB,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACjB,GAAD,CAAvC,GAA+CiB,OAAhE;aACOP,OAAO,CAACV,GAAD,EAAMC,QAAN,EAAgBiB,IAAhB,CAAd;KAFqB,CAAvB;GAFa,EAOf,CAACR,OAAD,CAPe,CAAjB,CAtC6C;;MAiDzCS,WAAW,GAAG5M,KAAK,CAAC6M,MAAN,CAAa,EAAb,CAAlB;;oCAjDiC9D,OAAY;IAAZA,OAAY;;;EAmD7CzB,MAAM,CAACwF,MAAP,CAAcF,WAAW,CAACG,OAA1B,qBACK9F,KADL;IAEEwD,IAAI,EAAJA,IAFF;;IAGEyB,KAAK,EAALA,KAHF;IAIEM,QAAQ,EAARA,QAJF;;IAKEzD,OAAO,EAAPA,OALF;;IAMEf,KAAK,EAAE;MACLgF,yBAAyB,EAAE,EADtB;MAELC,6BAA6B,EAAE,EAF1B;MAGLC,mBAAmB,EAAE,EAHhB;MAILC,OAAO,EAAE,EAJJ;MAKLC,OAAO,EAAE,EALJ;MAMLC,UAAU,EAAE,EANP;MAOLC,aAAa,EAAE,EAPV;MAQLC,iBAAiB,EAAE,EARd;MASLC,WAAW,EAAE,EATR;MAULC,mBAAmB,EAAE,EAVhB;MAWLC,cAAc,EAAE,EAXX;MAYLC,YAAY,EAAE;;MArE2B;;MA0EzC9N,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EAAqD3J,OAAO,CAACqM,IAAR,CAAa,SAAb;EAErD7E,OAAO,CAAClG,MAAR,CAAeiF,OAAf,EAAwBvF,OAAxB,CAAgC,UAAA8G,MAAM,EAAI;IACxCA,MAAM,CAACuD,WAAW,CAACG,OAAZ,CAAoB/E,KAArB,CAAN;GADF;MAIInI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACsM,OAAR,CAAgB,SAAhB,EAjF2C;;MAoFzCzN,OAAO,GAAGJ,KAAK,CAACuM,OAAN,CACZ;WAAM7K,kBAAkB,CAACqK,WAAD,EAAc/M,gBAAd,CAAxB;GADY,EAEZ,CAACA,gBAAD,EAAgB+M,WAAhB,CAFY,CAAd,CApF6C;;;MA2FzCjK,WAAW,GAAG9B,KAAK,CAACuM,OAAN,CAAc,YAAM;QAChC1M,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqM,IAAR,CAAa,iCAAb;QAEEE,UAAU,GAAG/F,UAAU,CACzB6E,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0BgF,yBADD,EAEzBrE,SAAS,CAACvI,OAAD,EAAU,SAAV,CAFgB,EAGzBwM,WAAW,CAACG,OAHa,CAA3B;QAMIlN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACsM,OAAR,CAAgB,iCAAhB;WACKC,UAAP;GAZgB,GAchB1N,OAdgB,EAehB8K,KAfgB,4BAiBbnD,UAAU,CACX6E,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0BiF,6BADf,EAEX,EAFW,EAGXL,WAAW,CAACG,OAHD,CAjBG,GAAlB,CA3F6C;;MAoHvChL,YAAY,GAAG/B,KAAK,CAACuM,OAAN,CACnB;WAAM1K,gBAAgB,CAACC,WAAD,EAAc9C,gBAAd,CAAtB;GADmB,EAEnB,CAACA,gBAAD,EAAgB8C,WAAhB,CAFmB,CAArB;MAKMI,OAAO,GAAGlC,KAAK,CAACuM,OAAN,CAAc;WAAMxK,YAAY,CAAC,CAAD,CAAZ,CAAgBG,OAAtB;GAAd,EAA6C,CAACH,YAAD,CAA7C,CAAhB;EAEAuF,MAAM,CAACwF,MAAP,CAAcF,WAAW,CAACG,OAA1B,EAAmC;IACjC3M,OAAO,EAAPA,OADiC;IAEjC0B,WAAW,EAAXA,WAFiC;IAGjCC,YAAY,EAAZA,YAHiC;IAIjCG,OAAO,EAAPA;GAJF,EA3H6C;;uBAmIpBlC,KAAK,CAACuM,OAAN,CAAc,YAAM;QACvC1M,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqM,IAAR,CAAa,iBAAb;QAEEG,QAAQ,GAAG,EAAf,CAJ2C;;QAOrCC,SAAS,GAAG,SAAZA,SAAY,CAACC,WAAD,EAAcjJ,CAAd,EAAgD;UAA/B3E,KAA+B,uEAAvB,CAAuB;UAApB6N,UAAoB,uEAAP,EAAO;;UAE1DhE,QAAQ,GAAG+D,WAAjB;UAEME,KAAK,GAAGlD,QAAQ,CAACgD,WAAD,EAAcjJ,CAAd,CAAtB,CAJgE;;UAO1Df,IAAI,gCAAOiK,UAAP,IAAmBC,KAAnB,EAAV;UAEM9M,GAAG,GAAG;QACV6I,QAAQ,EAARA,QADU;QAEVnJ,KAAK,EAAEiE,CAFG;QAGVf,IAAI,EAAJA,IAHU;;QAIV5D,KAAK,EAALA,KAJU;QAKV+N,KAAK,EAAE,CAAC,EAAD,CALG;;OAAZ;MAQAL,QAAQ,CAAC/K,IAAT,CAAc3B,GAAd,EAjBgE;;UAoB5D+I,OAAO,GAAGW,UAAU,CAACkD,WAAD,EAAcjJ,CAAd,CAAxB;;UAEIoF,OAAJ,EAAa;QACX/I,GAAG,CAAC+I,OAAJ,GAAcA,OAAO,CAACzI,GAAR,CAAY,UAACmB,CAAD,EAAIkC,CAAJ;iBAAUgJ,SAAS,CAAClL,CAAD,EAAIkC,CAAJ,EAAO3E,KAAK,GAAG,CAAf,EAAkB4D,IAAlB,CAAnB;SAAZ,CAAd;OAvB8D;;;;UA4B1DoK,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;cAC9B,IAAI5M,KAAJ,CACJ,iGADI,CAAN;OADF;;MAKAJ,GAAG,CAAC+M,KAAJ,CAAUzM,GAAV,GAAgB0M,uBAAhB;MACAhN,GAAG,CAAC+M,KAAJ,CAAUvL,MAAV,GAAmBwL,uBAAnB;MACAhN,GAAG,CAAC+M,KAAJ,CAAU7L,OAAV,GAAoB8L,uBAApB;MACAhN,GAAG,CAAC+M,KAAJ,CAAU,CAAV,EAAaT,YAAb,GAA4BU,uBAA5B,CApCgE;;MAuChEhN,GAAG,CAACqE,MAAJ,GAAa,EAAb;MACA5D,WAAW,CAACS,OAAZ,CAAoB,UAAA3B,MAAM,EAAI;QAC5BS,GAAG,CAACqE,MAAJ,CAAW9E,MAAM,CAACI,EAAlB,IAAwBJ,MAAM,CAACK,QAAP,GACpBL,MAAM,CAACK,QAAP,CAAgBgN,WAAhB,EAA6BjJ,CAA7B,EAAgC;UAAEoF,OAAO,EAAPA,OAAF;UAAW/J,KAAK,EAALA,KAAX;UAAkBoK,IAAI,EAAJA;SAAlD,CADoB,GAEpB6D,SAFJ;OADF;aAMOjN,GAAP;KA9CF,CAP2C;;;QAyDrCkN,YAAY,GAAG9D,IAAI,CAAC9I,GAAL,CAAS,UAACmB,CAAD,EAAIkC,CAAJ;aAAUgJ,SAAS,CAAClL,CAAD,EAAIkC,CAAJ,CAAnB;KAAT,CAArB;QACInF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACsM,OAAR,CAAgB,iBAAhB;WACK,CAACU,YAAD,EAAeR,QAAf,CAAP;GA5DuB,EA6DtB,CAAC7C,KAAD,EAAQT,IAAR,EAAcQ,QAAd,EAAwBF,UAAxB,EAAoCjJ,WAApC,CA7DsB,CAnIoB;;MAmItCyD,IAnIsC;MAmIhCwI,QAnIgC;;EAkM7CnB,WAAW,CAACG,OAAZ,CAAoBxH,IAApB,GAA2BA,IAA3B;EACAqH,WAAW,CAACG,OAAZ,CAAoBgB,QAApB,GAA+BA,QAA/B,CAnM6C;;EAsM7CvK,yBAAyB,CAACoJ,WAAW,CAACG,OAAb,CAAzB,CAtM6C;;EAyM7CH,WAAW,CAACG,OAAZ,CAAoByB,WAApB,GAAkCzM,YAAY,CAACzB,MAAb,CAChC,UAACmO,GAAD,EAAMxM,WAAN;wCAA0BwM,GAA1B,sBAAkCxM,WAAW,CAACC,OAA9C;GADgC,EAEhC,EAFgC,CAAlC;MAKIrC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqM,IAAR,CAAa,2BAAb;EACFhB,WAAW,CAACG,OAAZ,GAAsBhF,UAAU,CAC9B6E,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0BkF,mBADI,EAE9BN,WAAW,CAACG,OAFkB,CAAhC;MAIIlN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACsM,OAAR,CAAgB,2BAAhB;EAEFa,mBAAmB,CAAC9B,WAAW,CAACG,OAAb,CAAnB;MAEIlN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqM,IAAR,CAAa,eAAb;EACFhB,WAAW,CAACG,OAAZ,GAAsBhF,UAAU,CAC9B6E,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0BmF,OADI,EAE9BP,WAAW,CAACG,OAFkB,CAAhC;MAIIlN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACsM,OAAR,CAAgB,eAAhB,EAhO2C;;;EAoO7CjB,WAAW,CAACG,OAAZ,CAAoByB,WAApB,CAAgCjM,OAAhC,CAAwC,UAAA3B,MAAM,EAAI;;IAEhDA,MAAM,CAAC+N,MAAP,GAAgB,UAAChC,IAAD,EAA0B;UAAnBiC,SAAmB,uEAAP,EAAO;UAClC5H,IAAI,GAAG,OAAO2F,IAAP,KAAgB,QAAhB,GAA2B/L,MAAM,CAAC+L,IAAD,CAAjC,GAA0CA,IAAvD;;UAEI,OAAO3F,IAAP,KAAgB,WAApB,EAAiC;cACzB,IAAIvF,KAAJ,CAAU2J,SAAV,CAAN;;;aAGKrE,UAAU,CAACC,IAAD,qBACZ4F,WAAW,CAACG,OADA;QAEfnM,MAAM,EAANA;SACGgO,SAHY,EAAjB;KAPF,CAFgD;;;IAiBhDhO,MAAM,CAAC8M,cAAP,GAAwB,UAAAzG,KAAK;aAC3BS,UAAU,CACR;QACEsC,GAAG,EAAE,CAAC,QAAD,EAAWpJ,MAAM,CAACI,EAAlB,EAAsBiC,IAAtB,CAA2B,GAA3B,CADP;QAEE4L,OAAO,EAAEjO,MAAM,CAACiD;OAHV,EAKRuE,cAAc,CACZwE,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0B0F,cADd,EAEZ9M,MAFY,EAGZgM,WAAW,CAACG,OAHA,CALN,EAUR9F,KAVQ,CADiB;KAA7B;GAjBF;EAgCA2F,WAAW,CAACG,OAAZ,CAAoBhL,YAApB,CAAiCQ,OAAjC,CAAyC,UAACN,WAAD,EAAc+C,CAAd,EAAoB;;IAE3D/C,WAAW,CAACC,OAAZ,GAAsBD,WAAW,CAACC,OAAZ,CAAoBW,MAApB,CAA2B,UAAAU,MAAM,EAAI;UACnDsF,OAAO,GAAG,SAAVA,OAAU,CAAA3G,OAAO;eACrBA,OAAO,CAACW,MAAR,CAAe,UAAAU,MAAM,EAAI;cACnBA,MAAM,CAACrB,OAAX,EAAoB;mBACX2G,OAAO,CAACtF,MAAM,CAACrB,OAAR,CAAd;;;iBAEKqB,MAAM,CAACK,SAAd;SAJF,EAKGnB,MANkB;OAAvB;;UAOIc,MAAM,CAACrB,OAAX,EAAoB;eACX2G,OAAO,CAACtF,MAAM,CAACrB,OAAR,CAAd;;;aAEKqB,MAAM,CAACK,SAAd;KAXoB,CAAtB,CAF2D;;QAiBvD3B,WAAW,CAACC,OAAZ,CAAoBO,MAAxB,EAAgC;MAC9BR,WAAW,CAACwL,mBAAZ,GAAkC;YAACxG,KAAD,uEAAS,EAAT;eAChCS,UAAU,CACR;UACEsC,GAAG,EAAE,iBAAUhF,CAAV,GAAe/B,IAAf,CAAoB,GAApB;SAFC,EAIRmF,cAAc,CACZwE,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0ByF,mBADd,EAEZxL,WAFY,EAGZ2K,WAAW,CAACG,OAHA,CAJN,EASR9F,KATQ,CADsB;OAAlC;;aAaO,IAAP;;GA/BJ,EApQ6C;;MAwSzCpH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqM,IAAR,CAAa,eAAb;EACFhB,WAAW,CAACG,OAAZ,CAAoBxH,IAApB,GAA2BwC,UAAU,CACnC6E,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0BoF,OADS,EAEnCR,WAAW,CAACG,OAAZ,CAAoBxH,IAFe,EAGnCqH,WAAW,CAACG,OAHuB,CAArC;MAKIlN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACsM,OAAR,CAAgB,eAAhB,EAhT2C;;;EAqT7CjB,WAAW,CAACG,OAAZ,CAAoBM,UAApB,GAAiCrN,KAAK,CAACyM,WAAN,CAAkB,UAAApL,GAAG,EAAI;IACxDA,GAAG,CAACmM,WAAJ,GAAkB,UAAAvG,KAAK;aACrBS,UAAU,CACR;QAAEsC,GAAG,EAAE,CAAC,KAAD,4BAAW3I,GAAG,CAAC4C,IAAf,GAAqBhB,IAArB,CAA0B,GAA1B;OADC,EAERmF,cAAc,CACZwE,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0BwF,WADd,EAEZnM,GAFY,EAGZuL,WAAW,CAACG,OAHA,CAFN,EAOR9F,KAPQ,CADW;KAAvB,CADwD;;;IAaxD5F,GAAG,CAAC+M,KAAJ,GAAYxB,WAAW,CAACG,OAAZ,CAAoBjL,WAApB,CACTe,MADS,CACF,UAAAC,CAAC;aAAIA,CAAC,CAACc,SAAN;KADC,EAETjC,GAFS,CAEL,UAAAf,MAAM,EAAI;UACP1B,IAAI,GAAG;QACX0B,MAAM,EAANA,MADW;QAEXS,GAAG,EAAHA,GAFW;QAGXlC,KAAK,EAAEkC,GAAG,CAACqE,MAAJ,CAAW9E,MAAM,CAACI,EAAlB;OAHT,CADa;;MAQb9B,IAAI,CAACyO,YAAL,GAAoB,UAAA1G,KAAK,EAAI;YACrB6H,aAAa,GAAG,6BAAIzN,GAAG,CAAC4C,IAAR,IAAcrD,MAAM,CAACI,EAArB,GAAyBiC,IAAzB,CAA8B,GAA9B,CAAtB;eACOyE,UAAU,CACf;UACEsC,GAAG,EAAE,CAAC,MAAD,EAAS8E,aAAT,EAAwB7L,IAAxB,CAA6B,GAA7B;SAFQ,EAIfmF,cAAc,CACZwE,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0B2F,YADd,EAEZzO,IAFY,EAGZ0N,WAAW,CAACG,OAHA,CAJC,EASf9F,KATe,CAAjB;OAFF,CARa;;;MAwBb/H,IAAI,CAACyP,MAAL,GAAc,UAAChC,IAAD,EAA0B;YAAnBiC,SAAmB,uEAAP,EAAO;YAChC5H,IAAI,GAAG,OAAO2F,IAAP,KAAgB,QAAhB,GAA2B/L,MAAM,CAAC+L,IAAD,CAAjC,GAA0CA,IAAvD;;YAEI,OAAO3F,IAAP,KAAgB,WAApB,EAAiC;gBACzB,IAAIvF,KAAJ,CAAU2J,SAAV,CAAN;;;eAGKrE,UAAU,CAACC,IAAD,qBACZ4F,WAAW,CAACG,OADA;UAEfnM,MAAM,EAANA,MAFe;UAGfS,GAAG,EAAHA,GAHe;UAIfnC,IAAI,EAAJA;WACG0P,SALY,EAAjB;OAPF;;aAgBO1P,IAAP;KA1CQ,CAAZ,CAbwD;;IA2DxD6I,UAAU,CAAC6E,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0BqF,UAA3B,EAAuChM,GAAvC,EAA4CuL,WAAW,CAACG,OAAxD,CAAV;GA3D+B,EA4D9B,EA5D8B,CAAjC;;EA8DAH,WAAW,CAACG,OAAZ,CAAoBO,aAApB,GAAoC,UAAAsB,SAAS;WAC3ClH,UAAU,CACRU,cAAc,CACZwE,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0BsF,aADd,EAEZV,WAAW,CAACG,OAFA,CADN,EAKR6B,SALQ,CADiC;GAA7C;;EASAhC,WAAW,CAACG,OAAZ,CAAoBQ,iBAApB,GAAwC,UAAAqB,SAAS;WAC/ClH,UAAU,CACRU,cAAc,CACZwE,WAAW,CAACG,OAAZ,CAAoB/E,KAApB,CAA0BuF,iBADd,EAEZX,WAAW,CAACG,OAFA,CADN,EAKR6B,SALQ,CADqC;GAAjD;;SASOhC,WAAW,CAACG,OAAnB;CArYK;;AAwYP,SAAS2B,mBAAT,CAA6BjL,QAA7B,EAAuC;MAC7BvB,OAD6B,GACjBuB,QADiB,CAC7BvB,OAD6B;EAGrCuB,QAAQ,CAACsL,iBAAT,GAA6BC,qBAAqB,CAAC9M,OAAD,CAAlD;;;AAGF,SAAS8M,qBAAT,CAA+B9M,OAA/B,EAAkD;MAAVkE,IAAU,uEAAH,CAAG;MAC5C6I,aAAa,GAAG,CAApB;EAEA/M,OAAO,CAACK,OAAR,CAAgB,UAAAgB,MAAM,EAAI;QACT2L,UADS,GACM3L,MADN,CAClBrB,OADkB;IAGxBqB,MAAM,CAAC4L,SAAP,GAAmB/I,IAAnB;;QAEI8I,UAAU,IAAIA,UAAU,CAACzM,MAA7B,EAAqC;MACnCc,MAAM,CAAC6L,UAAP,GAAoBJ,qBAAqB,CAACE,UAAD,EAAa9I,IAAb,CAAzC;KADF,MAEO;MACL7C,MAAM,CAAC6L,UAAP,GAAoB3O,IAAI,CAAC4O,GAAL,CAClB5O,IAAI,CAACC,GAAL,CAAS6C,MAAM,CAAChE,QAAhB,EAA0BgE,MAAM,CAACjE,KAAjC,CADkB,EAElBiE,MAAM,CAAC/D,QAFW,CAApB;;;QAKE+D,MAAM,CAACK,SAAX,EAAsB;MACpBwC,IAAI,IAAI7C,MAAM,CAAC6L,UAAf;MACAH,aAAa,IAAI1L,MAAM,CAAC6L,UAAxB;;GAfJ;SAmBOH,aAAP;;;ICvcIK,OAAO,GAAG,EAAhB;AACA,IAIaC,UAAU,GAAG,SAAbA,UAAa,GAAa;oCAATC,IAAS;IAATA,IAAS;;;EACrCA,IAAI,CAACjN,OAAL,CAAa,UAAAkN,MAAM,EAAI;;;;;IAKrBH,OAAO,CAACG,MAAD,CAAP,iCAAyCA,MAAzC;AACAC,AACD,GAPD;CADK;;ACEPrE,YAAY,CAACzB,QAAb,GAAwB,EAAxB;AAEA2F,UAAU,CAAC,gBAAD,EAAmB,aAAnB,CAAV;AAEA,IAAM/E,WAAS,GAAG;EAChBb,iBAAiB,EAAEe,SAAS,CAACiF,MADb;EAEhBC,oBAAoB,EAAElF,SAAS,CAACS;CAFlC;AAKA,IAAa0E,WAAW,GAAG,SAAdA,WAAc,CAAA7H,KAAK,EAAI;EAClCA,KAAK,CAAC8H,sBAAN,GAA+B,EAA/B;EACA9H,KAAK,CAACmF,OAAN,CAAcnK,IAAd,CAAmBmK,OAAnB;CAFK;AAKP0C,WAAW,CAAC5G,UAAZ,GAAyB,aAAzB;;AAEA,SAASkE,OAAT,CAAiB1J,QAAjB,EAA2B;EACzBiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,aAA1D;MAGEyH,KAJuB,GAYrBzH,QAZqB,CAIvByH,KAJuB;MAKvB3F,IALuB,GAYrB9B,QAZqB,CAKvB8B,IALuB;8BAYrB9B,QAZqB,CAMvBkG,iBANuB;MAMvBA,iBANuB,sCAMH,UANG;8BAYrBlG,QAZqB,CAOvBmM,oBAPuB;MAOvBA,oBAPuB,sCAOA,IAPA;8BAYrBnM,QAZqB,CAQvBoG,aARuB;MAQvBA,aARuB,sCAQP,IARO;MASvB7B,KATuB,GAYrBvE,QAZqB,CASvBuE,KATuB;MAUd4B,QAVc,GAYrBnG,QAZqB,CAUvByI,KAVuB,CAUdtC,QAVc;MAWvB4C,QAXuB,GAYrB/I,QAZqB,CAWvB+I,QAXuB;;MAcnBuD,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAC9L,IAAD,EAAO+L,GAAP,EAAe;QACpChG,GAAG,GAAG/F,IAAI,CAAChB,IAAL,CAAU,GAAV,CAAZ;WAEOuJ,QAAQ,CAAC,UAAAf,GAAG,EAAI;UACfwE,MAAM,GAAGxE,GAAG,CAAC7B,QAAJ,CAAaxG,QAAb,CAAsB4G,GAAtB,CAAf;UACMkG,WAAW,GAAG,OAAOF,GAAP,KAAe,WAAf,GAA6BA,GAA7B,GAAmC,CAACC,MAAxD;UACIE,WAAW,GAAG,IAAIC,GAAJ,CAAQ3E,GAAG,CAAC7B,QAAZ,CAAlB;;UAEI,CAACqG,MAAD,IAAWC,WAAf,EAA4B;QAC1BC,WAAW,CAACE,GAAZ,CAAgBrG,GAAhB;OADF,MAEO,IAAIiG,MAAM,IAAI,CAACC,WAAf,EAA4B;QACjCC,WAAW,CAACG,MAAZ,CAAmBtG,GAAnB;OADK,MAEA;eACEyB,GAAP;;;gCAIGA,GADL;QAEE7B,QAAQ,qBAAMuG,WAAW,CAACzK,MAAZ,EAAN;;KAfG,EAiBZ4J,OAAO,CAACiB,cAjBI,CAAf;GAHF;;EAuBAvI,KAAK,CAACqF,UAAN,CAAiBrK,IAAjB,CAAsB,UAAC3B,GAAD,EAAMoC,QAAN,EAAmB;IACvCpC,GAAG,CAACkP,cAAJ,GAAqB,UAAAP,GAAG;aAAID,oBAAoB,CAAC1O,GAAG,CAAC4C,IAAL,EAAW+L,GAAX,CAAxB;KAAxB;;QACMQ,cAAc,GAAGpI,cAAc,CACnC3E,QAAQ,CAACuE,KAAT,CAAe8H,sBADoB,EAEnCzO,GAFmC,EAGnCoC,QAHmC,CAArC;;IAKApC,GAAG,CAACyO,sBAAJ,GAA6B,UAAA7I,KAAK,EAAI;aAC7BS,UAAU,CACf;QACE+I,OAAO,EAAE,iBAAAjM,CAAC,EAAI;UACZA,CAAC,CAACkM,OAAF;UACArP,GAAG,CAACkP,cAAJ;SAHJ;QAKEtK,KAAK,EAAE;UACL3B,MAAM,EAAE;SANZ;QAQEqM,KAAK,EAAE;OATM,EAWfH,cAXe,EAYfvJ,KAZe,CAAjB;KADF;;WAgBO5F,GAAP;GAvBF;MA0BMyI,YAAY,GAAGyC,OAAO,CAAC,YAAM;QAC7B1M,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqP,IAAR,CAAa,iBAAb;;QAEEhB,oBAAJ,EAA0B;aACjBlG,UAAU,CAACnE,IAAD,EAAO;QAAEoE,iBAAiB,EAAjBA,iBAAF;QAAqBC,QAAQ,EAARA,QAArB;QAA+BC,aAAa,EAAbA;OAAtC,CAAjB;;;WAGKtE,IAAP;GAR0B,EASzB,CACD2F,KADC,EAED0E,oBAFC,EAGDrK,IAHC,EAIDoE,iBAJC,EAKDC,QALC,EAMDC,aANC,CATyB,CAA5B;MAkBMgH,aAAa,GAAGC,iBAAiB,CAAClH,QAAD,CAAvC;4BAGKnG,QADL;IAEEsM,oBAAoB,EAApBA,oBAFF;IAGEc,aAAa,EAAbA,aAHF;IAIEtL,IAAI,EAAEuE;;;;AAIV,SAASgH,iBAAT,CAA2BlH,QAA3B,EAAqC;MAC/BmH,QAAQ,GAAG,CAAf;EAEAnH,QAAQ,CAACrH,OAAT,CAAiB,UAAAyH,GAAG,EAAI;QAChB/F,IAAI,GAAG+F,GAAG,CAAC5I,KAAJ,CAAU,GAAV,CAAb;IACA2P,QAAQ,GAAGtQ,IAAI,CAACC,GAAL,CAASqQ,QAAT,EAAmB9M,IAAI,CAACxB,MAAxB,CAAX;GAFF;SAKOsO,QAAP;;;AC1HK,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACzL,IAAD,EAAOvE,EAAP,EAAWiQ,WAAX,EAA2B;EAC7C1L,IAAI,GAAGA,IAAI,CAAC1C,MAAL,CAAY,UAAAxB,GAAG,EAAI;QAClB6P,QAAQ,GAAG7P,GAAG,CAACqE,MAAJ,CAAW1E,EAAX,CAAjB;WACO5B,MAAM,CAAC8R,QAAD,CAAN,CACJC,WADI,GAEJ/N,QAFI,CAEKhE,MAAM,CAAC6R,WAAD,CAAN,CAAoBE,WAApB,EAFL,CAAP;GAFK,CAAP;SAMO5L,IAAP;CAPK;;AAUPyL,IAAI,CAACI,UAAL,GAAkB,UAAA/M,GAAG;SAAI,CAACA,GAAL;CAArB;;AAEA,AAAO,IAAMgN,SAAS,GAAG,SAAZA,SAAY,CAAC9L,IAAD,EAAOvE,EAAP,EAAWiQ,WAAX,EAA2B;SAC3C1L,IAAI,CAAC1C,MAAL,CAAY,UAAAxB,GAAG,EAAI;QAClB6P,QAAQ,GAAG7P,GAAG,CAACqE,MAAJ,CAAW1E,EAAX,CAAjB;WACOkQ,QAAQ,KAAK5C,SAAb,GACHlP,MAAM,CAAC8R,QAAD,CAAN,CAAiBC,WAAjB,OAAmC/R,MAAM,CAAC6R,WAAD,CAAN,CAAoBE,WAApB,EADhC,GAEH,IAFJ;GAFK,CAAP;CADK;;AASPE,SAAS,CAACD,UAAV,GAAuB,UAAA/M,GAAG;SAAI,CAACA,GAAL;CAA1B;;AAEA,AAAO,IAAMiN,aAAa,GAAG,SAAhBA,aAAgB,CAAC/L,IAAD,EAAOvE,EAAP,EAAWiQ,WAAX,EAA2B;SAC/C1L,IAAI,CAAC1C,MAAL,CAAY,UAAAxB,GAAG,EAAI;QAClB6P,QAAQ,GAAG7P,GAAG,CAACqE,MAAJ,CAAW1E,EAAX,CAAjB;WACOkQ,QAAQ,KAAK5C,SAAb,GACHlP,MAAM,CAAC8R,QAAD,CAAN,KAAqB9R,MAAM,CAAC6R,WAAD,CADxB,GAEH,IAFJ;GAFK,CAAP;CADK;;AASPK,aAAa,CAACF,UAAd,GAA2B,UAAA/M,GAAG;SAAI,CAACA,GAAL;CAA9B;;AAEA,AAAO,IAAMjB,QAAQ,GAAG,SAAXA,QAAW,CAACmC,IAAD,EAAOvE,EAAP,EAAWiQ,WAAX,EAA2B;SAC1C1L,IAAI,CAAC1C,MAAL,CAAY,UAAAxB,GAAG,EAAI;QAClB6P,QAAQ,GAAG7P,GAAG,CAACqE,MAAJ,CAAW1E,EAAX,CAAjB;WACOiQ,WAAW,CAAC7N,QAAZ,CAAqB8N,QAArB,CAAP;GAFK,CAAP;CADK;;AAOP9N,QAAQ,CAACgO,UAAT,GAAsB,UAAA/M,GAAG;SAAI,CAACA,GAAD,IAAQ,CAACA,GAAG,CAAC5B,MAAjB;CAAzB;;AAEA,AAAO,IAAM8O,WAAW,GAAG,SAAdA,WAAc,CAAChM,IAAD,EAAOvE,EAAP,EAAWiQ,WAAX,EAA2B;SAC7C1L,IAAI,CAAC1C,MAAL,CAAY,UAAAxB,GAAG,EAAI;QAClB6P,QAAQ,GAAG7P,GAAG,CAACqE,MAAJ,CAAW1E,EAAX,CAAjB;WAEEkQ,QAAQ,IACRA,QAAQ,CAACzO,MADT,IAEAwO,WAAW,CAACO,KAAZ,CAAkB,UAAAnN,GAAG;aAAI6M,QAAQ,CAAC9N,QAAT,CAAkBiB,GAAlB,CAAJ;KAArB,CAHF;GAFK,CAAP;CADK;;AAWPkN,WAAW,CAACH,UAAZ,GAAyB,UAAA/M,GAAG;SAAI,CAACA,GAAD,IAAQ,CAACA,GAAG,CAAC5B,MAAjB;CAA5B;;AAEA,AAAO,IAAMgP,KAAK,GAAG,SAARA,KAAQ,CAAClM,IAAD,EAAOvE,EAAP,EAAWiQ,WAAX,EAA2B;SACvC1L,IAAI,CAAC1C,MAAL,CAAY,UAAAxB,GAAG,EAAI;QAClB6P,QAAQ,GAAG7P,GAAG,CAACqE,MAAJ,CAAW1E,EAAX,CAAjB;WACOkQ,QAAQ,KAAKD,WAApB;GAFK,CAAP;CADK;;AAOPQ,KAAK,CAACL,UAAN,GAAmB,UAAA/M,GAAG;SAAI,OAAOA,GAAP,KAAe,WAAnB;CAAtB;;AAEA,AAAO,IAAMqN,MAAM,GAAG,SAATA,MAAS,CAACnM,IAAD,EAAOvE,EAAP,EAAWiQ,WAAX,EAA2B;SACxC1L,IAAI,CAAC1C,MAAL,CAAY,UAAAxB,GAAG,EAAI;QAClB6P,QAAQ,GAAG7P,GAAG,CAACqE,MAAJ,CAAW1E,EAAX,CAAjB,CADwB;;WAGjBkQ,QAAQ,IAAID,WAAnB;GAHK,CAAP;CADK;;AAQPS,MAAM,CAACN,UAAP,GAAoB,UAAA/M,GAAG;SAAIA,GAAG,IAAI,IAAX;CAAvB;;AAEA,AAAO,IAAMsN,OAAO,GAAG,SAAVA,OAAU,CAACpM,IAAD,EAAOvE,EAAP,EAAWiQ,WAAX,EAA2B;aAC/BA,WAAW,IAAI,EADgB;;MAC3C5B,GAD2C;MACtC3O,GADsC;;EAGhD2O,GAAG,GAAG,OAAOA,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgC,CAACuC,QAAvC;EACAlR,GAAG,GAAG,OAAOA,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCkR,QAAtC;;MAEIvC,GAAG,GAAG3O,GAAV,EAAe;QACPmR,IAAI,GAAGxC,GAAb;IACAA,GAAG,GAAG3O,GAAN;IACAA,GAAG,GAAGmR,IAAN;;;SAGKtM,IAAI,CAAC1C,MAAL,CAAY,UAAAxB,GAAG,EAAI;QAClB6P,QAAQ,GAAG7P,GAAG,CAACqE,MAAJ,CAAW1E,EAAX,CAAjB;WACOkQ,QAAQ,IAAI7B,GAAZ,IAAmB6B,QAAQ,IAAIxQ,GAAtC;GAFK,CAAP;CAZK;;AAkBPiR,OAAO,CAACP,UAAR,GAAqB,UAAA/M,GAAG;SACtB,CAACA,GAAD,IAAS,OAAOA,GAAG,CAAC,CAAD,CAAV,KAAkB,QAAlB,IAA8B,OAAOA,GAAG,CAAC,CAAD,CAAV,KAAkB,QADnC;CAAxB;;;;;;;;;;;;;ACrFAgH,YAAY,CAACyG,OAAb,GAAuB,EAAvB;AAEAvC,UAAU,CAAC,WAAD,EAAc,eAAd,CAAV;AAEA,IAAM/E,WAAS,GAAG;EAChBpK,OAAO,EAAEsK,SAAS,CAACG,OAAV,CACPH,SAAS,CAACqH,KAAV,CAAgB;IACdC,cAAc,EAAEtH,SAAS,CAACS,IADZ;IAEd8G,MAAM,EAAEvH,SAAS,CAACwH;GAFpB,CADO,CADO;EAQhBC,aAAa,EAAEzH,SAAS,CAACS;CAR3B;AAWA,IAAaiH,UAAU,GAAG,SAAbA,UAAa,CAAApK,KAAK,EAAI;EACjCA,KAAK,CAACmF,OAAN,CAAcnK,IAAd,CAAmBmK,SAAnB;CADK;AAIPiF,UAAU,CAACnJ,UAAX,GAAwB,YAAxB;;AAEA,SAASkE,SAAT,CAAiB1J,QAAjB,EAA2B;EACzBiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,YAA1D;MAGEyH,KAJuB,GAarBzH,QAbqB,CAIvByH,KAJuB;MAKvB3F,IALuB,GAarB9B,QAbqB,CAKvB8B,IALuB;MAMvBwI,QANuB,GAarBtK,QAbqB,CAMvBsK,QANuB;MAOvBjM,WAPuB,GAarB2B,QAbqB,CAOvB3B,WAPuB;MAQVuQ,eARU,GAarB5O,QAbqB,CAQvB6O,WARuB;MASvBH,aATuB,GAarB1O,QAbqB,CASvB0O,aATuB;MAUvBH,cAVuB,GAarBvO,QAbqB,CAUvBuO,cAVuB;MAWdF,OAXc,GAarBrO,QAbqB,CAWvByI,KAXuB,CAWd4F,OAXc;MAYvBtF,QAZuB,GAarB/I,QAbqB,CAYvB+I,QAZuB;MAenB+F,eAAe,GAAGhN,IAAxB;MACMiN,mBAAmB,GAAGzE,QAA5B;;MAEM0E,SAAS,GAAG,SAAZA,SAAY,CAACzR,EAAD,EAAK0L,OAAL,EAAiB;QAC3B9L,MAAM,GAAGkB,WAAW,CAAC4Q,IAAZ,CAAiB,UAAA5P,CAAC;aAAIA,CAAC,CAAC9B,EAAF,KAASA,EAAb;KAAlB,CAAf;;QAEI,CAACJ,MAAL,EAAa;YACL,IAAIa,KAAJ,yDAA2DT,EAA3D,EAAN;;;QAGI2R,YAAY,GAAGC,eAAe,CAClChS,MAAM,CAACiC,MAD2B,EAElCwP,eAAe,IAAI,EAFe,EAGlCC,WAHkC,CAApC;WAMO9F,QAAQ,CAAC,UAAAf,GAAG,EAAI;UACfoH,SAAS,GACb,OAAOnG,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACjB,GAAG,CAACqG,OAAJ,CAAY9Q,EAAZ,CAAD,CAAvC,GAA2D0L,OAD7D,CADqB;;UAKjBoG,gBAAgB,CAACH,YAAY,CAACvB,UAAd,EAA0ByB,SAA1B,CAApB,EAA0D;2BAChBpH,GAAG,CAACqG,OADY;YAC1CiB,MAD0C,gBAC/C/R,EAD+C;YAC/BgS,UAD+B,2CAC/ChS,EAD+C;;kCAGnDyK,GADL;UAEEqG,OAAO,EAAEkB;;;;gCAKRvH,GADL;QAEEqG,OAAO,qBACFrG,GAAG,CAACqG,OADF,sBAEJ9Q,EAFI,EAEC6R,SAFD;;KAfI,EAoBZvD,OAAO,CAACmD,SApBI,CAAf;GAbF;;MAoCMQ,aAAa,GAAG,SAAhBA,aAAgB,CAAAvG,OAAO,EAAI;WACxBF,QAAQ,CAAC,UAAAf,GAAG,EAAI;UACfuH,UAAU,GAAG,OAAOtG,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACjB,GAAD,CAAvC,GAA+CiB,OAAlE,CADqB;;MAIrBpF,MAAM,CAACgB,IAAP,CAAY0K,UAAZ,EAAwBzQ,OAAxB,CAAgC,UAAAvB,EAAE,EAAI;YAC9B6R,SAAS,GAAGG,UAAU,CAAChS,EAAD,CAA5B;YACMJ,MAAM,GAAGkB,WAAW,CAAC4Q,IAAZ,CAAiB,UAAA5P,CAAC;iBAAIA,CAAC,CAAC9B,EAAF,KAASA,EAAb;SAAlB,CAAf;YACM2R,YAAY,GAAGC,eAAe,CAClChS,MAAM,CAACiC,MAD2B,EAElCwP,eAAe,IAAI,EAFe,EAGlCC,WAHkC,CAApC;;YAMIQ,gBAAgB,CAACH,YAAY,CAACvB,UAAd,EAA0ByB,SAA1B,CAApB,EAA0D;iBACjDG,UAAU,CAAChS,EAAD,CAAjB;;OAVJ;gCAeKyK,GADL;QAEEqG,OAAO,EAAEkB;;KApBE,EAsBZ1D,OAAO,CAAC2D,aAtBI,CAAf;GADF;;EA0BAnR,WAAW,CAACS,OAAZ,CAAoB,UAAA3B,MAAM,EAAI;QACpBI,EADoB,GACmCJ,MADnC,CACpBI,EADoB;QAChBC,QADgB,GACmCL,MADnC,CAChBK,QADgB;QACUiS,oBADV,GACmCtS,MADnC,CACNoR,cADM;;IAI5BpR,MAAM,CAACuS,SAAP,GAAmBlS,QAAQ,GACvBmE,eAAe,CACb8N,oBAAoB,KAAK,IAAzB,GAAgC,KAAhC,GAAwC5E,SAD3B,EAEb0D,cAAc,KAAK,IAAnB,GAA0B,KAA1B,GAAkC1D,SAFrB,EAGb,IAHa,CADQ,GAMvB,KANJ,CAJ4B;;IAa5B1N,MAAM,CAAC6R,SAAP,GAAmB,UAAApO,GAAG;aAAIoO,SAAS,CAAC7R,MAAM,CAACI,EAAR,EAAYqD,GAAZ,CAAb;KAAtB,CAb4B;;;;IAiB5BzD,MAAM,CAACqQ,WAAP,GAAqBa,OAAO,CAAC9Q,EAAD,CAA5B;GAjBF,EAhFyB;;;;;uBAyGkBhB,KAAK,CAACuM,OAAN,CAAc,YAAM;QACzD4F,aAAa,IAAI,CAAC7K,MAAM,CAACgB,IAAP,CAAYwJ,OAAZ,EAAqBrP,MAA3C,EAAmD;aAC1C;QACL2Q,YAAY,EAAE7N,IADT;QAEL8N,gBAAgB,EAAEtF;OAFpB;;;QAMIsF,gBAAgB,GAAG,EAAzB;QAEIxT,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqP,IAAR,CAAa,iBAAb,EAX2D;;QAcvD0C,UAAU,GAAG,SAAbA,UAAa,CAAC/N,IAAD,EAAqB;UAAdlF,KAAc,uEAAN,CAAM;UAClC+S,YAAY,GAAG7N,IAAnB;MAEA6N,YAAY,GAAG9L,MAAM,CAACiM,OAAP,CAAezB,OAAf,EAAwBxR,MAAxB,CACb,UAACkT,aAAD,QAA4C;;YAA3BhO,QAA2B;YAAjByL,WAAiB;;;YAEpCrQ,MAAM,GAAGkB,WAAW,CAAC4Q,IAAZ,CAAiB,UAAA5P,CAAC;iBAAIA,CAAC,CAAC9B,EAAF,KAASwE,QAAb;SAAlB,CAAf;;YAEI,CAAC5E,MAAL,EAAa;iBACJ4S,aAAP;;;YAGEnT,KAAK,KAAK,CAAd,EAAiB;UACfO,MAAM,CAAC2R,eAAP,GAAyBiB,aAAzB;;;YAGIb,YAAY,GAAGC,eAAe,CAClChS,MAAM,CAACiC,MAD2B,EAElCwP,eAAe,IAAI,EAFe,EAGlCC,WAHkC,CAApC;;YAMI,CAACK,YAAL,EAAmB;UACjBpR,OAAO,CAACkS,IAAR,0EACoE7S,MAAM,CAACI,EAD3E;iBAGOwS,aAAP;SAtBwC;;;;QA2B1C5S,MAAM,CAACwS,YAAP,GAAsBT,YAAY,CAChCa,aADgC,EAEhChO,QAFgC,EAGhCyL,WAHgC,EAIhCrQ,MAJgC,CAAlC;eAOOA,MAAM,CAACwS,YAAd;OAnCW,EAqCb7N,IArCa,CAAf,CAHsC;;;;;MA+CtC6N,YAAY,GAAGA,YAAY,CAACzR,GAAb,CAAiB,UAAAN,GAAG,EAAI;QACrCgS,gBAAgB,CAACrQ,IAAjB,CAAsB3B,GAAtB;;YACI,CAACA,GAAG,CAAC+I,OAAT,EAAkB;iBACT/I,GAAP;;;kCAGGA,GADL;UAEE+I,OAAO,EACL/I,GAAG,CAAC+I,OAAJ,IAAe/I,GAAG,CAAC+I,OAAJ,CAAY3H,MAAZ,GAAqB,CAApC,GACI6Q,UAAU,CAACjS,GAAG,CAAC+I,OAAL,EAAc/J,KAAK,GAAG,CAAtB,CADd,GAEIgB,GAAG,CAAC+I;;OAVC,CAAf;aAcOgJ,YAAP;KA7DF;;WAgEO;MACLA,YAAY,EAAEE,UAAU,CAAC/N,IAAD,CADnB;MAEL8N,gBAAgB,EAAhBA;KAFF;GA9EyC,EAkFxC,CACDlB,aADC,EAEDL,OAFC,EAGD5G,KAHC,EAID3F,IAJC,EAKDwI,QALC,EAMDjM,WANC,EAODuQ,eAPC,CAlFwC,CAzGlB;MAyGjBe,YAzGiB,kBAyGjBA,YAzGiB;MAyGHC,gBAzGG,kBAyGHA,gBAzGG;;EAqMzBrT,KAAK,CAACuM,OAAN,CAAc,YAAM;;;QAGZmH,kBAAkB,GAAG5R,WAAW,CAACe,MAAZ,CACzB,UAAAjC,MAAM;aAAI,CAAC0G,MAAM,CAACgB,IAAP,CAAYwJ,OAAZ,EAAqB1O,QAArB,CAA8BxC,MAAM,CAACI,EAArC,CAAL;KADmB,CAA3B,CAHkB;;;IASlB0S,kBAAkB,CAACnR,OAAnB,CAA2B,UAAA3B,MAAM,EAAI;MACnCA,MAAM,CAAC2R,eAAP,GAAyBa,YAAzB;MACAxS,MAAM,CAACwS,YAAP,GAAsBA,YAAtB;KAFF;GATF,EAaG,CAACA,YAAD,EAAetB,OAAf,EAAwBhQ,WAAxB,CAbH;4BAgBK2B,QADL;IAEEgP,SAAS,EAATA,SAFF;IAGEQ,aAAa,EAAbA,aAHF;IAIEV,eAAe,EAAfA,eAJF;IAKEC,mBAAmB,EAAnBA,mBALF;IAMEjN,IAAI,EAAE6N,YANR;IAOErF,QAAQ,EAAEsF;;;;AAId,SAASP,gBAAT,CAA0B1B,UAA1B,EAAsCjS,KAAtC,EAA6C;SACpCiS,UAAU,GAAGA,UAAU,CAACjS,KAAD,CAAb,GAAuB,OAAOA,KAAP,KAAiB,WAAzD;;;AAGF,SAASyT,eAAT,CAAyB/P,MAAzB,EAAiCwP,eAAjC,EAAkDC,WAAlD,EAA+D;SAE3D7J,UAAU,CAAC5F,MAAD,CAAV,IACAwP,eAAe,CAACxP,MAAD,CADf,IAEAyP,WAAW,CAACzP,MAAD,CAFX,IAGAyP,WAAW,CAACtB,IAJd;;;ACjQK,SAAS1N,KAAT,CAAaoC,MAAb,EAAqBH,IAArB,EAA2B;SACzBG,MAAM,CAACpF,MAAP,CAAc,UAACgD,GAAD,EAAM4E,IAAN;WAAe5E,GAAG,GAAG4E,IAArB;GAAd,EAAyC,CAAzC,CAAP;;AAGF,AAAO,SAASyL,OAAT,CAAiBjO,MAAjB,EAAyBH,IAAzB,EAA+B;SAC7B9E,IAAI,CAACmT,KAAL,CAAYtQ,KAAG,CAACoC,MAAD,EAASH,IAAT,CAAH,GAAoBG,MAAM,CAACjD,MAA5B,GAAsC,GAAjD,IAAwD,GAA/D;;AAGF,AAAO,SAASoR,MAAT,CAAgBnO,MAAhB,EAAwB;MACzB2J,GAAG,GAAG3J,MAAM,CAAC,CAAD,CAAN,IAAa,EAAvB;MACIhF,GAAG,GAAGgF,MAAM,CAAC,CAAD,CAAN,IAAa,EAAvB;EAEAA,MAAM,CAACnD,OAAP,CAAe,UAAApD,KAAK,EAAI;IACtBkQ,GAAG,GAAG5O,IAAI,CAAC4O,GAAL,CAASA,GAAT,EAAclQ,KAAd,CAAN;IACAuB,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAcvB,KAAd,CAAN;GAFF;SAKO,CAACkQ,GAAG,GAAG3O,GAAP,IAAc,CAArB;;AAGF,AAAO,SAASoT,WAAT,CAAqBpO,MAArB,EAA6B;SAC3B,IAAI0K,GAAJ,CAAQ1K,MAAR,EAAgBqO,IAAvB;;AAGF,AAAO,SAASC,KAAT,CAAetO,MAAf,EAAuB;SACrBA,MAAM,CAACjD,MAAd;;;;;;;;;;;ACXF4I,YAAY,CAAC4I,OAAb,GAAuB,EAAvB;AAEA1E,UAAU,CAAC,eAAD,CAAV;AAEA,IAAM/E,WAAS,GAAG;;EAEhBpK,OAAO,EAAEsK,SAAS,CAACG,OAAV,CACPH,SAAS,CAACqH,KAAV,CAAgB;IACdmC,SAAS,EAAExJ,SAAS,CAACyJ,SAAV,CAAoB,CAC7BzJ,SAAS,CAACM,IADmB,EAE7BN,SAAS,CAACiF,MAFmB,EAG7BjF,SAAS,CAACG,OAAV,CACEH,SAAS,CAACyJ,SAAV,CAAoB,CAACzJ,SAAS,CAACM,IAAX,EAAiBN,SAAS,CAACiF,MAA3B,CAApB,CADF,CAH6B,CAApB,CADG;IAQdyE,eAAe,EAAE1J,SAAS,CAACS,IARb;IASdkJ,UAAU,EAAE3J,SAAS,CAACwH;GATxB,CADO,CAFO;EAehBoC,SAAS,EAAE5J,SAAS,CAACM,IAfL;EAgBhBuJ,cAAc,EAAE7J,SAAS,CAACS,IAhBV;EAiBhBiJ,eAAe,EAAE1J,SAAS,CAACS,IAjBX;EAkBhBqJ,YAAY,EAAE9J,SAAS,CAACI;CAlB1B;AAqBA,IAAa2J,UAAU,GAAG,SAAbA,UAAa,CAAAzM,KAAK,EAAI;EACjCA,KAAK,CAAC0M,qBAAN,GAA8B,EAA9B;EACA1M,KAAK,CAACgF,yBAAN,CAAgChK,IAAhC,CAAqCgK,yBAArC;EACAhF,KAAK,CAACiF,6BAAN,CAAoCjK,IAApC,CAAyC,UAAC2R,IAAD,EAAOlR,QAAP,EAAoB;IAC3DkR,IAAI,CAAC3R,IAAL,CAAUS,QAAQ,CAACyI,KAAT,CAAe+H,OAAzB;WACOU,IAAP;GAFF;EAIA3M,KAAK,CAACmF,OAAN,CAAcnK,IAAd,CAAmBmK,SAAnB;CAPK;AAUPsH,UAAU,CAACxL,UAAX,GAAwB,YAAxB;;AAEA,SAAS+D,yBAAT,CAAmClL,WAAnC,QAAwE;MAAbmS,OAAa,QAAtB/H,KAAsB,CAAb+H,OAAa;;;MAIhEW,cAAc,GAAGX,OAAO,CAACtS,GAAR,CAAY,UAAAkT,CAAC;WAAI/S,WAAW,CAAC4Q,IAAZ,CAAiB,UAAApQ,GAAG;aAAIA,GAAG,CAACtB,EAAJ,KAAW6T,CAAf;KAApB,CAAJ;GAAb,CAAvB;MACMC,iBAAiB,GAAGhT,WAAW,CAACe,MAAZ,CAAmB,UAAAP,GAAG;WAAI,CAAC2R,OAAO,CAAC7Q,QAAR,CAAiBd,GAAG,CAACtB,EAArB,CAAL;GAAtB,CAA1B,CALsE;;MAQhE+T,0BAA0B,GAC9BjT,WAAW,CAACsH,SAAZ,CAAsB,UAAAxI,MAAM;WAAIA,MAAM,CAACoU,eAAX;GAA5B,IAA0D,CAD5D;sCAIKF,iBAAiB,CAACG,KAAlB,CAAwB,CAAxB,EAA2BF,0BAA3B,CADL,sBAEKH,cAFL,sBAGKE,iBAAiB,CAACG,KAAlB,CAAwBF,0BAAxB,CAHL;;;AAOF,SAAS5H,SAAT,CAAiB1J,QAAjB,EAA2B;EACzBiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,YAA1D;MAGEyH,KAJuB,GAgBrBzH,QAhBqB,CAIvByH,KAJuB;MAKvB3F,IALuB,GAgBrB9B,QAhBqB,CAKvB8B,IALuB;MAMvBzD,WANuB,GAgBrB2B,QAhBqB,CAMvB3B,WANuB;MAOvB0M,WAPuB,GAgBrB/K,QAhBqB,CAOvB+K,WAPuB;4BAgBrB/K,QAhBqB,CAQvB6Q,SARuB;MAQvBA,SARuB,oCAQXhP,gBARW;MASvB4P,aATuB,GAgBrBzR,QAhBqB,CASvByR,aATuB;MAUvBd,eAVuB,GAgBrB3Q,QAhBqB,CAUvB2Q,eAVuB;8BAgBrB3Q,QAhBqB,CAWvB+Q,YAXuB;MAWTW,gBAXS,sCAWU,EAXV;MAYvBnN,KAZuB,GAgBrBvE,QAhBqB,CAYvBuE,KAZuB;MAavBe,OAbuB,GAgBrBtF,QAhBqB,CAavBsF,OAbuB;MAcdkL,OAdc,GAgBrBxQ,QAhBqB,CAcvByI,KAduB,CAcd+H,OAdc;MAevBzH,QAfuB,GAgBrB/I,QAhBqB,CAevB+I,QAfuB;EAkBzB1D,iBAAiB,CAACC,OAAD,EAAU,EAAV,EAAc,YAAd,EAA4B,CAAC,WAAD,EAAc,aAAd,CAA5B,CAAjB;EAEAjH,WAAW,CAACS,OAAZ,CAAoB,UAAA3B,MAAM,EAAI;QACpBI,EADoB,GACqCJ,MADrC,CACpBI,EADoB;QAChBC,QADgB,GACqCL,MADrC,CAChBK,QADgB;QACWmU,qBADX,GACqCxU,MADrC,CACNwT,eADM;IAE5BxT,MAAM,CAACyU,SAAP,GAAmBpB,OAAO,CAAC7Q,QAAR,CAAiBpC,EAAjB,CAAnB;IACAJ,MAAM,CAAC0U,YAAP,GAAsBrB,OAAO,CAACsB,OAAR,CAAgBvU,EAAhB,CAAtB;IAEAJ,MAAM,CAAC4U,UAAP,GAAoBvU,QAAQ,GACxBmE,eAAe,CACbgQ,qBAAqB,KAAK,IAA1B,GAAiC,KAAjC,GAAyC9G,SAD5B,EAEb8F,eAAe,KAAK,IAApB,GAA2B,KAA3B,GAAmC9F,SAFtB,EAGb,IAHa,CADS,GAMxB,KANJ;;QAQI1N,MAAM,CAAC4U,UAAX,EAAuB;MACrB5U,MAAM,CAAC6U,aAAP,GAAuB;eAAMA,aAAa,CAAC7U,MAAM,CAACI,EAAR,CAAnB;OAAvB;;;IAGFJ,MAAM,CAACyT,UAAP,GAAoBzT,MAAM,CAACyT,UAAP,IAAqBzT,MAAM,CAAC3B,IAAhD;GAjBF;;MAoBMwW,aAAa,GAAG,SAAhBA,aAAgB,CAACzU,EAAD,EAAK0U,MAAL,EAAgB;WAC7BlJ,QAAQ,CAAC,UAAAf,GAAG,EAAI;UACfkK,cAAc,GAClB,OAAOD,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,CAACzB,OAAO,CAAC7Q,QAAR,CAAiBpC,EAAjB,CAD5C;;UAEI2U,cAAJ,EAAoB;kCAEblK,GADL;UAEEwI,OAAO,+BAAMA,OAAN,IAAejT,EAAf;;;;gCAINyK,GADL;QAEEwI,OAAO,EAAEA,OAAO,CAACpR,MAAR,CAAe,UAAAC,CAAC;iBAAIA,CAAC,KAAK9B,EAAV;SAAhB;;KAXE,EAaZsO,OAAO,CAACmG,aAbI,CAAf;GADF;;EAiBAjH,WAAW,CAACjM,OAAZ;YAEGkB,QAAQ;WAAI,UAAAF,MAAM,EAAI;UACbiS,UADa,GACEjS,MADF,CACbiS,UADa;UAEfI,2BAA2B,GAAGxN,cAAc,CAChD3E,QAAQ,CAACuE,KAAT,CAAe0M,qBADiC,EAEhDnR,MAFgD,EAGhDE,QAHgD,CAAlD;;MAKAF,MAAM,CAACmR,qBAAP,GAA+B,UAAAzN,KAAK,EAAI;eAC/BS,UAAU,CACf;UACE+I,OAAO,EAAE+E,UAAU,GACf,UAAAhR,CAAC,EAAI;YACHA,CAAC,CAACkM,OAAF;YACAnN,MAAM,CAACkS,aAAP;WAHa,GAKfnH,SANN;UAOErI,KAAK,EAAE;YACL3B,MAAM,EAAEkR,UAAU,GAAG,SAAH,GAAelH;WARrC;UAUEqC,KAAK,EAAE;SAXM,EAafiF,2BAbe,EAcf3O,KAde,CAAjB;OADF;KAPO;GAAT,CAyBGxD,QAzBH,CAFF;EA8BAuE,KAAK,CAACqF,UAAN,CAAiBrK,IAAjB,CAAsB,UAAA3B,GAAG,EAAI;IAC3BA,GAAG,CAAC+M,KAAJ,CAAU7L,OAAV,CAAkB,UAAArD,IAAI,EAAI;;MAExBA,IAAI,CAACmW,SAAL,GAAiBnW,IAAI,CAAC0B,MAAL,CAAYyU,SAAZ,IAAyBnW,IAAI,CAAC0B,MAAL,CAAYI,EAAZ,KAAmBK,GAAG,CAACwU,SAAjE,CAFwB;;MAIxB3W,IAAI,CAAC4W,eAAL,GAAuB,CAAC5W,IAAI,CAACmW,SAAN,IAAmBnW,IAAI,CAAC0B,MAAL,CAAYyU,SAAtD,CAJwB;;MAMxBnW,IAAI,CAAC6W,YAAL,GACE,CAAC7W,IAAI,CAACmW,SAAN,IAAmB,CAACnW,IAAI,CAAC4W,eAAzB,IAA4CzU,GAAG,CAAC8I,SADlD;KANF;WASO9I,GAAP;GAVF;MAaM2U,WAAW,GAAGzJ,OAAO,CAAC,YAAM;QAC5B2I,aAAa,IAAI,CAACjB,OAAO,CAACxR,MAA9B,EAAsC;aAC7B8C,IAAP;;;QAGE1F,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqP,IAAR,CAAa,gBAAb,EAN8B;;;QAU1BqF,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAC1Q,IAAD,EAAO2Q,YAAP,EAAwB;UAC9CxQ,MAAM,GAAG,EAAf;MAEA5D,WAAW,CAACS,OAAZ,CAAoB,UAAA3B,MAAM,EAAI;;YAExBqT,OAAO,CAAC7Q,QAAR,CAAiBxC,MAAM,CAACI,EAAxB,CAAJ,EAAiC;UAC/B0E,MAAM,CAAC9E,MAAM,CAACI,EAAR,CAAN,GAAoBuE,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQG,MAAR,CAAe9E,MAAM,CAACI,EAAtB,CAAV,GAAsC,IAA1D;;;;YAIImV,YAAY,GAAG5Q,IAAI,CAAC5D,GAAL,CAAS,UAAAmB,CAAC;iBAAIA,CAAC,CAAC4C,MAAF,CAAS9E,MAAM,CAACI,EAAhB,CAAJ;SAAV,CAArB;YAEIoV,UAAU,GAAGxV,MAAM,CAACsT,SAAxB;;YAEIvO,KAAK,CAACC,OAAN,CAAcwQ,UAAd,CAAJ,EAA+B;cACzBA,UAAU,CAAC3T,MAAX,KAAsB,CAA1B,EAA6B;YAC3BlB,OAAO,CAACqP,IAAR,CAAa;cAAEhQ,MAAM,EAANA;aAAf;kBACM,IAAIa,KAAJ,4GAAN;;;cAIEyU,YAAJ,EAAkB;YAChBE,UAAU,GAAGA,UAAU,CAAC,CAAD,CAAvB;WADF,MAEO;YACLA,UAAU,GAAGA,UAAU,CAAC,CAAD,CAAvB;;;;YAIAC,WAAW,GACb,OAAOD,UAAP,KAAsB,UAAtB,GACIA,UADJ,GAEIjB,gBAAgB,CAACiB,UAAD,CAAhB,IAAgC5B,YAAY,CAAC4B,UAAD,CAHlD;;YAKIC,WAAJ,EAAiB;UACf3Q,MAAM,CAAC9E,MAAM,CAACI,EAAR,CAAN,GAAoBqV,WAAW,CAACF,YAAD,EAAe5Q,IAAf,CAA/B;SADF,MAEO,IAAI6Q,UAAJ,EAAgB;UACrB7U,OAAO,CAACqP,IAAR,CAAa;YAAEhQ,MAAM,EAANA;WAAf;gBACM,IAAIa,KAAJ,iEAAN;SAFK,MAKA;UACLiE,MAAM,CAAC9E,MAAM,CAACI,EAAR,CAAN,GAAoB,IAApB;;OAtCJ;aAyCO0E,MAAP;KA5CF,CAVgC;;;QA0D1B4Q,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC/Q,IAAD,EAAsC;UAA/BlF,KAA+B,uEAAvB,CAAuB;UAApB6N,UAAoB,uEAAP,EAAO;;;UAEzD7N,KAAK,IAAI4T,OAAO,CAACxR,MAArB,EAA6B;eACpB8C,IAAP;;;UAGIC,QAAQ,GAAGyO,OAAO,CAAC5T,KAAD,CAAxB,CAN6D;;UASzD2V,WAAW,GAAG1B,SAAS,CAAC/O,IAAD,EAAOC,QAAP,CAA3B,CAT6D;;MAY7DwQ,WAAW,GAAG1O,MAAM,CAACiM,OAAP,CAAeyC,WAAf,EAA4BrU,GAA5B,CACZ,iBAAwBZ,KAAxB,EAAkC;;YAAhCwV,UAAgC;YAApBnM,OAAoB;;YAC1BnG,IAAI,gCAAOiK,UAAP,cAAsB1I,QAAtB,cAAkC+Q,UAAlC,GAAV;QAEAnM,OAAO,GAAGkM,gBAAgB,CAAClM,OAAD,EAAU/J,KAAK,GAAG,CAAlB,EAAqB4D,IAArB,CAA1B;YAEMyB,MAAM,GAAGuQ,qBAAqB,CAClC7L,OADkC,EAElC/J,KAAK,GAAG,CAAR,IAAa4T,OAAO,CAACxR,MAFa,CAApC;YAKMpB,GAAG,GAAG;UACV0U,YAAY,EAAE,IADJ;UAEVF,SAAS,EAAErQ,QAFD;UAGV+Q,UAAU,EAAVA,UAHU;UAIV7Q,MAAM,EAANA,MAJU;UAKV0E,OAAO,EAAPA,OALU;UAMV/J,KAAK,EAALA,KANU;UAOVU,KAAK,EAALA,KAPU;UAQVkD,IAAI,EAAJA;SARF;eAWO5C,GAAP;OAtBU,CAAd;aA0BO2U,WAAP;KAtCF,CA1DgC;;;WAoGzBM,gBAAgB,CAAC/Q,IAAD,CAAvB;GApGyB,EAqGxB,CACD2P,aADC,EAEDjB,OAFC,EAGD/I,KAHC,EAID3F,IAJC,EAKDzD,WALC,EAMDqT,gBANC,EAODb,SAPC,CArGwB,CAA3B;4BAgHK7Q,QADL;IAEEgS,aAAa,EAAbA,aAFF;IAGElQ,IAAI,EAAEyQ,WAHR;IAIEQ,cAAc,EAAEjR;;;;AC5RpB,IAAMkR,mBAAmB,GAAG,YAA5B;;;;AAKA,AAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAC5R,IAAD,EAAOC,IAAP,EAAaS,QAAb,EAA0B;MAChDkD,CAAC,GAAGiO,qBAAqB,CAAC7R,IAAD,EAAOU,QAAP,CAA7B;MACIoR,CAAC,GAAGD,qBAAqB,CAAC5R,IAAD,EAAOS,QAAP,CAA7B,CAFoD;;EAIpDkD,CAAC,GAAGmO,QAAQ,CAACnO,CAAD,CAAZ;EACAkO,CAAC,GAAGC,QAAQ,CAACD,CAAD,CAAZ,CALoD;;;EASpDlO,CAAC,GAAGA,CAAC,CAACtH,KAAF,CAAQqV,mBAAR,EAA6B5T,MAA7B,CAAoCiF,OAApC,CAAJ;EACA8O,CAAC,GAAGA,CAAC,CAACxV,KAAF,CAAQqV,mBAAR,EAA6B5T,MAA7B,CAAoCiF,OAApC,CAAJ,CAVoD;;SAa7CY,CAAC,CAACjG,MAAF,IAAYmU,CAAC,CAACnU,MAArB,EAA6B;QACvBqU,EAAE,GAAGpO,CAAC,CAACqO,KAAF,EAAT;QACIC,EAAE,GAAGJ,CAAC,CAACG,KAAF,EAAT;QAEME,EAAE,GAAG5Q,QAAQ,CAACyQ,EAAD,EAAK,EAAL,CAAnB;QACMI,EAAE,GAAG7Q,QAAQ,CAAC2Q,EAAD,EAAK,EAAL,CAAnB;QAEMG,KAAK,GAAG,CAACF,EAAD,EAAKC,EAAL,EAASrS,IAAT,EAAd,CAP2B;;QAUvBuS,KAAK,CAACD,KAAK,CAAC,CAAD,CAAN,CAAT,EAAqB;UACfL,EAAE,GAAGE,EAAT,EAAa;eACJ,CAAP;;;UAEEA,EAAE,GAAGF,EAAT,EAAa;eACJ,CAAC,CAAR;;;;KAfuB;;;QAqBvBM,KAAK,CAACD,KAAK,CAAC,CAAD,CAAN,CAAT,EAAqB;aACZC,KAAK,CAACH,EAAD,CAAL,GAAY,CAAC,CAAb,GAAiB,CAAxB;KAtByB;;;QA0BvBA,EAAE,GAAGC,EAAT,EAAa;aACJ,CAAP;;;QAEEA,EAAE,GAAGD,EAAT,EAAa;aACJ,CAAC,CAAR;;;;SAIGvO,CAAC,CAACjG,MAAF,GAAWmU,CAAC,CAACnU,MAApB;CA/CK;AAkDP,AAAO,SAAS4U,QAAT,CAAkBvS,IAAlB,EAAwBC,IAAxB,EAA8BS,QAA9B,EAAwC;MACzCkD,CAAC,GAAGiO,qBAAqB,CAAC7R,IAAD,EAAOU,QAAP,CAA7B;MACIoR,CAAC,GAAGD,qBAAqB,CAAC5R,IAAD,EAAOS,QAAP,CAA7B;EAEAkD,CAAC,GAAGA,CAAC,CAAC4O,OAAF,EAAJ;EACAV,CAAC,GAAGA,CAAC,CAACU,OAAF,EAAJ;SAEOC,YAAY,CAAC7O,CAAD,EAAIkO,CAAJ,CAAnB;;AAGF,AAAO,SAASY,KAAT,CAAe1S,IAAf,EAAqBC,IAArB,EAA2BS,QAA3B,EAAqC;MACtCkD,CAAC,GAAGiO,qBAAqB,CAAC7R,IAAD,EAAOU,QAAP,CAA7B;MACIoR,CAAC,GAAGD,qBAAqB,CAAC5R,IAAD,EAAOS,QAAP,CAA7B;SAEO+R,YAAY,CAAC7O,CAAD,EAAIkO,CAAJ,CAAnB;;;AAKF,SAASW,YAAT,CAAsB7O,CAAtB,EAAyBkO,CAAzB,EAA4B;SACnBlO,CAAC,KAAKkO,CAAN,GAAU,CAAV,GAAclO,CAAC,GAAGkO,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAlC;;;AAGF,SAASD,qBAAT,CAA+BtV,GAA/B,EAAoCmE,QAApC,EAA8C;SACrCnE,GAAG,CAACqE,MAAJ,CAAWF,QAAX,CAAP;;;AAGF,SAASqR,QAAT,CAAkBnO,CAAlB,EAAqB;MACf,OAAOA,CAAP,KAAa,QAAjB,EAA2B;QACrB0O,KAAK,CAAC1O,CAAD,CAAL,IAAYA,CAAC,KAAKkJ,QAAlB,IAA8BlJ,CAAC,KAAK,CAACkJ,QAAzC,EAAmD;aAC1C,EAAP;;;WAEKxS,MAAM,CAACsJ,CAAD,CAAb;;;MAEE,OAAOA,CAAP,KAAa,QAAjB,EAA2B;WAClBA,CAAP;;;SAEK,EAAP;;;;;;;;;AC7EF2C,YAAY,CAACoM,MAAb,GAAsB,EAAtB;AACAzY,aAAa,CAAC0Y,QAAd,GAAyB,cAAzB;AACA1Y,aAAa,CAAC2Y,aAAd,GAA8B,KAA9B;AAEApI,UAAU,CAAC,cAAD,CAAV;AAEA,IAAM/E,WAAS,GAAG;;EAEhBpK,OAAO,EAAEsK,SAAS,CAACG,OAAV,CACPH,SAAS,CAACqH,KAAV,CAAgB;IACd2F,QAAQ,EAAEhN,SAAS,CAACyJ,SAAV,CAAoB,CAACzJ,SAAS,CAACiF,MAAX,EAAmBjF,SAAS,CAACM,IAA7B,CAApB,CADI;IAEd2M,aAAa,EAAEjN,SAAS,CAACS,IAFX;IAGdyM,cAAc,EAAElN,SAAS,CAACS;GAH5B,CADO,CAFO;EAShB0M,SAAS,EAAEnN,SAAS,CAACM,IATL;EAUhB8M,SAAS,EAAEpN,SAAS,CAACI,MAVL;EAWhBiN,aAAa,EAAErN,SAAS,CAACS,IAXT;EAYhByM,cAAc,EAAElN,SAAS,CAACS,IAZV;EAahB6M,gBAAgB,EAAEtN,SAAS,CAACS,IAbZ;EAchB8M,gBAAgB,EAAEvN,SAAS,CAACM,IAdZ;EAehBkN,oBAAoB,EAAExN,SAAS,CAACyN,MAfhB;EAgBhBC,iBAAiB,EAAE1N,SAAS,CAACS,IAhBb;EAiBhBkN,kBAAkB,EAAE3N,SAAS,CAACS;CAjBhC;AAoBA,IAAamN,SAAS,GAAG,SAAZA,SAAY,CAAAtQ,KAAK,EAAI;EAChCA,KAAK,CAACmF,OAAN,CAAcnK,IAAd,CAAmBmK,SAAnB,EADgC;;EAGhCnF,KAAK,CAACuQ,oBAAN,GAA6B,EAA7B;CAHK;AAMPD,SAAS,CAACrP,UAAV,GAAuB,WAAvB;;AAEA,SAASkE,SAAT,CAAiB1J,QAAjB,EAA2B;EACzBiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,WAA1D;MAGEyH,KAJuB,GAoBrBzH,QApBqB,CAIvByH,KAJuB;MAKvB3F,IALuB,GAoBrB9B,QApBqB,CAKvB8B,IALuB;MAMvBzD,WANuB,GAoBrB2B,QApBqB,CAMvB3B,WANuB;4BAoBrB2B,QApBqB,CAOvBoU,SAPuB;MAOvBA,SAPuB,oCAOXpT,gBAPW;MAQZ+T,aARY,GAoBrB/U,QApBqB,CAQvBqU,SARuB;MASvBC,aATuB,GAoBrBtU,QApBqB,CASvBsU,aATuB;MAUvBH,cAVuB,GAoBrBnU,QApBqB,CAUvBmU,cAVuB;MAWvBQ,iBAXuB,GAoBrB3U,QApBqB,CAWvB2U,iBAXuB;MAYvBC,kBAZuB,GAoBrB5U,QApBqB,CAYvB4U,kBAZuB;MAavBL,gBAbuB,GAoBrBvU,QApBqB,CAavBuU,gBAbuB;8BAoBrBvU,QApBqB,CAcvBwU,gBAduB;MAcvBA,gBAduB,sCAcJ,UAAAzT,CAAC;WAAIA,CAAC,CAACiU,QAAN;GAdG;8BAoBrBhV,QApBqB,CAevByU,oBAfuB;MAevBA,oBAfuB,sCAeAzY,MAAM,CAACC,gBAfP;MAgBvB8O,WAhBuB,GAoBrB/K,QApBqB,CAgBvB+K,WAhBuB;MAiBdiJ,MAjBc,GAoBrBhU,QApBqB,CAiBvByI,KAjBuB,CAiBduL,MAjBc;MAkBvBjL,QAlBuB,GAoBrB/I,QApBqB,CAkBvB+I,QAlBuB;MAmBvBzD,OAnBuB,GAoBrBtF,QApBqB,CAmBvBsF,OAnBuB;EAsBzBD,iBAAiB,CAACC,OAAD,EAAU,CAAC,YAAD,CAAV,EAA0B,WAA1B,EAAuC,EAAvC,CAAjB,CAtByB;;MAyBnB2P,YAAY,GAAG,SAAfA,YAAe,CAAClT,QAAD,EAAWN,IAAX,EAAiByT,KAAjB,EAA2B;WACvCnM,QAAQ,CAAC,UAAAf,GAAG,EAAI;UACbgM,MADa,GACFhM,GADE,CACbgM,MADa;;UAIf7W,MAAM,GAAGkB,WAAW,CAAC4Q,IAAZ,CAAiB,UAAA5P,CAAC;eAAIA,CAAC,CAAC9B,EAAF,KAASwE,QAAb;OAAlB,CAAf;UACQmS,aALa,GAKK/W,MALL,CAKb+W,aALa;;UAQfiB,cAAc,GAAGnB,MAAM,CAAC/E,IAAP,CAAY,UAAA5P,CAAC;eAAIA,CAAC,CAAC9B,EAAF,KAASwE,QAAb;OAAb,CAAvB;UACMqT,aAAa,GAAGpB,MAAM,CAACrO,SAAP,CAAiB,UAAAtG,CAAC;eAAIA,CAAC,CAAC9B,EAAF,KAASwE,QAAb;OAAlB,CAAtB;UACMsT,cAAc,GAAG,OAAO5T,IAAP,KAAgB,WAAhB,IAA+BA,IAAI,KAAK,IAA/D;UAEI6T,SAAS,GAAG,EAAhB,CAZqB;;UAejBtJ,MAAJ;;UAEI,CAACuI,gBAAD,IAAqBW,KAAzB,EAAgC;YAC1BC,cAAJ,EAAoB;UAClBnJ,MAAM,GAAG,QAAT;SADF,MAEO;UACLA,MAAM,GAAG,KAAT;;OAJJ,MAMO;;YAEDoJ,aAAa,KAAKpB,MAAM,CAAChV,MAAP,GAAgB,CAAtC,EAAyC;UACvCgN,MAAM,GAAG,SAAT;SADF,MAEO,IAAImJ,cAAJ,EAAoB;UACzBnJ,MAAM,GAAG,QAAT;SADK,MAEA;UACLA,MAAM,GAAG,SAAT;;OA9BiB;;;UAoCnBA,MAAM,KAAK,QAAX;OACC2I,iBADD;OAECU,cAFD;MAGCH,KAAK,GAAG,CAACN,kBAAJ,GAAyB,IAH/B;MAIEO,cAAc;MACbA,cAAc,CAAC1T,IAAf,IAAuB,CAACyS,aAD1B,IAEE,CAACiB,cAAc,CAAC1T,IAAhB,IAAwByS,aAN3B,CADF,EAQE;QACAlI,MAAM,GAAG,QAAT;;;UAGEA,MAAM,KAAK,SAAf,EAA0B;QACxBsJ,SAAS,GAAG,CACV;UACE/X,EAAE,EAAEwE,QADN;UAEEN,IAAI,EAAE4T,cAAc,GAAG5T,IAAH,GAAUyS;SAHtB,CAAZ;OADF,MAOO,IAAIlI,MAAM,KAAK,KAAf,EAAsB;QAC3BsJ,SAAS,gCACJtB,MADI,IAEP;UACEzW,EAAE,EAAEwE,QADN;UAEEN,IAAI,EAAE4T,cAAc,GAAG5T,IAAH,GAAUyS;SAJzB,EAAT,CAD2B;;QAS3BoB,SAAS,CAACC,MAAV,CAAiB,CAAjB,EAAoBD,SAAS,CAACtW,MAAV,GAAmByV,oBAAvC;OATK,MAUA,IAAIzI,MAAM,KAAK,QAAf,EAAyB;;QAE9BsJ,SAAS,GAAGtB,MAAM,CAAC9V,GAAP,CAAW,UAAAmB,CAAC,EAAI;cACtBA,CAAC,CAAC9B,EAAF,KAASwE,QAAb,EAAuB;sCAEhB1C,CADL;cAEEoC,IAAI,EAAE4T,cAAc,GAAG5T,IAAH,GAAU,CAAC0T,cAAc,CAAC1T;;;;iBAG3CpC,CAAP;SAPU,CAAZ;OAFK,MAWA,IAAI2M,MAAM,KAAK,QAAf,EAAyB;QAC9BsJ,SAAS,GAAGtB,MAAM,CAAC5U,MAAP,CAAc,UAAAC,CAAC;iBAAIA,CAAC,CAAC9B,EAAF,KAASwE,QAAb;SAAf,CAAZ;;;gCAIGiG,GADL;QAEEgM,MAAM,EAAEsB;;KAjFG,EAmFZzJ,OAAO,CAAC2J,YAnFI,CAAf;GADF,CAzByB;;;EAiHzBzK,WAAW,CAACjM,OAAZ;YAEGkB,QAAQ;WAAI,UAAA7C,MAAM,EAAI;UACbK,QADa,GAC0CL,MAD1C,CACbK,QADa;UACaiY,oBADb,GAC0CtY,MAD1C,CACHgX,cADG;UACmC5W,EADnC,GAC0CJ,MAD1C,CACmCI,EADnC;UAGfmY,OAAO,GAAGlY,QAAQ,GACpBmE,eAAe,CACb8T,oBAAoB,KAAK,IAAzB,GAAgC,KAAhC,GAAwC5K,SAD3B,EAEbsJ,cAAc,KAAK,IAAnB,GAA0B,KAA1B,GAAkCtJ,SAFrB,EAGb,IAHa,CADK,GAMpB,KANJ;MAQA1N,MAAM,CAACuY,OAAP,GAAiBA,OAAjB;;UAEIvY,MAAM,CAACuY,OAAX,EAAoB;QAClBvY,MAAM,CAAC8X,YAAP,GAAsB,UAACxT,IAAD,EAAOyT,KAAP;iBACpBD,YAAY,CAAC9X,MAAM,CAACI,EAAR,EAAYkE,IAAZ,EAAkByT,KAAlB,CADQ;SAAtB;;QAGA/X,MAAM,CAACwY,YAAP,GAAsB,YAAM;iBACnB5M,QAAQ,CAAC,UAAAf,GAAG,EAAI;gBACbgM,MADa,GACFhM,GADE,CACbgM,MADa;gBAEfsB,SAAS,GAAGtB,MAAM,CAAC5U,MAAP,CAAc,UAAAC,CAAC;qBAAIA,CAAC,CAAC9B,EAAF,KAASJ,MAAM,CAACI,EAApB;aAAf,CAAlB;sCAEKyK,GADL;cAEEgM,MAAM,EAAEsB;;WALG,EAOZzJ,OAAO,CAAC2J,YAPI,CAAf;SADF;;;UAYII,0BAA0B,GAAGjR,cAAc,CAC/C3E,QAAQ,CAACuE,KAAT,CAAeuQ,oBADgC,EAE/C3X,MAF+C,EAG/C6C,QAH+C,CAAjD;;MAKA7C,MAAM,CAAC2X,oBAAP,GAA8B,UAAAtR,KAAK,EAAI;eAC9BS,UAAU,CACf;UACE+I,OAAO,EAAE0I,OAAO,GACZ,UAAA3U,CAAC,EAAI;YACHA,CAAC,CAACkM,OAAF;YACA9P,MAAM,CAAC8X,YAAP,CACEpK,SADF,EAEE,CAAC0J,gBAAD,IAAqBC,gBAAgB,CAACzT,CAAD,CAFvC;WAHU,GAQZ8J,SATN;UAUErI,KAAK,EAAE;YACL3B,MAAM,EAAE6U,OAAO,GAAG,SAAH,GAAe7K;WAXlC;UAaEqC,KAAK,EAAE;SAdM,EAgBf0I,0BAhBe,EAiBfpS,KAjBe,CAAjB;OADF;;UAsBMqS,UAAU,GAAG7B,MAAM,CAAC/E,IAAP,CAAY,UAAA5P,CAAC;eAAIA,CAAC,CAAC9B,EAAF,KAASA,EAAb;OAAb,CAAnB;MACAJ,MAAM,CAAC2Y,QAAP,GAAkB,CAAC,CAACD,UAApB;MACA1Y,MAAM,CAAC4Y,WAAP,GAAqB/B,MAAM,CAACrO,SAAP,CAAiB,UAAAtG,CAAC;eAAIA,CAAC,CAAC9B,EAAF,KAASA,EAAb;OAAlB,CAArB;MACAJ,MAAM,CAAC6Y,YAAP,GAAsB7Y,MAAM,CAAC2Y,QAAP,GAAkBD,UAAU,CAACpU,IAA7B,GAAoCoJ,SAA1D;KA3DO;GAAT,CA4DG7K,QA5DH,CAFF;MAiEMiW,UAAU,GAAG1Z,KAAK,CAACuM,OAAN,CAAc,YAAM;QACjCwL,aAAa,IAAI,CAACN,MAAM,CAAChV,MAA7B,EAAqC;aAC5B8C,IAAP;;;QAEE1F,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqM,IAAR,CAAa,eAAb,EALmC;;QAQ/B+L,eAAe,GAAGlC,MAAM,CAAC5U,MAAP,CAAc,UAAAgC,IAAI;aACxC/C,WAAW,CAAC4Q,IAAZ,CAAiB,UAAApQ,GAAG;eAAIA,GAAG,CAACtB,EAAJ,KAAW6D,IAAI,CAAC7D,EAApB;OAApB,CADwC;KAAlB,CAAxB;;QAIM4Y,QAAQ,GAAG,SAAXA,QAAW,CAAArU,IAAI,EAAI;;;;UAIjBsU,UAAU,GAAGhC,SAAS,CAC1BtS,IAD0B,EAE1BoU,eAAe,CAAChY,GAAhB,CAAoB,UAAAkD,IAAI,EAAI;;YAEpBjE,MAAM,GAAGkB,WAAW,CAAC4Q,IAAZ,CAAiB,UAAA5P,CAAC;iBAAIA,CAAC,CAAC9B,EAAF,KAAS6D,IAAI,CAAC7D,EAAlB;SAAlB,CAAf;;YAEI,CAACJ,MAAL,EAAa;gBACL,IAAIa,KAAJ,yDAC6CoD,IAAI,CAAC7D,EADlD,oBAAN;;;YAKM0W,QAVkB,GAUL9W,MAVK,CAUlB8W,QAVkB;;;;;;;;YAmBpBoC,UAAU,GACdrR,UAAU,CAACiP,QAAD,CAAV,IACA,CAACc,aAAa,IAAI,EAAlB,EAAsBd,QAAtB,CADA,IAEAI,SAAS,CAACJ,QAAD,CAHX;;YAKI,CAACoC,UAAL,EAAiB;gBACT,IAAIrY,KAAJ,4DACgDiW,QADhD,2BACyE7S,IAAI,CAAC7D,EAD9E,QAAN;SAzBwB;;;;eAgCnB,UAAC0H,CAAD,EAAIkO,CAAJ;iBAAUkD,UAAU,CAACpR,CAAD,EAAIkO,CAAJ,EAAO/R,IAAI,CAAC7D,EAAZ,CAApB;SAAP;OAhCF,CAF0B;MAqC1B2Y,eAAe,CAAChY,GAAhB,CAAoB,UAAAkD,IAAI,EAAI;;YAEpBjE,MAAM,GAAGkB,WAAW,CAAC4Q,IAAZ,CAAiB,UAAA5P,CAAC;iBAAIA,CAAC,CAAC9B,EAAF,KAAS6D,IAAI,CAAC7D,EAAlB;SAAlB,CAAf;;YAEIJ,MAAM,IAAIA,MAAM,CAACmZ,YAArB,EAAmC;iBAC1BlV,IAAI,CAACK,IAAZ;;;eAGK,CAACL,IAAI,CAACK,IAAb;OARF,CArC0B,CAA5B,CAJuB;;MAsDvB2U,UAAU,CAACtX,OAAX,CAAmB,UAAAlB,GAAG,EAAI;YACpB,CAACA,GAAG,CAAC+I,OAAL,IAAgB/I,GAAG,CAAC+I,OAAJ,CAAY3H,MAAZ,IAAsB,CAA1C,EAA6C;;;;QAG7CpB,GAAG,CAAC+I,OAAJ,GAAcwP,QAAQ,CAACvY,GAAG,CAAC+I,OAAL,CAAtB;OAJF;aAOOyP,UAAP;KA7DF;;QAgEIha,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACsM,OAAR,CAAgB,eAAhB;WAEK+L,QAAQ,CAACrU,IAAD,CAAf;GA/EiB,EAgFhB,CACDwS,aADC,EAEDN,MAFC,EAGDvM,KAHC,EAID3F,IAJC,EAKDzD,WALC,EAMD+V,SANC,EAODW,aAPC,CAhFgB,CAAnB;4BA2FK/U,QADL;IAEEiV,YAAY,EAAZA,YAFF;IAGEnT,IAAI,EAAEmU,UAHR;IAIEM,aAAa,EAAEzU;;;;ACzTnB8F,YAAY,CAAC4O,QAAb,GAAwB,EAAxB;AACA5O,YAAY,CAAC6O,SAAb,GAAyB,CAAzB;AAEA3K,UAAU,CAAC,YAAD,EAAe,gBAAf,CAAV;AAEA,IAAM/E,WAAS,GAAG;;EAEhB2P,gBAAgB,EAAEzP,SAAS,CAACS,IAFZ;EAGhByE,oBAAoB,EAAElF,SAAS,CAACS;CAHlC;AAMA,IAAaiP,aAAa,GAAG,SAAhBA,aAAgB,CAAApS,KAAK,EAAI;EACpCA,KAAK,CAACmF,OAAN,CAAcnK,IAAd,CAAmBmK,SAAnB;CADK;AAIPiN,aAAa,CAACnR,UAAd,GAA2B,eAA3B;;AAEA,SAASkE,SAAT,CAAiB1J,QAAjB,EAA2B;EACzBiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,eAA1D;MAGEgH,IAJuB,GAgBrBhH,QAhBqB,CAIvBgH,IAJuB;MAKvBlF,IALuB,GAgBrB9B,QAhBqB,CAKvB8B,IALuB;MAMvB4U,gBANuB,GAgBrB1W,QAhBqB,CAMvB0W,gBANuB;MAOvBE,4BAPuB,GAgBrB5W,QAhBqB,CAOvB4W,4BAPuB;8BAgBrB5W,QAhBqB,CAQvBkG,iBARuB;MAQvBA,iBARuB,sCAQH,UARG;MASvBuB,KATuB,GAgBrBzH,QAhBqB,CASvByH,KATuB;MAUvBnC,OAVuB,GAgBrBtF,QAhBqB,CAUvBsF,OAVuB;MAWZuR,aAXY,GAgBrB7W,QAhBqB,CAWvB8W,SAXuB;8BAgBrB9W,QAhBqB,CAYvBmM,oBAZuB;MAYvBA,oBAZuB,sCAYA,IAZA;8BAgBrBnM,QAhBqB,CAavBoG,aAbuB;MAavBA,aAbuB,sCAaP,IAbO;wBAgBrBpG,QAhBqB,CAcvByI,KAduB;MAcd+N,QAdc,mBAcdA,QAdc;MAcJC,SAdI,mBAcJA,SAdI;MAcOpI,OAdP,mBAcOA,OAdP;MAcgBmC,OAdhB,mBAcgBA,OAdhB;MAcyBwD,MAdzB,mBAcyBA,MAdzB;MAciC7N,QAdjC,mBAciCA,QAdjC;MAevB4C,QAfuB,GAgBrB/I,QAhBqB,CAevB+I,QAfuB;EAkBzB1D,iBAAiB,CACfC,OADe,EAEf,CAAC,YAAD,EAAe,YAAf,EAA6B,WAA7B,EAA0C,aAA1C,CAFe,EAGf,eAHe,EAIf,EAJe,CAAjB;MAOMyR,MAAM,GAAGL,gBAAgB,GAAG,IAAH,GAAU1P,IAAzC;MAEMgQ,qBAAqB,GAAGza,KAAK,CAAC6M,MAAN,EAA9B,CA3ByB;;MA8BnB6N,+BAA+B,GAAG1a,KAAK,CAAC6M,MAAN,EAAxC;EACA6N,+BAA+B,CAAC3N,OAAhC,GAA0CsN,4BAA1C;EAEA1a,mBAAmB,CAAC,YAAM;QAEtB8a,qBAAqB,CAAC1N,OAAtB,IACA,CAAC2N,+BAA+B,CAAC3N,OAFnC,EAGE;MACAP,QAAQ,CACN,UAAAf,GAAG;kCACEA,GADF;UAEDyO,SAAS,EAAE;;OAHP,EAKN5K,OAAO,CAACqL,UALF,CAAR;;;IAQFF,qBAAqB,CAAC1N,OAAtB,GAAgC,IAAhC;GAbiB,EAchB,CAACP,QAAD,EAAWgO,MAAX,EAAmB1I,OAAnB,EAA4BmC,OAA5B,EAAqCwD,MAArC,CAdgB,CAAnB;MAgBM8C,SAAS,GAAGJ,gBAAgB,GAC9BG,aAD8B,GAE9B7Z,IAAI,CAACmG,IAAL,CAAUrB,IAAI,CAAC9C,MAAL,GAAcwX,QAAxB,CAFJ;MAIMW,WAAW,GAAG5a,KAAK,CAACuM,OAAN,CAClB;WAAOgO,SAAS,GAAG,CAAZ,GAAgB,mBAAI,IAAI5U,KAAJ,CAAU4U,SAAV,CAAJ,EAA0B5Y,GAA1B,CAA8B,UAACmB,CAAD,EAAIkC,CAAJ;aAAUA,CAAV;KAA9B,CAAhB,GAA6D,EAApE;GADkB,EAElB,CAACuV,SAAD,CAFkB,CAApB;MAKMM,IAAI,GAAG7a,KAAK,CAACuM,OAAN,CAAc,YAAM;QAC3BsO,IAAJ;;QAEIV,gBAAJ,EAAsB;MACpBU,IAAI,GAAGtV,IAAP;KADF,MAEO;UACD1F,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqP,IAAR,CAAa,SAAb;UAEIkK,SAAS,GAAGb,QAAQ,GAAGC,SAA7B;UACMa,OAAO,GAAGD,SAAS,GAAGb,QAA5B;MAEAY,IAAI,GAAGtV,IAAI,CAAC0P,KAAL,CAAW6F,SAAX,EAAsBC,OAAtB,CAAP;;;QAGEnL,oBAAJ,EAA0B;aACjBiL,IAAP;;;WAGKnR,UAAU,CAACmR,IAAD,EAAO;MAAElR,iBAAiB,EAAjBA,iBAAF;MAAqBC,QAAQ,EAARA,QAArB;MAA+BC,aAAa,EAAbA;KAAtC,CAAjB;GAnBW,EAoBV,CACDqB,KADC,EAEDrB,aAFC,EAGDD,QAHC,EAIDD,iBAJC,EAKDwQ,gBALC,EAMDD,SANC,EAODD,QAPC,EAQDrK,oBARC,EASDrK,IATC,CApBU,CAAb;MAgCMyV,eAAe,GAAGd,SAAS,GAAG,CAApC;MACMe,WAAW,GAAGV,SAAS,KAAK,CAAC,CAAf,IAAoBL,SAAS,GAAGK,SAAS,GAAG,CAAhE;MAEMW,QAAQ,GAAGlb,KAAK,CAACyM,WAAN,CACf,UAAAC,OAAO,EAAI;QACL7M,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CmL,KAA9C,EACE3J,OAAO,CAACqP,IAAR,CAAa,UAAb;WACKpE,QAAQ,CAAC,UAAAf,GAAG,EAAI;UACf0P,YAAY,GAChB,OAAOzO,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACjB,GAAG,CAACyO,SAAL,CAAvC,GAAyDxN,OAD3D;;UAGIyO,YAAY,GAAG,CAAf,IAAoBA,YAAY,GAAGZ,SAAS,GAAG,CAAnD,EAAsD;eAC7C9O,GAAP;;;gCAGGA,GADL;QAEEyO,SAAS,EAAEiB;;KATA,EAWZ7L,OAAO,CAACqL,UAXI,CAAf;GAJa,EAiBf,CAACzP,KAAD,EAAQqP,SAAR,EAAmB/N,QAAnB,CAjBe,CAAjB;MAoBM4O,YAAY,GAAGpb,KAAK,CAACyM,WAAN,CAAkB,YAAM;WACpCyO,QAAQ,CAAC,UAAAzP,GAAG;aAAIA,GAAG,GAAG,CAAV;KAAJ,CAAf;GADmB,EAElB,CAACyP,QAAD,CAFkB,CAArB;MAIMG,QAAQ,GAAGrb,KAAK,CAACyM,WAAN,CAAkB,YAAM;WAChCyO,QAAQ,CAAC,UAAAzP,GAAG;aAAIA,GAAG,GAAG,CAAV;KAAJ,CAAf;GADe,EAEd,CAACyP,QAAD,CAFc,CAAjB;MAIMI,WAAW,GAAGtb,KAAK,CAACyM,WAAN,CAClB,UAAAwN,QAAQ,EAAI;IACVzN,QAAQ,CAAC,UAAAf,GAAG,EAAI;UACR8P,WAAW,GAAG9P,GAAG,CAACwO,QAAJ,GAAexO,GAAG,CAACyO,SAAvC;UACMA,SAAS,GAAGzZ,IAAI,CAAC+a,KAAL,CAAWD,WAAW,GAAGtB,QAAzB,CAAlB;gCAEKxO,GADL;QAEEyO,SAAS,EAATA,SAFF;QAGED,QAAQ,EAARA;;KANI,EAQL3K,OAAO,CAACmM,cARH,CAAR;GAFgB,EAYlB,CAACjP,QAAD,CAZkB,CAApB;4BAgBK/I,QADL;IAEEmX,WAAW,EAAXA,WAFF;IAGEL,SAAS,EAATA,SAHF;IAIEM,IAAI,EAAJA,IAJF;IAKEG,eAAe,EAAfA,eALF;IAMEC,WAAW,EAAXA,WANF;IAOEC,QAAQ,EAARA,QAPF;IAQEE,YAAY,EAAZA,YARF;IASEC,QAAQ,EAARA,QATF;IAUEC,WAAW,EAAXA,WAVF;IAWEpB,SAAS,EAATA,SAXF;IAYED,QAAQ,EAARA;;;;ACjKJ5O,YAAY,CAACqQ,gBAAb,GAAgC,EAAhC;AAEAnM,UAAU,CAAC,mBAAD,EAAsB,sBAAtB,CAAV;AAEA,IAAM/E,WAAS,GAAG;EAChBmR,oBAAoB,EAAEjR,SAAS,CAACiF;CADlC;AAIA,IAAaiM,YAAY,GAAG,SAAfA,YAAe,CAAA5T,KAAK,EAAI;EACnCA,KAAK,CAAC6T,yBAAN,GAAkC,EAAlC;EACA7T,KAAK,CAAC8T,6BAAN,GAAsC,EAAtC;EACA9T,KAAK,CAACoF,OAAN,CAAcpK,IAAd,CAAmBoK,OAAnB;EACApF,KAAK,CAACmF,OAAN,CAAcnK,IAAd,CAAmBmK,SAAnB;CAJK;AAOPyO,YAAY,CAAC3S,UAAb,GAA0B,cAA1B;;AAEA,SAASmE,OAAT,CAAiB7H,IAAjB,EAAuB9B,QAAvB,EAAiC;EAC/BiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,cAA1D;MAGWiY,gBAJoB,GAK3BjY,QAL2B,CAI7ByI,KAJ6B,CAIpBwP,gBAJoB;EAO/BjY,QAAQ,CAACsY,gBAAT,GAA4B/b,KAAK,CAACuM,OAAN,CAAc,YAAM;QACxCwP,gBAAgB,GAAG,EAAzB;IACAxW,IAAI,CAAChD,OAAL,CAAa,UAAAlB,GAAG,EAAI;UACdA,GAAG,CAAC0U,YAAR,EAAsB;YACdiG,WAAW,GAAG3a,GAAG,CAAC+I,OAAJ,CAAYzI,GAAZ,CAAgB,UAAAN,GAAG;iBAAIA,GAAG,CAAC4C,IAAR;SAAnB,CAApB;QACA5C,GAAG,CAAC4a,UAAJ,GAAiBD,WAAW,CAACxK,KAAZ,CAAkB,UAAAvN,IAAI;iBACrCyX,gBAAgB,CAACtY,QAAjB,CAA0Ba,IAAI,CAAChB,IAAL,CAAU,GAAV,CAA1B,CADqC;SAAtB,CAAjB;OAFF,MAKO;QACL5B,GAAG,CAAC4a,UAAJ,GAAiBP,gBAAgB,CAACtY,QAAjB,CAA0B/B,GAAG,CAAC4C,IAAJ,CAAShB,IAAT,CAAc,GAAd,CAA1B,CAAjB;;;UAEE5B,GAAG,CAAC4a,UAAR,EAAoB;QAClBF,gBAAgB,CAAC/Y,IAAjB,CAAsB3B,GAAtB;;KAVJ;WAcO0a,gBAAP;GAhB0B,EAiBzB,CAACxW,IAAD,EAAOmW,gBAAP,CAjByB,CAA5B;SAmBOnW,IAAP;;;AAGF,SAAS4H,SAAT,CAAiB1J,QAAjB,EAA2B;EACzBiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,cAA1D;MAGEuE,KAJuB,GAYrBvE,QAZqB,CAIvBuE,KAJuB;8BAYrBvE,QAZqB,CAKvBkY,oBALuB;MAKvBA,oBALuB,sCAKA,YALA;MAMvBO,oCANuB,GAYrBzY,QAZqB,CAMvByY,oCANuB;MAOvBnT,OAPuB,GAYrBtF,QAZqB,CAOvBsF,OAPuB;MAQvBgF,QARuB,GAYrBtK,QAZqB,CAQvBsK,QARuB;MASvBtD,IATuB,GAYrBhH,QAZqB,CASvBgH,IATuB;MAUdiR,gBAVc,GAYrBjY,QAZqB,CAUvByI,KAVuB,CAUdwP,gBAVc;MAWvBlP,QAXuB,GAYrB/I,QAZqB,CAWvB+I,QAXuB;EAczB1D,iBAAiB,CACfC,OADe,EAEf,CAAC,YAAD,EAAe,YAAf,EAA6B,WAA7B,CAFe,EAGf,cAHe,EAIf,EAJe,CAAjB;MAOMoT,YAAY,GAAGpO,QAAQ,CAACpM,GAAT,CAAa,UAAAmB,CAAC;WAAIA,CAAC,CAACmB,IAAF,CAAOhB,IAAP,CAAY,GAAZ,CAAJ;GAAd,CAArB;MAEImZ,iBAAiB,GAAG,CAAC,CAACD,YAAY,CAAC1Z,MAAf,IAAyB,CAAC,CAACiZ,gBAAgB,CAACjZ,MAApE;;MAEI2Z,iBAAJ,EAAuB;QACjBD,YAAY,CAAC9Z,IAAb,CAAkB,UAAAS,CAAC;aAAI,CAAC4Y,gBAAgB,CAACtY,QAAjB,CAA0BN,CAA1B,CAAL;KAAnB,CAAJ,EAA2D;MACzDsZ,iBAAiB,GAAG,KAApB;;;;MAIEC,uBAAuB,GAAGrc,KAAK,CAAC6M,MAAN,EAAhC,CA/ByB;;MAkCnByP,uCAAuC,GAAGtc,KAAK,CAAC6M,MAAN,EAAhD;EACAyP,uCAAuC,CAACvP,OAAxC,GAAkDmP,oCAAlD;EAEAvc,mBAAmB,CAAC,YAAM;QAEtB0c,uBAAuB,CAACtP,OAAxB,IACA,CAACuP,uCAAuC,CAACvP,OAF3C,EAGE;MACAP,QAAQ,CACN,UAAAf,GAAG;kCACEA,GADF;UAEDiQ,gBAAgB,EAAE;;OAHd,EAKNpM,OAAO,CAACqL,UALF,CAAR;;;IAQF0B,uBAAuB,CAACtP,OAAxB,GAAkC,IAAlC;GAbiB,EAchB,CAACP,QAAD,EAAW/B,IAAX,CAdgB,CAAnB;;MAgBM8R,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAvM,GAAG,EAAI;IAClCxD,QAAQ,CAAC,UAAAf,GAAG,EAAI;UACR+Q,SAAS,GAAG,OAAOxM,GAAP,KAAe,WAAf,GAA6BA,GAA7B,GAAmC,CAACoM,iBAAtD;gCAEK3Q,GADL;QAEEiQ,gBAAgB,EAAEc,SAAS,GAAGL,YAAH,GAAkB;;KAJzC,EAML7M,OAAO,CAACiN,oBANH,CAAR;GADF;;MAUME,eAAe,GAAG,SAAlBA,eAAkB,CAACf,gBAAD,EAAmBzX,IAAnB,EAA4B;QAC5CiK,UAAU,GAAGjK,IAAI,CAACgR,KAAL,CAAW,CAAX,EAAchR,IAAI,CAACxB,MAAL,GAAc,CAA5B,CAAnB;QACMia,SAAS,GAAGxO,UAAU,CAACjL,IAAX,CAAgB,GAAhB,CAAlB;QACM0Z,QAAQ,GACZR,YAAY,CAACtZ,MAAb,CAAoB,UAAA+Z,OAAO,EAAI;UACvB3Y,IAAI,GAAG2Y,OAAb;aAEE3Y,IAAI,KAAKyY,SAAT,IACAzY,IAAI,CAAC4Y,UAAL,CAAgBH,SAAhB,CADA,IAEA,CAAChB,gBAAgB,CAACoB,GAAjB,CAAqB7Y,IAArB,CAHH;KAFF,EAOGxB,MAPH,KAOc,CARhB;;QASIka,QAAJ,EAAc;MACZjB,gBAAgB,CAACrL,GAAjB,CAAqBqM,SAArB;KADF,MAEO;MACLhB,gBAAgB,CAACpL,MAAjB,CAAwBoM,SAAxB;;;QAEExO,UAAU,CAACzL,MAAX,GAAoB,CAAxB,EAA2Bga,eAAe,CAACf,gBAAD,EAAmBxN,UAAnB,CAAf;GAjB7B;;MAoBM6O,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC9Y,IAAD,EAAO+L,GAAP,EAAe;QACjChG,GAAG,GAAG/F,IAAI,CAAChB,IAAL,CAAU,GAAV,CAAZ;QACM+Z,iBAAiB,GAAG,CAAChT,GAAD,EAAM,GAAN,EAAW/G,IAAX,CAAgB,EAAhB,CAA1B;WAEOuJ,QAAQ,CAAC,UAAAf,GAAG,EAAI;;;;UAIfwE,MAAM,GAAGxE,GAAG,CAACiQ,gBAAJ,CAAqBtY,QAArB,CAA8B4G,GAA9B,CAAf;UACMkG,WAAW,GAAG,OAAOF,GAAP,KAAe,WAAf,GAA6BA,GAA7B,GAAmC,CAACC,MAAxD;UACIgN,eAAe,GAAG,IAAI7M,GAAJ,CAAQ3E,GAAG,CAACiQ,gBAAZ,CAAtB;;UAEI,CAACzL,MAAD,IAAWC,WAAf,EAA4B;QAC1BiM,YAAY,CAAC5Z,OAAb,CAAqB,UAAAqa,OAAO,EAAI;cAC1BA,OAAO,KAAK5S,GAAZ,IAAmB4S,OAAO,CAACC,UAAR,CAAmBG,iBAAnB,CAAvB,EAA8D;YAC5DC,eAAe,CAAC5M,GAAhB,CAAoBuM,OAApB;;SAFJ;OADF,MAMO,IAAI3M,MAAM,IAAI,CAACC,WAAf,EAA4B;QACjCiM,YAAY,CAAC5Z,OAAb,CAAqB,UAAAqa,OAAO,EAAI;cAC1BA,OAAO,KAAK5S,GAAZ,IAAmB4S,OAAO,CAACC,UAAR,CAAmBG,iBAAnB,CAAvB,EAA8D;YAC5DC,eAAe,CAAC3M,MAAhB,CAAuBsM,OAAvB;;SAFJ;OADK,MAMA;eACEnR,GAAP;OArBmB;;;;UA0BjBxH,IAAI,CAACxB,MAAL,GAAc,CAAlB,EAAqBga,eAAe,CAACQ,eAAD,EAAkBhZ,IAAlB,CAAf;gCAGhBwH,GADL;QAEEiQ,gBAAgB,qBAAMuB,eAAe,CAACvX,MAAhB,EAAN;;KA9BL,EAgCZ4J,OAAO,CAACyN,iBAhCI,CAAf;GAJF;;MAuCMG,mCAAmC,GAAG9U,cAAc,CACxD3E,QAAQ,CAACuE,KAAT,CAAe8T,6BADyC,EAExDrY,QAFwD,CAA1D;;MAIMqY,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAA7U,KAAK,EAAI;WACtCS,UAAU,CACf;MACEyV,QAAQ,EAAE,kBAAA3Y,CAAC,EAAI;QACb+X,oBAAoB,CAAC/X,CAAC,CAAC4Y,MAAF,CAASC,OAAV,CAApB;OAFJ;MAIEpX,KAAK,EAAE;QACL3B,MAAM,EAAE;OALZ;MAOE+Y,OAAO,EAAEjB,iBAPX;MAQEzL,KAAK,EAAE;KATM,EAWfuM,mCAXe,EAYfjW,KAZe,CAAjB;GADF;;EAiBAe,KAAK,CAACqF,UAAN,CAAiBrK,IAAjB,CAAsB,UAAC3B,GAAD,EAAMoC,QAAN,EAAmB;QACjC6Z,+BAA+B,GAAGlV,cAAc,CACpD3E,QAAQ,CAACuE,KAAT,CAAe6T,yBADqC,EAEpDxa,GAFoD,EAGpDoC,QAHoD,CAAtD,CADuC;;QAOnCpC,GAAG,CAAC0U,YAAR,EAAsB;UACdiG,WAAW,GAAG3a,GAAG,CAAC+I,OAAJ,CAAYzI,GAAZ,CAAgB,UAAAN,GAAG;eAAIA,GAAG,CAAC4C,IAAR;OAAnB,CAApB;;MACA5C,GAAG,CAAC0b,iBAAJ,GAAwB,UAAA/M,GAAG,EAAI;QAC7BA,GAAG,GAAG,OAAOA,GAAP,KAAe,WAAf,GAA6BA,GAA7B,GAAmC,CAAC3O,GAAG,CAAC4a,UAA9C;QACAD,WAAW,CAACzZ,OAAZ,CAAoB,UAAA0B,IAAI,EAAI;UAC1B8Y,iBAAiB,CAAC9Y,IAAD,EAAO+L,GAAP,CAAjB;SADF;OAFF;;MAMA3O,GAAG,CAACwa,yBAAJ,GAAgC,UAAA5U,KAAK,EAAI;YACnCoW,OAAO,GAAG,KAAd;;YAEIhc,GAAG,CAAC6I,QAAJ,IAAgB7I,GAAG,CAAC6I,QAAJ,CAAayR,oBAAb,CAApB,EAAwD;UACtD0B,OAAO,GAAG,IAAV;SADF,MAEO;UACLA,OAAO,GAAGhc,GAAG,CAAC4a,UAAd;;;eAGKvU,UAAU,CACf;UACEyV,QAAQ,EAAE,kBAAA3Y,CAAC,EAAI;YACbnD,GAAG,CAAC0b,iBAAJ,CAAsBvY,CAAC,CAAC4Y,MAAF,CAASC,OAA/B;WAFJ;UAIEpX,KAAK,EAAE;YACL3B,MAAM,EAAE;WALZ;UAOE+Y,OAAO,EAAPA,OAPF;UAQE1M,KAAK,EAAE;SATM,EAWf2M,+BAXe,EAYfrW,KAZe,CAAjB;OATF;KARF,MAgCO;MACL5F,GAAG,CAAC0b,iBAAJ,GAAwB,UAAA/M,GAAG;eAAI+M,iBAAiB,CAAC1b,GAAG,CAAC4C,IAAL,EAAW+L,GAAX,CAArB;OAA3B;;MACA3O,GAAG,CAACwa,yBAAJ,GAAgC,UAAA5U,KAAK,EAAI;YACnCoW,OAAO,GAAG,KAAd;;YAEIhc,GAAG,CAAC6I,QAAJ,IAAgB7I,GAAG,CAAC6I,QAAJ,CAAayR,oBAAb,CAApB,EAAwD;UACtD0B,OAAO,GAAG,IAAV;SADF,MAEO;UACLA,OAAO,GAAGhc,GAAG,CAAC4a,UAAd;;;eAGKvU,UAAU,CACf;UACEyV,QAAQ,EAAE,kBAAA3Y,CAAC,EAAI;YACbnD,GAAG,CAAC0b,iBAAJ,CAAsBvY,CAAC,CAAC4Y,MAAF,CAASC,OAA/B;WAFJ;UAIEpX,KAAK,EAAE;YACL3B,MAAM,EAAE;WALZ;UAOE+Y,OAAO,EAAPA,OAPF;UAQE1M,KAAK,EAAE;SATM,EAWf2M,+BAXe,EAYfrW,KAZe,CAAjB;OATF;;;WA0BK5F,GAAP;GAnEF;4BAuEKoC,QADL;IAEEsZ,iBAAiB,EAAjBA,iBAFF;IAGER,oBAAoB,EAApBA,oBAHF;IAIET,6BAA6B,EAA7BA,6BAJF;IAKEM,iBAAiB,EAAjBA;;;;AC9QJ/Q,YAAY,CAACkS,QAAb,GAAwB,EAAxB;AAEAhO,UAAU,CAAC,aAAD,EAAgB,cAAhB,CAAV;AAEA,IAAM/E,WAAS,GAAG;EAChBgT,uBAAuB,EAAE9S,SAAS,CAACM;CADrC;AAIA,IAAayS,WAAW,GAAG,SAAdA,WAAc,CAAAzV,KAAK,EAAI;EAClCA,KAAK,CAACmF,OAAN,CAAcnK,IAAd,CAAmBmK,SAAnB;CADK;AAIPsQ,WAAW,CAACxU,UAAZ,GAAyB,aAAzB;;AAEA,SAASkE,SAAT,CAAiB1J,QAAjB,EAA2B;EACzBiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,aAA1D;MAGEuE,KAJuB,GASrBvE,QATqB,CAIvBuE,KAJuB;MAKvBzC,IALuB,GASrB9B,QATqB,CAKvB8B,IALuB;MAMvBiY,uBANuB,GASrB/Z,QATqB,CAMvB+Z,uBANuB;MAOdD,QAPc,GASrB9Z,QATqB,CAOvByI,KAPuB,CAOdqR,QAPc;MAQvB/Q,QARuB,GASrB/I,QATqB,CAQvB+I,QARuB;MAWnBkR,WAAW,GAAG1d,KAAK,CAACyM,WAAN,CAClB,UAACxI,IAAD,EAAOyI,OAAP,EAAiD;QAAjC+C,MAAiC,uEAAxBH,OAAO,CAACoO,WAAgB;QACzCC,OAAO,GAAG1Z,IAAI,CAAChB,IAAL,CAAU,GAAV,CAAhB;WACOuJ,QAAQ,CAAC,UAAAf,GAAG,EAAI;gCAEhBA,GADL;QAEE8R,QAAQ,qBACH9R,GAAG,CAAC8R,QADD,sBAELI,OAFK,EAGJ,OAAOjR,OAAP,KAAmB,UAAnB,GACIA,OAAO,CAACjB,GAAG,CAAC8R,QAAJ,CAAaI,OAAb,CAAD,CADX,GAEIjR,OALA;;KAHG,EAWZ+C,MAXY,CAAf;GAHgB,EAgBlB,CAACjD,QAAD,CAhBkB,CAApB;MAmBMoR,YAAY,GAAG5d,KAAK,CAACyM,WAAN,CACnB,UAACmQ,OAAD,EAAUpX,QAAV,EAAoBkH,OAApB,EAAgC;WACvBgR,WAAW,CAChBd,OADgB,EAEhB,UAAAnR,GAAG,EAAI;gCAEAA,GADL;QAEEoS,SAAS,qBACJpS,GAAG,CAACoS,SADA,sBAENrY,QAFM,EAGL,OAAOkH,OAAP,KAAmB,UAAnB,GACIA,OAAO,CAACjB,GAAG,CAACoS,SAAJ,CAAcrY,QAAd,CAAD,CADX,GAEIkH,OALC;;KALG,EAchB4C,OAAO,CAACsO,YAdQ,CAAlB;GAFiB,EAmBnB,CAACF,WAAD,CAnBmB,CAArB;MAsBMI,cAAc,GAAG9d,KAAK,CAAC6M,MAAN,EAAvB,CApDyB;;EAuDzB7M,KAAK,CAACE,SAAN,CAAgB,YAAM;QAChB4d,cAAc,CAAC/Q,OAAnB,EAA4B;MAC1BP,QAAQ,CAAC,UAAAf,GAAG,EAAI;kCAETA,GADL;UAEE8R,QAAQ,EAAE;;OAHN,EAKLjO,OAAO,CAACoO,WALH,CAAR;;;IAQFI,cAAc,CAAC/Q,OAAf,GAAyB,IAAzB;GAVF,EAWG,CAACxH,IAAD,EAAOiH,QAAP,CAXH;EAaAxE,KAAK,CAACqF,UAAN,CAAiBrK,IAAjB,CAAsB,UAAA3B,GAAG,EAAI;QACrBsc,OAAO,GAAGtc,GAAG,CAAC4C,IAAJ,CAAShB,IAAT,CAAc,GAAd,CAAhB;;QAEI5B,GAAG,CAAC6I,QAAR,EAAkB;MAChB7I,GAAG,CAAC6K,KAAJ,GACE,CAAC,OAAOqR,QAAQ,CAACI,OAAD,CAAf,KAA6B,WAA7B,GACGJ,QAAQ,CAACI,OAAD,CADX,GAEGH,uBAAuB,IAAIA,uBAAuB,CAACnc,GAAD,CAFtD,KAEgE,EAHlE;;MAKAA,GAAG,CAACmL,QAAJ,GAAe,UAAAE,OAAO,EAAI;eACjBgR,WAAW,CAACrc,GAAG,CAAC4C,IAAL,EAAWyI,OAAX,CAAlB;OADF;;MAIArL,GAAG,CAAC+M,KAAJ,CAAU7L,OAAV,CAAkB,UAAArD,IAAI,EAAI;QACxBA,IAAI,CAACgN,KAAL,GAAa7K,GAAG,CAAC6K,KAAJ,CAAU2R,SAAV,IAAuB,EAApC;;QAEA3e,IAAI,CAACsN,QAAL,GAAgB,UAAAE,OAAO,EAAI;iBAClBkR,YAAY,CAACvc,GAAG,CAAC4C,IAAL,EAAW/E,IAAI,CAAC0B,MAAL,CAAYI,EAAvB,EAA2B0L,OAA3B,CAAnB;SADF;OAHF;;;WASKrL,GAAP;GAtBF;4BA0BKoC,QADL;IAEEia,WAAW,EAAXA,WAFF;IAGEE,YAAY,EAAZA;;;;AC9GJvS,YAAY,CAAC0S,WAAb,GAA2B,EAA3B;AAEAxO,UAAU,CAAC,gBAAD,CAAV;AAEA,IAAM/E,WAAS,GAAG;EAChBgT,uBAAuB,EAAE9S,SAAS,CAACM;CADrC;AAIA,IAAagT,cAAc,GAAG,SAAjBA,cAAiB,CAAAhW,KAAK,EAAI;EACrCA,KAAK,CAACiF,6BAAN,CAAoCjK,IAApC,CAAyC,UAAC2R,IAAD,EAAOlR,QAAP,EAAoB;wCAChDkR,IAAX,IAAiBlR,QAAQ,CAACyI,KAAT,CAAe6R,WAAhC;GADF;EAGA/V,KAAK,CAACgF,yBAAN,CAAgChK,IAAhC,CAAqCgK,2BAArC;EACAhF,KAAK,CAACmF,OAAN,CAAcnK,IAAd,CAAmBmK,SAAnB;CALK;AAQP6Q,cAAc,CAAC/U,UAAf,GAA4B,gBAA5B;;AAEA,SAAS+D,2BAAT,CAAmC5M,OAAnC,EAA4CqD,QAA5C,EAAsD;MAEzCsa,WAFyC,GAGhDta,QAHgD,CAElDyI,KAFkD,CAEzC6R,WAFyC;;MAMhD,CAACA,WAAD,IAAgB,CAACA,WAAW,CAACtb,MAAjC,EAAyC;WAChCrC,OAAP;;;MAGI6d,eAAe,sBAAOF,WAAP,CAArB,CAVoD;;;MAa9CG,WAAW,sBAAO9d,OAAP,CAAjB,CAboD;;;MAgB9C+d,cAAc,GAAG,EAAvB,CAhBoD;;;QAoB5CC,cAAc,GAAGH,eAAe,CAAClH,KAAhB,EAAvB;QACMsH,UAAU,GAAGH,WAAW,CAAC9U,SAAZ,CAAsB,UAAAtG,CAAC;aAAIA,CAAC,CAAC9B,EAAF,KAASod,cAAb;KAAvB,CAAnB;;QACIC,UAAU,GAAG,CAAC,CAAlB,EAAqB;MACnBF,cAAc,CAACnb,IAAf,CAAoBkb,WAAW,CAAClF,MAAZ,CAAmBqF,UAAnB,EAA+B,CAA/B,EAAkC,CAAlC,CAApB;;;;SAJGH,WAAW,CAACzb,MAAZ,IAAsBwb,eAAe,CAACxb,MAA7C,EAAqD;;GAnBD;;;mBA4BzC0b,cAAX,qBAA8BD,WAA9B;;;AAGF,SAAS/Q,SAAT,CAAiB1J,QAAjB,EAA2B;EACzBiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,gBAA1D;MAEQ+I,QAHiB,GAGJ/I,QAHI,CAGjB+I,QAHiB;MAKnB8R,cAAc,GAAGte,KAAK,CAACyM,WAAN,CACrB,UAAAC,OAAO,EAAI;WACFF,QAAQ,CAAC,UAAAf,GAAG,EAAI;gCAEhBA,GADL;QAEEsS,WAAW,EACT,OAAOrR,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACjB,GAAG,CAACsS,WAAL,CAAvC,GAA2DrR;;KAJlD,EAMZ4C,OAAO,CAACgP,cANI,CAAf;GAFmB,EAUrB,CAAC9R,QAAD,CAVqB,CAAvB;4BAcK/I,QADL;IAEE6a,cAAc,EAAdA;;;;ACnEJjT,YAAY,CAACkT,cAAb,GAA8B;EAC5BC,YAAY,EAAE;CADhB;AAIAxf,aAAa,CAACyf,SAAd,GAA0B,IAA1B;AAEA,IAAMjU,WAAS,GAAG,EAAlB;AAEA,IAAakU,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA1W,KAAK,EAAI;EACvCA,KAAK,CAAC2W,eAAN,GAAwB,EAAxB;EACA3W,KAAK,CAACkF,mBAAN,CAA0BlK,IAA1B,CAA+BkK,mBAA/B;CAFK;AAKPwR,gBAAgB,CAACzV,UAAjB,GAA8B,kBAA9B;;AAEA,IAAMiE,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAzJ,QAAQ,EAAI;EACtCiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,kBAA1D;MAGE+K,WAJoC,GASlC/K,QATkC,CAIpC+K,WAJoC;MAKpCoQ,eALoC,GASlCnb,QATkC,CAKpCmb,eALoC;MAM3BlR,cAN2B,GASlCjK,QATkC,CAMpCuE,KANoC,CAM3B0F,cAN2B;MAO3B6Q,cAP2B,GASlC9a,QATkC,CAOpCyI,KAPoC,CAO3BqS,cAP2B;MAQpC/R,QARoC,GASlC/I,QATkC,CAQpC+I,QARoC;EAWtCkB,cAAc,CAAC1K,IAAf,CAAoB,YAAM;WACjB;MACLiD,KAAK,EAAE;QACL4Y,QAAQ,EAAE;;KAFd;GADF;;MAQMC,YAAW,GAAG,SAAdA,WAAc,CAACta,CAAD,EAAIjB,MAAJ,EAAe;QAC3Bwb,eAAe,GAAGC,cAAc,CAACzb,MAAD,CAAtC;QACM0b,WAAW,GAAGF,eAAe,CAACpd,GAAhB,CAAoB,UAAA4B,MAAM;aAAIA,MAAM,CAAC6L,UAAX;KAA1B,CAApB;QACM8P,MAAM,GAAG1a,CAAC,CAAC2a,OAAjB;;QAEMC,WAAW,GAAG,SAAdA,WAAc,CAAA5a,CAAC,EAAI;UACjB6a,QAAQ,GAAG7a,CAAC,CAAC2a,OAAnB;UACMG,MAAM,GAAGD,QAAQ,GAAGH,MAA1B;UAEMK,gBAAgB,GAAGD,MAAM,GAAGP,eAAe,CAACtc,MAAlD;UAEM+c,eAAe,GAAG,EAAxB;MACAT,eAAe,CAACxc,OAAhB,CAAwB,UAACgB,MAAD,EAASxC,KAAT,EAAmB;QACzCye,eAAe,CAACjc,MAAM,CAACvC,EAAR,CAAf,GAA6BP,IAAI,CAACC,GAAL,CAC3Bue,WAAW,CAACle,KAAD,CAAX,GAAqBwe,gBADM,EAE3B,CAF2B,CAA7B;OADF;MAOA/S,QAAQ,CAAC,UAAAf,GAAG;kCACPA,GADO;UAEV8S,cAAc,qBACT9S,GAAG,CAAC8S,cADK;YAEZC,YAAY,qBACP/S,GAAG,CAAC8S,cAAJ,CAAmBC,YADZ,MAEPgB,eAFO;;;OAJR,CAAR;KAdF;;QA0BMC,SAAS,GAAG,SAAZA,SAAY,CAAAjb,CAAC,EAAI;MACrBkb,QAAQ,CAACC,mBAAT,CAA6B,WAA7B,EAA0CP,WAA1C;MACAM,QAAQ,CAACC,mBAAT,CAA6B,SAA7B,EAAwCF,SAAxC;MAEAjT,QAAQ,CAAC,UAAAf,GAAG;kCACPA,GADO;UAEV8S,cAAc,qBACT9S,GAAG,CAAC8S,cADK;YAEZW,MAAM,EAAE,IAFI;YAGZU,gBAAgB,EAAE;;;OALd,CAAR;KAJF;;IAcAF,QAAQ,CAACG,gBAAT,CAA0B,WAA1B,EAAuCT,WAAvC;IACAM,QAAQ,CAACG,gBAAT,CAA0B,SAA1B,EAAqCJ,SAArC;IAEAjT,QAAQ,CAAC,UAAAf,GAAG;gCACPA,GADO;QAEV8S,cAAc,qBACT9S,GAAG,CAAC8S,cADK;UAEZW,MAAM,EAANA,MAFY;UAGZU,gBAAgB,EAAErc,MAAM,CAACvC;;;KALrB,CAAR;GAhDF;;EA0DAwN,WAAW,CAACjM,OAAZ,CACG,UAAAkB,QAAQ;WAAI,UAAAF,MAAM,EAAI;UACfkb,SAAS,GAAGrZ,eAAe,CAC/B7B,MAAM,CAACqb,eAAP,KAA2B,IAA3B,GAAkC,KAAlC,GAA0CtQ,SADX,EAE/BsQ,eAAe,KAAK,IAApB,GAA2B,KAA3B,GAAmCtQ,SAFJ,EAG/B,IAH+B,CAAjC;MAMA/K,MAAM,CAACkb,SAAP,GAAmBA,SAAnB;MACAlb,MAAM,CAACjE,KAAP,GAAeif,cAAc,CAACC,YAAf,CAA4Bjb,MAAM,CAACvC,EAAnC,KAA0CuC,MAAM,CAACjE,KAAhE;MACAiE,MAAM,CAACuc,UAAP,GAAoBvB,cAAc,CAACqB,gBAAf,KAAoCrc,MAAM,CAACvC,EAA/D;;UAEIyd,SAAJ,EAAe;YACPsB,qBAAqB,GAAG3X,cAAc,CAC1C3E,QAAQ,CAACuE,KAAT,CAAe2W,eAD2B,EAE1Cpb,MAF0C,EAG1CE,QAH0C,CAA5C;;QAKAF,MAAM,CAACob,eAAP,GAAyB,UAAA/P,SAAS,EAAI;iBAC7BlH,UAAU,CACf;YACEoX,WAAW,EAAE,qBAAAta,CAAC;qBAAIA,CAAC,CAACkM,OAAF,MAAeoO,YAAW,CAACta,CAAD,EAAIjB,MAAJ,CAA9B;aADhB;YAEE0C,KAAK,EAAE;cACL3B,MAAM,EAAE;aAHZ;YAKE0b,SAAS,EAAE;WANE,EAQfD,qBARe,EASfnR,SATe,CAAjB;SADF;;KAjBK;GAAT,CA+BGnL,QA/BH,CADF;SAmCOA,QAAP;CAhHF;;AAmHA,SAASub,cAAT,CAAwBzb,MAAxB,EAAgC;MACxB0c,WAAW,GAAG,EAApB;;MACMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA3c,MAAM,EAAI;QAC1BA,MAAM,CAACnD,OAAP,IAAkBmD,MAAM,CAACnD,OAAP,CAAeqC,MAArC,EAA6C;MAC3Cc,MAAM,CAACnD,OAAP,CAAeuB,GAAf,CAAmBue,aAAnB;;;IAEFD,WAAW,CAACjd,IAAZ,CAAiBO,MAAjB;GAJF;;EAMA2c,aAAa,CAAC3c,MAAD,CAAb;SACO0c,WAAP;;;ACjJF,IAAMzV,WAAS,GAAG,EAAlB;AAEA,IAAa2V,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAnY,KAAK,EAAI;EACxCA,KAAK,CAACmF,OAAN,CAAcnK,IAAd,CAAmBmK,SAAnB;CADK;AAIPgT,iBAAiB,CAAClX,UAAlB,GAA+B,mBAA/B;;AAEA,IAAMkE,SAAO,GAAG,SAAVA,OAAU,CAAA1J,QAAQ,EAAI;EAC1BiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,mBAA1D;MAGEsL,iBAJwB,GAYtBtL,QAZsB,CAIxBsL,iBAJwB;wBAYtBtL,QAZsB,CAKxBuE,KALwB;MAMtBwF,WANsB,mBAMtBA,WANsB;MAOtBD,iBAPsB,mBAOtBA,iBAPsB;MAQtBE,mBARsB,mBAQtBA,mBARsB;MAStBC,cATsB,mBAStBA,cATsB;MAUtBC,YAVsB,mBAUtBA,YAVsB;MAcpByS,SAAS,GAAG;IAChBna,KAAK,EAAE;MACL4Y,QAAQ,EAAE,UADL;MAELvf,KAAK,YAAKyP,iBAAL;;GAHT;EAOAxB,iBAAiB,CAACvK,IAAlB,CAAuB;WAAMod,SAAN;GAAvB;EACA5S,WAAW,CAACxK,IAAZ,CAAiB;WAAMod,SAAN;GAAjB;EACA3S,mBAAmB,CAACzK,IAApB,CAAyB;WAAMod,SAAN;GAAzB,EAvB0B;;MA0BpBC,UAAU,GAAG;IACjBxB,QAAQ,EAAE,UADO;IAEjByB,GAAG,EAAE;GAFP;EAKA5S,cAAc,CAAC1K,IAAf,CAAoB,UAAAO,MAAM,EAAI;WACrB;MACL0C,KAAK,qBACAoa,UADA;QAEHja,IAAI,YAAK7C,MAAM,CAAC4L,SAAZ,OAFD;QAGH7P,KAAK,YAAKiE,MAAM,CAAC6L,UAAZ;;KAJT;GADF;EAUAzB,YAAY,CAAC3K,IAAb,CAAkB,UAAA9D,IAAI,EAAI;WACjB;MACL+G,KAAK,qBACAoa,UADA;QAEHja,IAAI,YAAKlH,IAAI,CAAC0B,MAAL,CAAYuO,SAAjB,OAFD;QAGH7P,KAAK,YAAKJ,IAAI,CAAC0B,MAAL,CAAYwO,UAAjB;;KAJT;GADF;SAUO3L,QAAP;CAnDF;;ACRA,IAAM+G,WAAS,GAAG,EAAlB;AAEA,IAAa+V,cAAc,GAAG,SAAjBA,cAAiB,CAAAvY,KAAK,EAAI;EACrCA,KAAK,CAACmF,OAAN,CAAcnK,IAAd,CAAmBmK,SAAnB;CADK;AAIPoT,cAAc,CAACtX,UAAf,GAA4B,gBAA5B;;AAEA,IAAMkE,SAAO,GAAG,SAAVA,OAAU,CAAA1J,QAAQ,EAAI;EAC1BiH,SAAS,CAACoB,cAAV,CAAyBtB,WAAzB,EAAoC/G,QAApC,EAA8C,UAA9C,EAA0D,gBAA1D;MAGEsL,iBAJwB,GAMtBtL,QANsB,CAIxBsL,iBAJwB;wBAMtBtL,QANsB,CAKxBuE,KALwB;MAKfwF,WALe,mBAKfA,WALe;MAKFC,mBALE,mBAKFA,mBALE;MAKmBC,cALnB,mBAKmBA,cALnB;MAKmCC,YALnC,mBAKmCA,YALnC;MAQpByS,SAAS,GAAG;IAChBna,KAAK,EAAE;MACLua,OAAO,EAAE,MADJ;MAELlhB,KAAK,YAAKyP,iBAAL;;GAHT;EAOAvB,WAAW,CAACxK,IAAZ,CAAiB;WAAMod,SAAN;GAAjB;EACA3S,mBAAmB,CAACzK,IAApB,CAAyB;WAAMod,SAAN;GAAzB;MAEMC,UAAU,GAAG;IACjBG,OAAO,EAAE,cADQ;IAEjBC,SAAS,EAAE;GAFb;EAKA/S,cAAc,CAAC1K,IAAf,CAAoB,UAAAO,MAAM,EAAI;WACrB;MACL0C,KAAK,qBACAoa,UADA;QAEH/gB,KAAK,YAAKiE,MAAM,CAAC6L,UAAZ;;KAHT;GADF;EASAzB,YAAY,CAAC3K,IAAb,CAAkB,UAAA9D,IAAI,EAAI;WACjB;MACL+G,KAAK,qBACAoa,UADA;QAEH/gB,KAAK,YAAKJ,IAAI,CAAC0B,MAAL,CAAYwO,UAAjB;;KAHT;GADF;SASO3L,QAAP;CAzCF;;;;"}